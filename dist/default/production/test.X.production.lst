

Microchip Technology PIC STD Macro Assembler V1.44 build -154322312 
                                                                                               Thu Nov 16 20:11:30 2017

Microchip Technology Omniscient Code Generator v1.44 (Standard mode) build 201709140600
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	sm
     4                           	psect	idataBANK0,global,class=CODE,delta=2,minocg
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,minocg
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,minocg
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,minocg
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2,minocg
    11                           	psect	swtext1,local,class=CONST,delta=2,minocg
    12                           	psect	intentry,global,class=CODE,delta=2,minocg
    13                           	psect	text29,local,class=CODE,merge=1,delta=2,minocg
    14                           	psect	text31,local,class=CODE,merge=1,delta=2,minocg
    15                           	psect	text32,local,class=CODE,merge=1,delta=2,minocg
    16                           	psect	swtext2,local,class=CONST,delta=2,minocg
    17                           	psect	text41,local,class=CODE,merge=1,delta=2,minocg
    18                           	psect	swtext3,local,class=CONST,delta=2,minocg
    19                           	psect	swtext4,local,class=CONST,delta=2,minocg
    20                           	psect	text45,local,class=CODE,merge=1,delta=2,minocg
    21                           	psect	swtext5,local,class=CONST,delta=2,minocg
    22                           	psect	swtext6,local,class=CONST,delta=2,minocg
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 1.44
    26                           ; Generated 14/09/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F1829 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  0111                     	;# 
   111  0112                     	;# 
   112  0113                     	;# 
   113  0114                     	;# 
   114  0115                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  011A                     	;# 
   120  011B                     	;# 
   121  011D                     	;# 
   122  011E                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  018E                     	;# 
   126  0191                     	;# 
   127  0191                     	;# 
   128  0192                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0194                     	;# 
   133  0195                     	;# 
   134  0196                     	;# 
   135  0199                     	;# 
   136  019A                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019C                     	;# 
   140  019D                     	;# 
   141  019E                     	;# 
   142  019F                     	;# 
   143  020C                     	;# 
   144  020D                     	;# 
   145  020E                     	;# 
   146  0211                     	;# 
   147  0211                     	;# 
   148  0212                     	;# 
   149  0212                     	;# 
   150  0213                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0216                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0217                     	;# 
   161  0219                     	;# 
   162  021A                     	;# 
   163  021B                     	;# 
   164  021C                     	;# 
   165  021D                     	;# 
   166  021E                     	;# 
   167  021F                     	;# 
   168  0291                     	;# 
   169  0291                     	;# 
   170  0292                     	;# 
   171  0293                     	;# 
   172  0294                     	;# 
   173  0295                     	;# 
   174  0295                     	;# 
   175  0296                     	;# 
   176  0298                     	;# 
   177  0298                     	;# 
   178  0299                     	;# 
   179  029A                     	;# 
   180  029B                     	;# 
   181  029C                     	;# 
   182  029D                     	;# 
   183  029E                     	;# 
   184  0311                     	;# 
   185  0311                     	;# 
   186  0312                     	;# 
   187  0313                     	;# 
   188  0318                     	;# 
   189  0318                     	;# 
   190  0319                     	;# 
   191  031A                     	;# 
   192  038C                     	;# 
   193  038D                     	;# 
   194  038E                     	;# 
   195  0391                     	;# 
   196  0392                     	;# 
   197  0393                     	;# 
   198  0394                     	;# 
   199  0395                     	;# 
   200  0396                     	;# 
   201  039A                     	;# 
   202  039C                     	;# 
   203  039D                     	;# 
   204  039E                     	;# 
   205  039F                     	;# 
   206  0415                     	;# 
   207  0416                     	;# 
   208  0417                     	;# 
   209  041C                     	;# 
   210  041D                     	;# 
   211  041E                     	;# 
   212  0FE4                     	;# 
   213  0FE5                     	;# 
   214  0FE6                     	;# 
   215  0FE7                     	;# 
   216  0FE8                     	;# 
   217  0FE9                     	;# 
   218  0FEA                     	;# 
   219  0FEB                     	;# 
   220  0FED                     	;# 
   221  0FEE                     	;# 
   222  0FEF                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  010E                     	;# 
   274  0111                     	;# 
   275  0112                     	;# 
   276  0113                     	;# 
   277  0114                     	;# 
   278  0115                     	;# 
   279  0116                     	;# 
   280  0117                     	;# 
   281  0118                     	;# 
   282  0119                     	;# 
   283  011A                     	;# 
   284  011B                     	;# 
   285  011D                     	;# 
   286  011E                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  018E                     	;# 
   290  0191                     	;# 
   291  0191                     	;# 
   292  0192                     	;# 
   293  0193                     	;# 
   294  0193                     	;# 
   295  0193                     	;# 
   296  0194                     	;# 
   297  0195                     	;# 
   298  0196                     	;# 
   299  0199                     	;# 
   300  019A                     	;# 
   301  019B                     	;# 
   302  019B                     	;# 
   303  019C                     	;# 
   304  019D                     	;# 
   305  019E                     	;# 
   306  019F                     	;# 
   307  020C                     	;# 
   308  020D                     	;# 
   309  020E                     	;# 
   310  0211                     	;# 
   311  0211                     	;# 
   312  0212                     	;# 
   313  0212                     	;# 
   314  0213                     	;# 
   315  0213                     	;# 
   316  0214                     	;# 
   317  0214                     	;# 
   318  0215                     	;# 
   319  0215                     	;# 
   320  0215                     	;# 
   321  0216                     	;# 
   322  0216                     	;# 
   323  0217                     	;# 
   324  0217                     	;# 
   325  0219                     	;# 
   326  021A                     	;# 
   327  021B                     	;# 
   328  021C                     	;# 
   329  021D                     	;# 
   330  021E                     	;# 
   331  021F                     	;# 
   332  0291                     	;# 
   333  0291                     	;# 
   334  0292                     	;# 
   335  0293                     	;# 
   336  0294                     	;# 
   337  0295                     	;# 
   338  0295                     	;# 
   339  0296                     	;# 
   340  0298                     	;# 
   341  0298                     	;# 
   342  0299                     	;# 
   343  029A                     	;# 
   344  029B                     	;# 
   345  029C                     	;# 
   346  029D                     	;# 
   347  029E                     	;# 
   348  0311                     	;# 
   349  0311                     	;# 
   350  0312                     	;# 
   351  0313                     	;# 
   352  0318                     	;# 
   353  0318                     	;# 
   354  0319                     	;# 
   355  031A                     	;# 
   356  038C                     	;# 
   357  038D                     	;# 
   358  038E                     	;# 
   359  0391                     	;# 
   360  0392                     	;# 
   361  0393                     	;# 
   362  0394                     	;# 
   363  0395                     	;# 
   364  0396                     	;# 
   365  039A                     	;# 
   366  039C                     	;# 
   367  039D                     	;# 
   368  039E                     	;# 
   369  039F                     	;# 
   370  0415                     	;# 
   371  0416                     	;# 
   372  0417                     	;# 
   373  041C                     	;# 
   374  041D                     	;# 
   375  041E                     	;# 
   376  0FE4                     	;# 
   377  0FE5                     	;# 
   378  0FE6                     	;# 
   379  0FE7                     	;# 
   380  0FE8                     	;# 
   381  0FE9                     	;# 
   382  0FEA                     	;# 
   383  0FEB                     	;# 
   384  0FED                     	;# 
   385  0FEE                     	;# 
   386  0FEF                     	;# 
   387  0000                     	;# 
   388  0001                     	;# 
   389  0002                     	;# 
   390  0003                     	;# 
   391  0004                     	;# 
   392  0005                     	;# 
   393  0006                     	;# 
   394  0007                     	;# 
   395  0008                     	;# 
   396  0009                     	;# 
   397  000A                     	;# 
   398  000B                     	;# 
   399  000C                     	;# 
   400  000D                     	;# 
   401  000E                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001E                     	;# 
   416  001F                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0094                     	;# 
   424  0095                     	;# 
   425  0096                     	;# 
   426  0097                     	;# 
   427  0098                     	;# 
   428  0099                     	;# 
   429  009A                     	;# 
   430  009B                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  0111                     	;# 
   439  0112                     	;# 
   440  0113                     	;# 
   441  0114                     	;# 
   442  0115                     	;# 
   443  0116                     	;# 
   444  0117                     	;# 
   445  0118                     	;# 
   446  0119                     	;# 
   447  011A                     	;# 
   448  011B                     	;# 
   449  011D                     	;# 
   450  011E                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  018E                     	;# 
   454  0191                     	;# 
   455  0191                     	;# 
   456  0192                     	;# 
   457  0193                     	;# 
   458  0193                     	;# 
   459  0193                     	;# 
   460  0194                     	;# 
   461  0195                     	;# 
   462  0196                     	;# 
   463  0199                     	;# 
   464  019A                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019C                     	;# 
   468  019D                     	;# 
   469  019E                     	;# 
   470  019F                     	;# 
   471  020C                     	;# 
   472  020D                     	;# 
   473  020E                     	;# 
   474  0211                     	;# 
   475  0211                     	;# 
   476  0212                     	;# 
   477  0212                     	;# 
   478  0213                     	;# 
   479  0213                     	;# 
   480  0214                     	;# 
   481  0214                     	;# 
   482  0215                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0216                     	;# 
   486  0216                     	;# 
   487  0217                     	;# 
   488  0217                     	;# 
   489  0219                     	;# 
   490  021A                     	;# 
   491  021B                     	;# 
   492  021C                     	;# 
   493  021D                     	;# 
   494  021E                     	;# 
   495  021F                     	;# 
   496  0291                     	;# 
   497  0291                     	;# 
   498  0292                     	;# 
   499  0293                     	;# 
   500  0294                     	;# 
   501  0295                     	;# 
   502  0295                     	;# 
   503  0296                     	;# 
   504  0298                     	;# 
   505  0298                     	;# 
   506  0299                     	;# 
   507  029A                     	;# 
   508  029B                     	;# 
   509  029C                     	;# 
   510  029D                     	;# 
   511  029E                     	;# 
   512  0311                     	;# 
   513  0311                     	;# 
   514  0312                     	;# 
   515  0313                     	;# 
   516  0318                     	;# 
   517  0318                     	;# 
   518  0319                     	;# 
   519  031A                     	;# 
   520  038C                     	;# 
   521  038D                     	;# 
   522  038E                     	;# 
   523  0391                     	;# 
   524  0392                     	;# 
   525  0393                     	;# 
   526  0394                     	;# 
   527  0395                     	;# 
   528  0396                     	;# 
   529  039A                     	;# 
   530  039C                     	;# 
   531  039D                     	;# 
   532  039E                     	;# 
   533  039F                     	;# 
   534  0415                     	;# 
   535  0416                     	;# 
   536  0417                     	;# 
   537  041C                     	;# 
   538  041D                     	;# 
   539  041E                     	;# 
   540  0FE4                     	;# 
   541  0FE5                     	;# 
   542  0FE6                     	;# 
   543  0FE7                     	;# 
   544  0FE8                     	;# 
   545  0FE9                     	;# 
   546  0FEA                     	;# 
   547  0FEB                     	;# 
   548  0FED                     	;# 
   549  0FEE                     	;# 
   550  0FEF                     	;# 
   551  0000                     	;# 
   552  0001                     	;# 
   553  0002                     	;# 
   554  0003                     	;# 
   555  0004                     	;# 
   556  0005                     	;# 
   557  0006                     	;# 
   558  0007                     	;# 
   559  0008                     	;# 
   560  0009                     	;# 
   561  000A                     	;# 
   562  000B                     	;# 
   563  000C                     	;# 
   564  000D                     	;# 
   565  000E                     	;# 
   566  0011                     	;# 
   567  0012                     	;# 
   568  0013                     	;# 
   569  0014                     	;# 
   570  0015                     	;# 
   571  0016                     	;# 
   572  0016                     	;# 
   573  0017                     	;# 
   574  0018                     	;# 
   575  0019                     	;# 
   576  001A                     	;# 
   577  001B                     	;# 
   578  001C                     	;# 
   579  001E                     	;# 
   580  001F                     	;# 
   581  008C                     	;# 
   582  008D                     	;# 
   583  008E                     	;# 
   584  0091                     	;# 
   585  0092                     	;# 
   586  0093                     	;# 
   587  0094                     	;# 
   588  0095                     	;# 
   589  0096                     	;# 
   590  0097                     	;# 
   591  0098                     	;# 
   592  0099                     	;# 
   593  009A                     	;# 
   594  009B                     	;# 
   595  009B                     	;# 
   596  009C                     	;# 
   597  009D                     	;# 
   598  009E                     	;# 
   599  010C                     	;# 
   600  010D                     	;# 
   601  010E                     	;# 
   602  0111                     	;# 
   603  0112                     	;# 
   604  0113                     	;# 
   605  0114                     	;# 
   606  0115                     	;# 
   607  0116                     	;# 
   608  0117                     	;# 
   609  0118                     	;# 
   610  0119                     	;# 
   611  011A                     	;# 
   612  011B                     	;# 
   613  011D                     	;# 
   614  011E                     	;# 
   615  018C                     	;# 
   616  018D                     	;# 
   617  018E                     	;# 
   618  0191                     	;# 
   619  0191                     	;# 
   620  0192                     	;# 
   621  0193                     	;# 
   622  0193                     	;# 
   623  0193                     	;# 
   624  0194                     	;# 
   625  0195                     	;# 
   626  0196                     	;# 
   627  0199                     	;# 
   628  019A                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019C                     	;# 
   632  019D                     	;# 
   633  019E                     	;# 
   634  019F                     	;# 
   635  020C                     	;# 
   636  020D                     	;# 
   637  020E                     	;# 
   638  0211                     	;# 
   639  0211                     	;# 
   640  0212                     	;# 
   641  0212                     	;# 
   642  0213                     	;# 
   643  0213                     	;# 
   644  0214                     	;# 
   645  0214                     	;# 
   646  0215                     	;# 
   647  0215                     	;# 
   648  0215                     	;# 
   649  0216                     	;# 
   650  0216                     	;# 
   651  0217                     	;# 
   652  0217                     	;# 
   653  0219                     	;# 
   654  021A                     	;# 
   655  021B                     	;# 
   656  021C                     	;# 
   657  021D                     	;# 
   658  021E                     	;# 
   659  021F                     	;# 
   660  0291                     	;# 
   661  0291                     	;# 
   662  0292                     	;# 
   663  0293                     	;# 
   664  0294                     	;# 
   665  0295                     	;# 
   666  0295                     	;# 
   667  0296                     	;# 
   668  0298                     	;# 
   669  0298                     	;# 
   670  0299                     	;# 
   671  029A                     	;# 
   672  029B                     	;# 
   673  029C                     	;# 
   674  029D                     	;# 
   675  029E                     	;# 
   676  0311                     	;# 
   677  0311                     	;# 
   678  0312                     	;# 
   679  0313                     	;# 
   680  0318                     	;# 
   681  0318                     	;# 
   682  0319                     	;# 
   683  031A                     	;# 
   684  038C                     	;# 
   685  038D                     	;# 
   686  038E                     	;# 
   687  0391                     	;# 
   688  0392                     	;# 
   689  0393                     	;# 
   690  0394                     	;# 
   691  0395                     	;# 
   692  0396                     	;# 
   693  039A                     	;# 
   694  039C                     	;# 
   695  039D                     	;# 
   696  039E                     	;# 
   697  039F                     	;# 
   698  0415                     	;# 
   699  0416                     	;# 
   700  0417                     	;# 
   701  041C                     	;# 
   702  041D                     	;# 
   703  041E                     	;# 
   704  0FE4                     	;# 
   705  0FE5                     	;# 
   706  0FE6                     	;# 
   707  0FE7                     	;# 
   708  0FE8                     	;# 
   709  0FE9                     	;# 
   710  0FEA                     	;# 
   711  0FEB                     	;# 
   712  0FED                     	;# 
   713  0FEE                     	;# 
   714  0FEF                     	;# 
   715  0000                     	;# 
   716  0001                     	;# 
   717  0002                     	;# 
   718  0003                     	;# 
   719  0004                     	;# 
   720  0005                     	;# 
   721  0006                     	;# 
   722  0007                     	;# 
   723  0008                     	;# 
   724  0009                     	;# 
   725  000A                     	;# 
   726  000B                     	;# 
   727  000C                     	;# 
   728  000D                     	;# 
   729  000E                     	;# 
   730  0011                     	;# 
   731  0012                     	;# 
   732  0013                     	;# 
   733  0014                     	;# 
   734  0015                     	;# 
   735  0016                     	;# 
   736  0016                     	;# 
   737  0017                     	;# 
   738  0018                     	;# 
   739  0019                     	;# 
   740  001A                     	;# 
   741  001B                     	;# 
   742  001C                     	;# 
   743  001E                     	;# 
   744  001F                     	;# 
   745  008C                     	;# 
   746  008D                     	;# 
   747  008E                     	;# 
   748  0091                     	;# 
   749  0092                     	;# 
   750  0093                     	;# 
   751  0094                     	;# 
   752  0095                     	;# 
   753  0096                     	;# 
   754  0097                     	;# 
   755  0098                     	;# 
   756  0099                     	;# 
   757  009A                     	;# 
   758  009B                     	;# 
   759  009B                     	;# 
   760  009C                     	;# 
   761  009D                     	;# 
   762  009E                     	;# 
   763  010C                     	;# 
   764  010D                     	;# 
   765  010E                     	;# 
   766  0111                     	;# 
   767  0112                     	;# 
   768  0113                     	;# 
   769  0114                     	;# 
   770  0115                     	;# 
   771  0116                     	;# 
   772  0117                     	;# 
   773  0118                     	;# 
   774  0119                     	;# 
   775  011A                     	;# 
   776  011B                     	;# 
   777  011D                     	;# 
   778  011E                     	;# 
   779  018C                     	;# 
   780  018D                     	;# 
   781  018E                     	;# 
   782  0191                     	;# 
   783  0191                     	;# 
   784  0192                     	;# 
   785  0193                     	;# 
   786  0193                     	;# 
   787  0193                     	;# 
   788  0194                     	;# 
   789  0195                     	;# 
   790  0196                     	;# 
   791  0199                     	;# 
   792  019A                     	;# 
   793  019B                     	;# 
   794  019B                     	;# 
   795  019C                     	;# 
   796  019D                     	;# 
   797  019E                     	;# 
   798  019F                     	;# 
   799  020C                     	;# 
   800  020D                     	;# 
   801  020E                     	;# 
   802  0211                     	;# 
   803  0211                     	;# 
   804  0212                     	;# 
   805  0212                     	;# 
   806  0213                     	;# 
   807  0213                     	;# 
   808  0214                     	;# 
   809  0214                     	;# 
   810  0215                     	;# 
   811  0215                     	;# 
   812  0215                     	;# 
   813  0216                     	;# 
   814  0216                     	;# 
   815  0217                     	;# 
   816  0217                     	;# 
   817  0219                     	;# 
   818  021A                     	;# 
   819  021B                     	;# 
   820  021C                     	;# 
   821  021D                     	;# 
   822  021E                     	;# 
   823  021F                     	;# 
   824  0291                     	;# 
   825  0291                     	;# 
   826  0292                     	;# 
   827  0293                     	;# 
   828  0294                     	;# 
   829  0295                     	;# 
   830  0295                     	;# 
   831  0296                     	;# 
   832  0298                     	;# 
   833  0298                     	;# 
   834  0299                     	;# 
   835  029A                     	;# 
   836  029B                     	;# 
   837  029C                     	;# 
   838  029D                     	;# 
   839  029E                     	;# 
   840  0311                     	;# 
   841  0311                     	;# 
   842  0312                     	;# 
   843  0313                     	;# 
   844  0318                     	;# 
   845  0318                     	;# 
   846  0319                     	;# 
   847  031A                     	;# 
   848  038C                     	;# 
   849  038D                     	;# 
   850  038E                     	;# 
   851  0391                     	;# 
   852  0392                     	;# 
   853  0393                     	;# 
   854  0394                     	;# 
   855  0395                     	;# 
   856  0396                     	;# 
   857  039A                     	;# 
   858  039C                     	;# 
   859  039D                     	;# 
   860  039E                     	;# 
   861  039F                     	;# 
   862  0415                     	;# 
   863  0416                     	;# 
   864  0417                     	;# 
   865  041C                     	;# 
   866  041D                     	;# 
   867  041E                     	;# 
   868  0FE4                     	;# 
   869  0FE5                     	;# 
   870  0FE6                     	;# 
   871  0FE7                     	;# 
   872  0FE8                     	;# 
   873  0FE9                     	;# 
   874  0FEA                     	;# 
   875  0FEB                     	;# 
   876  0FED                     	;# 
   877  0FEE                     	;# 
   878  0FEF                     	;# 
   879  0000                     	;# 
   880  0001                     	;# 
   881  0002                     	;# 
   882  0003                     	;# 
   883  0004                     	;# 
   884  0005                     	;# 
   885  0006                     	;# 
   886  0007                     	;# 
   887  0008                     	;# 
   888  0009                     	;# 
   889  000A                     	;# 
   890  000B                     	;# 
   891  000C                     	;# 
   892  000D                     	;# 
   893  000E                     	;# 
   894  0011                     	;# 
   895  0012                     	;# 
   896  0013                     	;# 
   897  0014                     	;# 
   898  0015                     	;# 
   899  0016                     	;# 
   900  0016                     	;# 
   901  0017                     	;# 
   902  0018                     	;# 
   903  0019                     	;# 
   904  001A                     	;# 
   905  001B                     	;# 
   906  001C                     	;# 
   907  001E                     	;# 
   908  001F                     	;# 
   909  008C                     	;# 
   910  008D                     	;# 
   911  008E                     	;# 
   912  0091                     	;# 
   913  0092                     	;# 
   914  0093                     	;# 
   915  0094                     	;# 
   916  0095                     	;# 
   917  0096                     	;# 
   918  0097                     	;# 
   919  0098                     	;# 
   920  0099                     	;# 
   921  009A                     	;# 
   922  009B                     	;# 
   923  009B                     	;# 
   924  009C                     	;# 
   925  009D                     	;# 
   926  009E                     	;# 
   927  010C                     	;# 
   928  010D                     	;# 
   929  010E                     	;# 
   930  0111                     	;# 
   931  0112                     	;# 
   932  0113                     	;# 
   933  0114                     	;# 
   934  0115                     	;# 
   935  0116                     	;# 
   936  0117                     	;# 
   937  0118                     	;# 
   938  0119                     	;# 
   939  011A                     	;# 
   940  011B                     	;# 
   941  011D                     	;# 
   942  011E                     	;# 
   943  018C                     	;# 
   944  018D                     	;# 
   945  018E                     	;# 
   946  0191                     	;# 
   947  0191                     	;# 
   948  0192                     	;# 
   949  0193                     	;# 
   950  0193                     	;# 
   951  0193                     	;# 
   952  0194                     	;# 
   953  0195                     	;# 
   954  0196                     	;# 
   955  0199                     	;# 
   956  019A                     	;# 
   957  019B                     	;# 
   958  019B                     	;# 
   959  019C                     	;# 
   960  019D                     	;# 
   961  019E                     	;# 
   962  019F                     	;# 
   963  020C                     	;# 
   964  020D                     	;# 
   965  020E                     	;# 
   966  0211                     	;# 
   967  0211                     	;# 
   968  0212                     	;# 
   969  0212                     	;# 
   970  0213                     	;# 
   971  0213                     	;# 
   972  0214                     	;# 
   973  0214                     	;# 
   974  0215                     	;# 
   975  0215                     	;# 
   976  0215                     	;# 
   977  0216                     	;# 
   978  0216                     	;# 
   979  0217                     	;# 
   980  0217                     	;# 
   981  0219                     	;# 
   982  021A                     	;# 
   983  021B                     	;# 
   984  021C                     	;# 
   985  021D                     	;# 
   986  021E                     	;# 
   987  021F                     	;# 
   988  0291                     	;# 
   989  0291                     	;# 
   990  0292                     	;# 
   991  0293                     	;# 
   992  0294                     	;# 
   993  0295                     	;# 
   994  0295                     	;# 
   995  0296                     	;# 
   996  0298                     	;# 
   997  0298                     	;# 
   998  0299                     	;# 
   999  029A                     	;# 
  1000  029B                     	;# 
  1001  029C                     	;# 
  1002  029D                     	;# 
  1003  029E                     	;# 
  1004  0311                     	;# 
  1005  0311                     	;# 
  1006  0312                     	;# 
  1007  0313                     	;# 
  1008  0318                     	;# 
  1009  0318                     	;# 
  1010  0319                     	;# 
  1011  031A                     	;# 
  1012  038C                     	;# 
  1013  038D                     	;# 
  1014  038E                     	;# 
  1015  0391                     	;# 
  1016  0392                     	;# 
  1017  0393                     	;# 
  1018  0394                     	;# 
  1019  0395                     	;# 
  1020  0396                     	;# 
  1021  039A                     	;# 
  1022  039C                     	;# 
  1023  039D                     	;# 
  1024  039E                     	;# 
  1025  039F                     	;# 
  1026  0415                     	;# 
  1027  0416                     	;# 
  1028  0417                     	;# 
  1029  041C                     	;# 
  1030  041D                     	;# 
  1031  041E                     	;# 
  1032  0FE4                     	;# 
  1033  0FE5                     	;# 
  1034  0FE6                     	;# 
  1035  0FE7                     	;# 
  1036  0FE8                     	;# 
  1037  0FE9                     	;# 
  1038  0FEA                     	;# 
  1039  0FEB                     	;# 
  1040  0FED                     	;# 
  1041  0FEE                     	;# 
  1042  0FEF                     	;# 
  1043  0000                     	;# 
  1044  0001                     	;# 
  1045  0002                     	;# 
  1046  0003                     	;# 
  1047  0004                     	;# 
  1048  0005                     	;# 
  1049  0006                     	;# 
  1050  0007                     	;# 
  1051  0008                     	;# 
  1052  0009                     	;# 
  1053  000A                     	;# 
  1054  000B                     	;# 
  1055  000C                     	;# 
  1056  000D                     	;# 
  1057  000E                     	;# 
  1058  0011                     	;# 
  1059  0012                     	;# 
  1060  0013                     	;# 
  1061  0014                     	;# 
  1062  0015                     	;# 
  1063  0016                     	;# 
  1064  0016                     	;# 
  1065  0017                     	;# 
  1066  0018                     	;# 
  1067  0019                     	;# 
  1068  001A                     	;# 
  1069  001B                     	;# 
  1070  001C                     	;# 
  1071  001E                     	;# 
  1072  001F                     	;# 
  1073  008C                     	;# 
  1074  008D                     	;# 
  1075  008E                     	;# 
  1076  0091                     	;# 
  1077  0092                     	;# 
  1078  0093                     	;# 
  1079  0094                     	;# 
  1080  0095                     	;# 
  1081  0096                     	;# 
  1082  0097                     	;# 
  1083  0098                     	;# 
  1084  0099                     	;# 
  1085  009A                     	;# 
  1086  009B                     	;# 
  1087  009B                     	;# 
  1088  009C                     	;# 
  1089  009D                     	;# 
  1090  009E                     	;# 
  1091  010C                     	;# 
  1092  010D                     	;# 
  1093  010E                     	;# 
  1094  0111                     	;# 
  1095  0112                     	;# 
  1096  0113                     	;# 
  1097  0114                     	;# 
  1098  0115                     	;# 
  1099  0116                     	;# 
  1100  0117                     	;# 
  1101  0118                     	;# 
  1102  0119                     	;# 
  1103  011A                     	;# 
  1104  011B                     	;# 
  1105  011D                     	;# 
  1106  011E                     	;# 
  1107  018C                     	;# 
  1108  018D                     	;# 
  1109  018E                     	;# 
  1110  0191                     	;# 
  1111  0191                     	;# 
  1112  0192                     	;# 
  1113  0193                     	;# 
  1114  0193                     	;# 
  1115  0193                     	;# 
  1116  0194                     	;# 
  1117  0195                     	;# 
  1118  0196                     	;# 
  1119  0199                     	;# 
  1120  019A                     	;# 
  1121  019B                     	;# 
  1122  019B                     	;# 
  1123  019C                     	;# 
  1124  019D                     	;# 
  1125  019E                     	;# 
  1126  019F                     	;# 
  1127  020C                     	;# 
  1128  020D                     	;# 
  1129  020E                     	;# 
  1130  0211                     	;# 
  1131  0211                     	;# 
  1132  0212                     	;# 
  1133  0212                     	;# 
  1134  0213                     	;# 
  1135  0213                     	;# 
  1136  0214                     	;# 
  1137  0214                     	;# 
  1138  0215                     	;# 
  1139  0215                     	;# 
  1140  0215                     	;# 
  1141  0216                     	;# 
  1142  0216                     	;# 
  1143  0217                     	;# 
  1144  0217                     	;# 
  1145  0219                     	;# 
  1146  021A                     	;# 
  1147  021B                     	;# 
  1148  021C                     	;# 
  1149  021D                     	;# 
  1150  021E                     	;# 
  1151  021F                     	;# 
  1152  0291                     	;# 
  1153  0291                     	;# 
  1154  0292                     	;# 
  1155  0293                     	;# 
  1156  0294                     	;# 
  1157  0295                     	;# 
  1158  0295                     	;# 
  1159  0296                     	;# 
  1160  0298                     	;# 
  1161  0298                     	;# 
  1162  0299                     	;# 
  1163  029A                     	;# 
  1164  029B                     	;# 
  1165  029C                     	;# 
  1166  029D                     	;# 
  1167  029E                     	;# 
  1168  0311                     	;# 
  1169  0311                     	;# 
  1170  0312                     	;# 
  1171  0313                     	;# 
  1172  0318                     	;# 
  1173  0318                     	;# 
  1174  0319                     	;# 
  1175  031A                     	;# 
  1176  038C                     	;# 
  1177  038D                     	;# 
  1178  038E                     	;# 
  1179  0391                     	;# 
  1180  0392                     	;# 
  1181  0393                     	;# 
  1182  0394                     	;# 
  1183  0395                     	;# 
  1184  0396                     	;# 
  1185  039A                     	;# 
  1186  039C                     	;# 
  1187  039D                     	;# 
  1188  039E                     	;# 
  1189  039F                     	;# 
  1190  0415                     	;# 
  1191  0416                     	;# 
  1192  0417                     	;# 
  1193  041C                     	;# 
  1194  041D                     	;# 
  1195  041E                     	;# 
  1196  0FE4                     	;# 
  1197  0FE5                     	;# 
  1198  0FE6                     	;# 
  1199  0FE7                     	;# 
  1200  0FE8                     	;# 
  1201  0FE9                     	;# 
  1202  0FEA                     	;# 
  1203  0FEB                     	;# 
  1204  0FED                     	;# 
  1205  0FEE                     	;# 
  1206  0FEF                     	;# 
  1207  0000                     	;# 
  1208  0001                     	;# 
  1209  0002                     	;# 
  1210  0003                     	;# 
  1211  0004                     	;# 
  1212  0005                     	;# 
  1213  0006                     	;# 
  1214  0007                     	;# 
  1215  0008                     	;# 
  1216  0009                     	;# 
  1217  000A                     	;# 
  1218  000B                     	;# 
  1219  000C                     	;# 
  1220  000D                     	;# 
  1221  000E                     	;# 
  1222  0011                     	;# 
  1223  0012                     	;# 
  1224  0013                     	;# 
  1225  0014                     	;# 
  1226  0015                     	;# 
  1227  0016                     	;# 
  1228  0016                     	;# 
  1229  0017                     	;# 
  1230  0018                     	;# 
  1231  0019                     	;# 
  1232  001A                     	;# 
  1233  001B                     	;# 
  1234  001C                     	;# 
  1235  001E                     	;# 
  1236  001F                     	;# 
  1237  008C                     	;# 
  1238  008D                     	;# 
  1239  008E                     	;# 
  1240  0091                     	;# 
  1241  0092                     	;# 
  1242  0093                     	;# 
  1243  0094                     	;# 
  1244  0095                     	;# 
  1245  0096                     	;# 
  1246  0097                     	;# 
  1247  0098                     	;# 
  1248  0099                     	;# 
  1249  009A                     	;# 
  1250  009B                     	;# 
  1251  009B                     	;# 
  1252  009C                     	;# 
  1253  009D                     	;# 
  1254  009E                     	;# 
  1255  010C                     	;# 
  1256  010D                     	;# 
  1257  010E                     	;# 
  1258  0111                     	;# 
  1259  0112                     	;# 
  1260  0113                     	;# 
  1261  0114                     	;# 
  1262  0115                     	;# 
  1263  0116                     	;# 
  1264  0117                     	;# 
  1265  0118                     	;# 
  1266  0119                     	;# 
  1267  011A                     	;# 
  1268  011B                     	;# 
  1269  011D                     	;# 
  1270  011E                     	;# 
  1271  018C                     	;# 
  1272  018D                     	;# 
  1273  018E                     	;# 
  1274  0191                     	;# 
  1275  0191                     	;# 
  1276  0192                     	;# 
  1277  0193                     	;# 
  1278  0193                     	;# 
  1279  0193                     	;# 
  1280  0194                     	;# 
  1281  0195                     	;# 
  1282  0196                     	;# 
  1283  0199                     	;# 
  1284  019A                     	;# 
  1285  019B                     	;# 
  1286  019B                     	;# 
  1287  019C                     	;# 
  1288  019D                     	;# 
  1289  019E                     	;# 
  1290  019F                     	;# 
  1291  020C                     	;# 
  1292  020D                     	;# 
  1293  020E                     	;# 
  1294  0211                     	;# 
  1295  0211                     	;# 
  1296  0212                     	;# 
  1297  0212                     	;# 
  1298  0213                     	;# 
  1299  0213                     	;# 
  1300  0214                     	;# 
  1301  0214                     	;# 
  1302  0215                     	;# 
  1303  0215                     	;# 
  1304  0215                     	;# 
  1305  0216                     	;# 
  1306  0216                     	;# 
  1307  0217                     	;# 
  1308  0217                     	;# 
  1309  0219                     	;# 
  1310  021A                     	;# 
  1311  021B                     	;# 
  1312  021C                     	;# 
  1313  021D                     	;# 
  1314  021E                     	;# 
  1315  021F                     	;# 
  1316  0291                     	;# 
  1317  0291                     	;# 
  1318  0292                     	;# 
  1319  0293                     	;# 
  1320  0294                     	;# 
  1321  0295                     	;# 
  1322  0295                     	;# 
  1323  0296                     	;# 
  1324  0298                     	;# 
  1325  0298                     	;# 
  1326  0299                     	;# 
  1327  029A                     	;# 
  1328  029B                     	;# 
  1329  029C                     	;# 
  1330  029D                     	;# 
  1331  029E                     	;# 
  1332  0311                     	;# 
  1333  0311                     	;# 
  1334  0312                     	;# 
  1335  0313                     	;# 
  1336  0318                     	;# 
  1337  0318                     	;# 
  1338  0319                     	;# 
  1339  031A                     	;# 
  1340  038C                     	;# 
  1341  038D                     	;# 
  1342  038E                     	;# 
  1343  0391                     	;# 
  1344  0392                     	;# 
  1345  0393                     	;# 
  1346  0394                     	;# 
  1347  0395                     	;# 
  1348  0396                     	;# 
  1349  039A                     	;# 
  1350  039C                     	;# 
  1351  039D                     	;# 
  1352  039E                     	;# 
  1353  039F                     	;# 
  1354  0415                     	;# 
  1355  0416                     	;# 
  1356  0417                     	;# 
  1357  041C                     	;# 
  1358  041D                     	;# 
  1359  041E                     	;# 
  1360  0FE4                     	;# 
  1361  0FE5                     	;# 
  1362  0FE6                     	;# 
  1363  0FE7                     	;# 
  1364  0FE8                     	;# 
  1365  0FE9                     	;# 
  1366  0FEA                     	;# 
  1367  0FEB                     	;# 
  1368  0FED                     	;# 
  1369  0FEE                     	;# 
  1370  0FEF                     	;# 
  1371  0000                     	;# 
  1372  0001                     	;# 
  1373  0002                     	;# 
  1374  0003                     	;# 
  1375  0004                     	;# 
  1376  0005                     	;# 
  1377  0006                     	;# 
  1378  0007                     	;# 
  1379  0008                     	;# 
  1380  0009                     	;# 
  1381  000A                     	;# 
  1382  000B                     	;# 
  1383  000C                     	;# 
  1384  000D                     	;# 
  1385  000E                     	;# 
  1386  0011                     	;# 
  1387  0012                     	;# 
  1388  0013                     	;# 
  1389  0014                     	;# 
  1390  0015                     	;# 
  1391  0016                     	;# 
  1392  0016                     	;# 
  1393  0017                     	;# 
  1394  0018                     	;# 
  1395  0019                     	;# 
  1396  001A                     	;# 
  1397  001B                     	;# 
  1398  001C                     	;# 
  1399  001E                     	;# 
  1400  001F                     	;# 
  1401  008C                     	;# 
  1402  008D                     	;# 
  1403  008E                     	;# 
  1404  0091                     	;# 
  1405  0092                     	;# 
  1406  0093                     	;# 
  1407  0094                     	;# 
  1408  0095                     	;# 
  1409  0096                     	;# 
  1410  0097                     	;# 
  1411  0098                     	;# 
  1412  0099                     	;# 
  1413  009A                     	;# 
  1414  009B                     	;# 
  1415  009B                     	;# 
  1416  009C                     	;# 
  1417  009D                     	;# 
  1418  009E                     	;# 
  1419  010C                     	;# 
  1420  010D                     	;# 
  1421  010E                     	;# 
  1422  0111                     	;# 
  1423  0112                     	;# 
  1424  0113                     	;# 
  1425  0114                     	;# 
  1426  0115                     	;# 
  1427  0116                     	;# 
  1428  0117                     	;# 
  1429  0118                     	;# 
  1430  0119                     	;# 
  1431  011A                     	;# 
  1432  011B                     	;# 
  1433  011D                     	;# 
  1434  011E                     	;# 
  1435  018C                     	;# 
  1436  018D                     	;# 
  1437  018E                     	;# 
  1438  0191                     	;# 
  1439  0191                     	;# 
  1440  0192                     	;# 
  1441  0193                     	;# 
  1442  0193                     	;# 
  1443  0193                     	;# 
  1444  0194                     	;# 
  1445  0195                     	;# 
  1446  0196                     	;# 
  1447  0199                     	;# 
  1448  019A                     	;# 
  1449  019B                     	;# 
  1450  019B                     	;# 
  1451  019C                     	;# 
  1452  019D                     	;# 
  1453  019E                     	;# 
  1454  019F                     	;# 
  1455  020C                     	;# 
  1456  020D                     	;# 
  1457  020E                     	;# 
  1458  0211                     	;# 
  1459  0211                     	;# 
  1460  0212                     	;# 
  1461  0212                     	;# 
  1462  0213                     	;# 
  1463  0213                     	;# 
  1464  0214                     	;# 
  1465  0214                     	;# 
  1466  0215                     	;# 
  1467  0215                     	;# 
  1468  0215                     	;# 
  1469  0216                     	;# 
  1470  0216                     	;# 
  1471  0217                     	;# 
  1472  0217                     	;# 
  1473  0219                     	;# 
  1474  021A                     	;# 
  1475  021B                     	;# 
  1476  021C                     	;# 
  1477  021D                     	;# 
  1478  021E                     	;# 
  1479  021F                     	;# 
  1480  0291                     	;# 
  1481  0291                     	;# 
  1482  0292                     	;# 
  1483  0293                     	;# 
  1484  0294                     	;# 
  1485  0295                     	;# 
  1486  0295                     	;# 
  1487  0296                     	;# 
  1488  0298                     	;# 
  1489  0298                     	;# 
  1490  0299                     	;# 
  1491  029A                     	;# 
  1492  029B                     	;# 
  1493  029C                     	;# 
  1494  029D                     	;# 
  1495  029E                     	;# 
  1496  0311                     	;# 
  1497  0311                     	;# 
  1498  0312                     	;# 
  1499  0313                     	;# 
  1500  0318                     	;# 
  1501  0318                     	;# 
  1502  0319                     	;# 
  1503  031A                     	;# 
  1504  038C                     	;# 
  1505  038D                     	;# 
  1506  038E                     	;# 
  1507  0391                     	;# 
  1508  0392                     	;# 
  1509  0393                     	;# 
  1510  0394                     	;# 
  1511  0395                     	;# 
  1512  0396                     	;# 
  1513  039A                     	;# 
  1514  039C                     	;# 
  1515  039D                     	;# 
  1516  039E                     	;# 
  1517  039F                     	;# 
  1518  0415                     	;# 
  1519  0416                     	;# 
  1520  0417                     	;# 
  1521  041C                     	;# 
  1522  041D                     	;# 
  1523  041E                     	;# 
  1524  0FE4                     	;# 
  1525  0FE5                     	;# 
  1526  0FE6                     	;# 
  1527  0FE7                     	;# 
  1528  0FE8                     	;# 
  1529  0FE9                     	;# 
  1530  0FEA                     	;# 
  1531  0FEB                     	;# 
  1532  0FED                     	;# 
  1533  0FEE                     	;# 
  1534  0FEF                     	;# 
  1535  0000                     	;# 
  1536  0001                     	;# 
  1537  0002                     	;# 
  1538  0003                     	;# 
  1539  0004                     	;# 
  1540  0005                     	;# 
  1541  0006                     	;# 
  1542  0007                     	;# 
  1543  0008                     	;# 
  1544  0009                     	;# 
  1545  000A                     	;# 
  1546  000B                     	;# 
  1547  000C                     	;# 
  1548  000D                     	;# 
  1549  000E                     	;# 
  1550  0011                     	;# 
  1551  0012                     	;# 
  1552  0013                     	;# 
  1553  0014                     	;# 
  1554  0015                     	;# 
  1555  0016                     	;# 
  1556  0016                     	;# 
  1557  0017                     	;# 
  1558  0018                     	;# 
  1559  0019                     	;# 
  1560  001A                     	;# 
  1561  001B                     	;# 
  1562  001C                     	;# 
  1563  001E                     	;# 
  1564  001F                     	;# 
  1565  008C                     	;# 
  1566  008D                     	;# 
  1567  008E                     	;# 
  1568  0091                     	;# 
  1569  0092                     	;# 
  1570  0093                     	;# 
  1571  0094                     	;# 
  1572  0095                     	;# 
  1573  0096                     	;# 
  1574  0097                     	;# 
  1575  0098                     	;# 
  1576  0099                     	;# 
  1577  009A                     	;# 
  1578  009B                     	;# 
  1579  009B                     	;# 
  1580  009C                     	;# 
  1581  009D                     	;# 
  1582  009E                     	;# 
  1583  010C                     	;# 
  1584  010D                     	;# 
  1585  010E                     	;# 
  1586  0111                     	;# 
  1587  0112                     	;# 
  1588  0113                     	;# 
  1589  0114                     	;# 
  1590  0115                     	;# 
  1591  0116                     	;# 
  1592  0117                     	;# 
  1593  0118                     	;# 
  1594  0119                     	;# 
  1595  011A                     	;# 
  1596  011B                     	;# 
  1597  011D                     	;# 
  1598  011E                     	;# 
  1599  018C                     	;# 
  1600  018D                     	;# 
  1601  018E                     	;# 
  1602  0191                     	;# 
  1603  0191                     	;# 
  1604  0192                     	;# 
  1605  0193                     	;# 
  1606  0193                     	;# 
  1607  0193                     	;# 
  1608  0194                     	;# 
  1609  0195                     	;# 
  1610  0196                     	;# 
  1611  0199                     	;# 
  1612  019A                     	;# 
  1613  019B                     	;# 
  1614  019B                     	;# 
  1615  019C                     	;# 
  1616  019D                     	;# 
  1617  019E                     	;# 
  1618  019F                     	;# 
  1619  020C                     	;# 
  1620  020D                     	;# 
  1621  020E                     	;# 
  1622  0211                     	;# 
  1623  0211                     	;# 
  1624  0212                     	;# 
  1625  0212                     	;# 
  1626  0213                     	;# 
  1627  0213                     	;# 
  1628  0214                     	;# 
  1629  0214                     	;# 
  1630  0215                     	;# 
  1631  0215                     	;# 
  1632  0215                     	;# 
  1633  0216                     	;# 
  1634  0216                     	;# 
  1635  0217                     	;# 
  1636  0217                     	;# 
  1637  0219                     	;# 
  1638  021A                     	;# 
  1639  021B                     	;# 
  1640  021C                     	;# 
  1641  021D                     	;# 
  1642  021E                     	;# 
  1643  021F                     	;# 
  1644  0291                     	;# 
  1645  0291                     	;# 
  1646  0292                     	;# 
  1647  0293                     	;# 
  1648  0294                     	;# 
  1649  0295                     	;# 
  1650  0295                     	;# 
  1651  0296                     	;# 
  1652  0298                     	;# 
  1653  0298                     	;# 
  1654  0299                     	;# 
  1655  029A                     	;# 
  1656  029B                     	;# 
  1657  029C                     	;# 
  1658  029D                     	;# 
  1659  029E                     	;# 
  1660  0311                     	;# 
  1661  0311                     	;# 
  1662  0312                     	;# 
  1663  0313                     	;# 
  1664  0318                     	;# 
  1665  0318                     	;# 
  1666  0319                     	;# 
  1667  031A                     	;# 
  1668  038C                     	;# 
  1669  038D                     	;# 
  1670  038E                     	;# 
  1671  0391                     	;# 
  1672  0392                     	;# 
  1673  0393                     	;# 
  1674  0394                     	;# 
  1675  0395                     	;# 
  1676  0396                     	;# 
  1677  039A                     	;# 
  1678  039C                     	;# 
  1679  039D                     	;# 
  1680  039E                     	;# 
  1681  039F                     	;# 
  1682  0415                     	;# 
  1683  0416                     	;# 
  1684  0417                     	;# 
  1685  041C                     	;# 
  1686  041D                     	;# 
  1687  041E                     	;# 
  1688  0FE4                     	;# 
  1689  0FE5                     	;# 
  1690  0FE6                     	;# 
  1691  0FE7                     	;# 
  1692  0FE8                     	;# 
  1693  0FE9                     	;# 
  1694  0FEA                     	;# 
  1695  0FEB                     	;# 
  1696  0FED                     	;# 
  1697  0FEE                     	;# 
  1698  0FEF                     	;# 
  1699  0000                     	;# 
  1700  0001                     	;# 
  1701  0002                     	;# 
  1702  0003                     	;# 
  1703  0004                     	;# 
  1704  0005                     	;# 
  1705  0006                     	;# 
  1706  0007                     	;# 
  1707  0008                     	;# 
  1708  0009                     	;# 
  1709  000A                     	;# 
  1710  000B                     	;# 
  1711  000C                     	;# 
  1712  000D                     	;# 
  1713  000E                     	;# 
  1714  0011                     	;# 
  1715  0012                     	;# 
  1716  0013                     	;# 
  1717  0014                     	;# 
  1718  0015                     	;# 
  1719  0016                     	;# 
  1720  0016                     	;# 
  1721  0017                     	;# 
  1722  0018                     	;# 
  1723  0019                     	;# 
  1724  001A                     	;# 
  1725  001B                     	;# 
  1726  001C                     	;# 
  1727  001E                     	;# 
  1728  001F                     	;# 
  1729  008C                     	;# 
  1730  008D                     	;# 
  1731  008E                     	;# 
  1732  0091                     	;# 
  1733  0092                     	;# 
  1734  0093                     	;# 
  1735  0094                     	;# 
  1736  0095                     	;# 
  1737  0096                     	;# 
  1738  0097                     	;# 
  1739  0098                     	;# 
  1740  0099                     	;# 
  1741  009A                     	;# 
  1742  009B                     	;# 
  1743  009B                     	;# 
  1744  009C                     	;# 
  1745  009D                     	;# 
  1746  009E                     	;# 
  1747  010C                     	;# 
  1748  010D                     	;# 
  1749  010E                     	;# 
  1750  0111                     	;# 
  1751  0112                     	;# 
  1752  0113                     	;# 
  1753  0114                     	;# 
  1754  0115                     	;# 
  1755  0116                     	;# 
  1756  0117                     	;# 
  1757  0118                     	;# 
  1758  0119                     	;# 
  1759  011A                     	;# 
  1760  011B                     	;# 
  1761  011D                     	;# 
  1762  011E                     	;# 
  1763  018C                     	;# 
  1764  018D                     	;# 
  1765  018E                     	;# 
  1766  0191                     	;# 
  1767  0191                     	;# 
  1768  0192                     	;# 
  1769  0193                     	;# 
  1770  0193                     	;# 
  1771  0193                     	;# 
  1772  0194                     	;# 
  1773  0195                     	;# 
  1774  0196                     	;# 
  1775  0199                     	;# 
  1776  019A                     	;# 
  1777  019B                     	;# 
  1778  019B                     	;# 
  1779  019C                     	;# 
  1780  019D                     	;# 
  1781  019E                     	;# 
  1782  019F                     	;# 
  1783  020C                     	;# 
  1784  020D                     	;# 
  1785  020E                     	;# 
  1786  0211                     	;# 
  1787  0211                     	;# 
  1788  0212                     	;# 
  1789  0212                     	;# 
  1790  0213                     	;# 
  1791  0213                     	;# 
  1792  0214                     	;# 
  1793  0214                     	;# 
  1794  0215                     	;# 
  1795  0215                     	;# 
  1796  0215                     	;# 
  1797  0216                     	;# 
  1798  0216                     	;# 
  1799  0217                     	;# 
  1800  0217                     	;# 
  1801  0219                     	;# 
  1802  021A                     	;# 
  1803  021B                     	;# 
  1804  021C                     	;# 
  1805  021D                     	;# 
  1806  021E                     	;# 
  1807  021F                     	;# 
  1808  0291                     	;# 
  1809  0291                     	;# 
  1810  0292                     	;# 
  1811  0293                     	;# 
  1812  0294                     	;# 
  1813  0295                     	;# 
  1814  0295                     	;# 
  1815  0296                     	;# 
  1816  0298                     	;# 
  1817  0298                     	;# 
  1818  0299                     	;# 
  1819  029A                     	;# 
  1820  029B                     	;# 
  1821  029C                     	;# 
  1822  029D                     	;# 
  1823  029E                     	;# 
  1824  0311                     	;# 
  1825  0311                     	;# 
  1826  0312                     	;# 
  1827  0313                     	;# 
  1828  0318                     	;# 
  1829  0318                     	;# 
  1830  0319                     	;# 
  1831  031A                     	;# 
  1832  038C                     	;# 
  1833  038D                     	;# 
  1834  038E                     	;# 
  1835  0391                     	;# 
  1836  0392                     	;# 
  1837  0393                     	;# 
  1838  0394                     	;# 
  1839  0395                     	;# 
  1840  0396                     	;# 
  1841  039A                     	;# 
  1842  039C                     	;# 
  1843  039D                     	;# 
  1844  039E                     	;# 
  1845  039F                     	;# 
  1846  0415                     	;# 
  1847  0416                     	;# 
  1848  0417                     	;# 
  1849  041C                     	;# 
  1850  041D                     	;# 
  1851  041E                     	;# 
  1852  0FE4                     	;# 
  1853  0FE5                     	;# 
  1854  0FE6                     	;# 
  1855  0FE7                     	;# 
  1856  0FE8                     	;# 
  1857  0FE9                     	;# 
  1858  0FEA                     	;# 
  1859  0FEB                     	;# 
  1860  0FED                     	;# 
  1861  0FEE                     	;# 
  1862  0FEF                     	;# 
  1863  0000                     	;# 
  1864  0001                     	;# 
  1865  0002                     	;# 
  1866  0003                     	;# 
  1867  0004                     	;# 
  1868  0005                     	;# 
  1869  0006                     	;# 
  1870  0007                     	;# 
  1871  0008                     	;# 
  1872  0009                     	;# 
  1873  000A                     	;# 
  1874  000B                     	;# 
  1875  000C                     	;# 
  1876  000D                     	;# 
  1877  000E                     	;# 
  1878  0011                     	;# 
  1879  0012                     	;# 
  1880  0013                     	;# 
  1881  0014                     	;# 
  1882  0015                     	;# 
  1883  0016                     	;# 
  1884  0016                     	;# 
  1885  0017                     	;# 
  1886  0018                     	;# 
  1887  0019                     	;# 
  1888  001A                     	;# 
  1889  001B                     	;# 
  1890  001C                     	;# 
  1891  001E                     	;# 
  1892  001F                     	;# 
  1893  008C                     	;# 
  1894  008D                     	;# 
  1895  008E                     	;# 
  1896  0091                     	;# 
  1897  0092                     	;# 
  1898  0093                     	;# 
  1899  0094                     	;# 
  1900  0095                     	;# 
  1901  0096                     	;# 
  1902  0097                     	;# 
  1903  0098                     	;# 
  1904  0099                     	;# 
  1905  009A                     	;# 
  1906  009B                     	;# 
  1907  009B                     	;# 
  1908  009C                     	;# 
  1909  009D                     	;# 
  1910  009E                     	;# 
  1911  010C                     	;# 
  1912  010D                     	;# 
  1913  010E                     	;# 
  1914  0111                     	;# 
  1915  0112                     	;# 
  1916  0113                     	;# 
  1917  0114                     	;# 
  1918  0115                     	;# 
  1919  0116                     	;# 
  1920  0117                     	;# 
  1921  0118                     	;# 
  1922  0119                     	;# 
  1923  011A                     	;# 
  1924  011B                     	;# 
  1925  011D                     	;# 
  1926  011E                     	;# 
  1927  018C                     	;# 
  1928  018D                     	;# 
  1929  018E                     	;# 
  1930  0191                     	;# 
  1931  0191                     	;# 
  1932  0192                     	;# 
  1933  0193                     	;# 
  1934  0193                     	;# 
  1935  0193                     	;# 
  1936  0194                     	;# 
  1937  0195                     	;# 
  1938  0196                     	;# 
  1939  0199                     	;# 
  1940  019A                     	;# 
  1941  019B                     	;# 
  1942  019B                     	;# 
  1943  019C                     	;# 
  1944  019D                     	;# 
  1945  019E                     	;# 
  1946  019F                     	;# 
  1947  020C                     	;# 
  1948  020D                     	;# 
  1949  020E                     	;# 
  1950  0211                     	;# 
  1951  0211                     	;# 
  1952  0212                     	;# 
  1953  0212                     	;# 
  1954  0213                     	;# 
  1955  0213                     	;# 
  1956  0214                     	;# 
  1957  0214                     	;# 
  1958  0215                     	;# 
  1959  0215                     	;# 
  1960  0215                     	;# 
  1961  0216                     	;# 
  1962  0216                     	;# 
  1963  0217                     	;# 
  1964  0217                     	;# 
  1965  0219                     	;# 
  1966  021A                     	;# 
  1967  021B                     	;# 
  1968  021C                     	;# 
  1969  021D                     	;# 
  1970  021E                     	;# 
  1971  021F                     	;# 
  1972  0291                     	;# 
  1973  0291                     	;# 
  1974  0292                     	;# 
  1975  0293                     	;# 
  1976  0294                     	;# 
  1977  0295                     	;# 
  1978  0295                     	;# 
  1979  0296                     	;# 
  1980  0298                     	;# 
  1981  0298                     	;# 
  1982  0299                     	;# 
  1983  029A                     	;# 
  1984  029B                     	;# 
  1985  029C                     	;# 
  1986  029D                     	;# 
  1987  029E                     	;# 
  1988  0311                     	;# 
  1989  0311                     	;# 
  1990  0312                     	;# 
  1991  0313                     	;# 
  1992  0318                     	;# 
  1993  0318                     	;# 
  1994  0319                     	;# 
  1995  031A                     	;# 
  1996  038C                     	;# 
  1997  038D                     	;# 
  1998  038E                     	;# 
  1999  0391                     	;# 
  2000  0392                     	;# 
  2001  0393                     	;# 
  2002  0394                     	;# 
  2003  0395                     	;# 
  2004  0396                     	;# 
  2005  039A                     	;# 
  2006  039C                     	;# 
  2007  039D                     	;# 
  2008  039E                     	;# 
  2009  039F                     	;# 
  2010  0415                     	;# 
  2011  0416                     	;# 
  2012  0417                     	;# 
  2013  041C                     	;# 
  2014  041D                     	;# 
  2015  041E                     	;# 
  2016  0FE4                     	;# 
  2017  0FE5                     	;# 
  2018  0FE6                     	;# 
  2019  0FE7                     	;# 
  2020  0FE8                     	;# 
  2021  0FE9                     	;# 
  2022  0FEA                     	;# 
  2023  0FEB                     	;# 
  2024  0FED                     	;# 
  2025  0FEE                     	;# 
  2026  0FEF                     	;# 
  2027                           
  2028                           	psect	idataBANK0
  2029  0634                     __pidataBANK0:	
  2030                           
  2031                           ;initializer for _EEPROM_Buffer
  2032  0634  3400               	retlw	0
  2033  0635  3401               	retlw	1
  2034  0636  3402               	retlw	2
  2035  0637  3403               	retlw	3
  2036  0638  3404               	retlw	4
  2037  0639  3405               	retlw	5
  2038  063A  3406               	retlw	6
  2039  063B  3407               	retlw	7
  2040  063C  3408               	retlw	8
  2041  063D  3400               	retlw	0
  2042  063E  3400               	retlw	0
  2043  063F  3400               	retlw	0
  2044  0640  3400               	retlw	0
  2045  0641  3400               	retlw	0
  2046  0642  3400               	retlw	0
  2047  0643  3400               	retlw	0
  2048  0644  3400               	retlw	0
  2049  0645  3400               	retlw	0
  2050  0646  3400               	retlw	0
  2051  0647  3400               	retlw	0
  2052  0648  3400               	retlw	0
  2053  0649  3400               	retlw	0
  2054  064A  3400               	retlw	0
  2055  064B  3400               	retlw	0
  2056  064C  3400               	retlw	0
  2057  064D  3400               	retlw	0
  2058  064E  3400               	retlw	0
  2059                           
  2060                           ;initializer for _I2C1_slaveWriteData
  2061  064F  3455               	retlw	85
  2062                           
  2063                           ;initializer for _CurrentChannel
  2064  0650  3404               	retlw	4
  2065  000D                     _PORTBbits	set	13
  2066  000C                     _PORTAbits	set	12
  2067  0013                     _PIR3bits	set	19
  2068  000B                     _INTCONbits	set	11
  2069  001C                     _T2CONbits	set	28
  2070  0011                     _PIR1bits	set	17
  2071  001A                     _TMR2	set	26
  2072  001B                     _PR2	set	27
  2073  001C                     _T2CON	set	28
  2074  008D                     _TRISBbits	set	141
  2075  009D                     _ADCON0bits	set	157
  2076  009C                     _ADRESH	set	156
  2077  009B                     _ADRESL	set	155
  2078  009E                     _ADCON1	set	158
  2079  009D                     _ADCON0	set	157
  2080  0093                     _PIE3bits	set	147
  2081  0091                     _PIE1bits	set	145
  2082  0095                     _OPTION_REGbits	set	149
  2083  008E                     _TRISC	set	142
  2084  008D                     _TRISB	set	141
  2085  008C                     _TRISA	set	140
  2086  0097                     _WDTCON	set	151
  2087  0098                     _OSCTUNE	set	152
  2088  0099                     _OSCCON	set	153
  2089  008C                     _TRISAbits	set	140
  2090  008E                     _TRISCbits	set	142
  2091  04B8                     _SWDTEN	set	1208
  2092  04D6                     _PLLR	set	1238
  2093  010D                     _LATBbits	set	269
  2094  011D                     _APFCON0	set	285
  2095  011E                     _APFCON1	set	286
  2096  010E                     _LATC	set	270
  2097  010D                     _LATB	set	269
  2098  010C                     _LATA	set	268
  2099  010C                     _LATAbits	set	268
  2100  010E                     _LATCbits	set	270
  2101  018C                     _ANSELAbits	set	396
  2102  018C                     _ANSELA	set	396
  2103  018D                     _ANSELB	set	397
  2104  018E                     _ANSELC	set	398
  2105  020D                     _WPUBbits	set	525
  2106  020C                     _WPUAbits	set	524
  2107  0216                     _SSP1CON2bits	set	534
  2108  0214                     _SSP1STATbits	set	532
  2109  0211                     _SSP1BUF	set	529
  2110  0215                     _SSP1CON1bits	set	533
  2111  0212                     _SSP1ADD	set	530
  2112  0213                     _SSP1MSK	set	531
  2113  0217                     _SSP1CON3	set	535
  2114  0216                     _SSP1CON2	set	534
  2115  0215                     _SSP1CON1	set	533
  2116  0214                     _SSP1STAT	set	532
  2117  020E                     _WPUC	set	526
  2118  020C                     _WPUA	set	524
  2119  020D                     _WPUB	set	525
  2120  0299                     _CCPR2H	set	665
  2121  0298                     _CCPR2L	set	664
  2122  029D                     _PSTR2CON	set	669
  2123  029B                     _PWM2CON	set	667
  2124  029C                     _CCP2AS	set	668
  2125  029A                     _CCP2CON	set	666
  2126  029E                     _CCPTMRSbits	set	670
  2127  0292                     _CCPR1H	set	658
  2128  0291                     _CCPR1L	set	657
  2129  0296                     _PSTR1CON	set	662
  2130  0294                     _PWM1CON	set	660
  2131  0295                     _ECCP1AS	set	661
  2132  0293                     _CCP1CON	set	659
  2133  0319                     _CCPR4H	set	793
  2134  0318                     _CCPR4L	set	792
  2135  031A                     _CCP4CON	set	794
  2136  0312                     _CCPR3H	set	786
  2137  0311                     _CCPR3L	set	785
  2138  0313                     _CCP3CON	set	787
  2139  041E                     _T6CONbits	set	1054
  2140  041C                     _TMR6	set	1052
  2141  041D                     _PR6	set	1053
  2142  041E                     _T6CON	set	1054
  2143                           
  2144                           ; #config settings
  2145  0000                     
  2146                           	psect	cinit
  2147  0034                     start_initialization:	
  2148  0034                     __initialization:	
  2149                           
  2150                           ; Initialize objects allocated to BANK0
  2151  0034  3034               	movlw	low __pidataBANK0
  2152  0035  0084               	movwf	4
  2153  0036  3086               	movlw	(high __pidataBANK0)| (0+128)
  2154  0037  0085               	movwf	5
  2155  0038  3020               	movlw	low __pdataBANK0
  2156  0039  0086               	movwf	6
  2157  003A  3000               	movlw	high __pdataBANK0
  2158  003B  0087               	movwf	7
  2159  003C  301D               	movlw	29
  2160  003D  3186  26A4         	fcall	init_ram
  2161                           
  2162                           ; Clear objects allocated to BANK0
  2163  003F  01CE               	clrf	__pbssBANK0& (0+127)
  2164  0040  01CF               	clrf	(__pbssBANK0+1)& (0+127)
  2165  0041  01D0               	clrf	(__pbssBANK0+2)& (0+127)
  2166  0042  01D1               	clrf	(__pbssBANK0+3)& (0+127)
  2167  0043  01D2               	clrf	(__pbssBANK0+4)& (0+127)
  2168  0044  01D3               	clrf	(__pbssBANK0+5)& (0+127)
  2169  0045  01D4               	clrf	(__pbssBANK0+6)& (0+127)
  2170  0046  01D5               	clrf	(__pbssBANK0+7)& (0+127)
  2171  0047  01D6               	clrf	(__pbssBANK0+8)& (0+127)
  2172  0048  01D7               	clrf	(__pbssBANK0+9)& (0+127)
  2173  0049                     end_of_initialization:	
  2174                           ;End of C runtime variable initialization code
  2175                           
  2176  0049                     __end_of__initialization:	
  2177  0049  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2178  004A  0020               	movlb	0
  2179  004B  3180  284D         	ljmp	_main	;jump to C main() function
  2180                           
  2181                           	psect	bssBANK0
  2182  004E                     __pbssBANK0:	
  2183  004E                     _TMR6_InterruptHandler:	
  2184  004E                     	ds	2
  2185  0050                     Timer6Overflow@count:	
  2186  0050                     	ds	1
  2187  0051                     I2C1_StatusCallback@slaveWriteType:	
  2188  0051                     	ds	1
  2189  0052                     I2C1_StatusCallback@eepromAddress:	
  2190  0052                     	ds	1
  2191  0053                     _GPIO4Enable:	
  2192  0053                     	ds	1
  2193  0054                     _GPIO3Enable:	
  2194  0054                     	ds	1
  2195  0055                     _GPIO1Enable:	
  2196  0055                     	ds	1
  2197  0056                     _pwm_lock:	
  2198  0056                     	ds	1
  2199  0057                     _ADCValid:	
  2200  0057                     	ds	1
  2201                           
  2202                           	psect	dataBANK0
  2203  0020                     __pdataBANK0:	
  2204  0020                     _EEPROM_Buffer:	
  2205  0020                     	ds	27
  2206  003B                     _I2C1_slaveWriteData:	
  2207  003B                     	ds	1
  2208  003C                     _CurrentChannel:	
  2209  003C                     	ds	1
  2210                           
  2211                           	psect	inittext
  2212  06A4                     init_ram:	
  2213  06A4  00FE               	movwf	126
  2214  06A5                     initloop:	
  2215  06A5  0012               	moviw fsr0++
  2216  06A6  001E               	movwi fsr1++
  2217  06A7  0BFE               	decfsz	126,f
  2218  06A8  2EA5               	goto	initloop
  2219  06A9  3400               	retlw	0
  2220                           
  2221                           	psect	cstackBANK0
  2222  003D                     __pcstackBANK0:	
  2223  003D                     ?_PIN_MANAGER_Initialize:	
  2224  003D                     ?_OSCILLATOR_Initialize:	
  2225                           ; 1 bytes @ 0x0
  2226                           
  2227  003D                     ?_WDT_Initialize:	
  2228                           ; 1 bytes @ 0x0
  2229                           
  2230  003D                     ?_I2C1_Initialize:	
  2231                           ; 1 bytes @ 0x0
  2232                           
  2233  003D                     ?_TMR6_Initialize:	
  2234                           ; 1 bytes @ 0x0
  2235                           
  2236  003D                     ?_ADC_Initialize:	
  2237                           ; 1 bytes @ 0x0
  2238                           
  2239  003D                     ?_TMR2_Initialize:	
  2240                           ; 1 bytes @ 0x0
  2241                           
  2242  003D                     ?_TMR2_StartTimer:	
  2243                           ; 1 bytes @ 0x0
  2244                           
  2245  003D                     ?_I2C1_ISR:	
  2246                           ; 1 bytes @ 0x0
  2247                           
  2248  003D                     ?_TMR6_ISR:	
  2249                           ; 1 bytes @ 0x0
  2250                           
  2251  003D                     ?_ADC_ISR:	
  2252                           ; 1 bytes @ 0x0
  2253                           
  2254  003D                     ?_TMR6_DefaultInterruptHandler:	
  2255                           ; 1 bytes @ 0x0
  2256                           
  2257  003D                     ??_TMR6_DefaultInterruptHandler:	
  2258                           ; 1 bytes @ 0x0
  2259                           
  2260  003D                     ?_TMR6_StartTimer:	
  2261                           ; 1 bytes @ 0x0
  2262                           
  2263  003D                     ?_TMR6_CallBack:	
  2264                           ; 1 bytes @ 0x0
  2265                           
  2266  003D                     ?_I2C1_WriteBuffer:	
  2267                           ; 1 bytes @ 0x0
  2268                           
  2269  003D                     ?_I2C1_StatusCallback:	
  2270                           ; 1 bytes @ 0x0
  2271                           
  2272  003D                     ?_SYSTEM_Initialize:	
  2273                           ; 1 bytes @ 0x0
  2274                           
  2275  003D                     ?_TMR2_StopTimer:	
  2276                           ; 1 bytes @ 0x0
  2277                           
  2278  003D                     ?_EPWM1_Initialize:	
  2279                           ; 1 bytes @ 0x0
  2280                           
  2281  003D                     ?_EPWM1_PowerDown:	
  2282                           ; 1 bytes @ 0x0
  2283                           
  2284  003D                     ?_INTERRUPT_InterruptManager:	
  2285                           ; 1 bytes @ 0x0
  2286                           
  2287  003D                     ?_TMR6_StopTimer:	
  2288                           ; 1 bytes @ 0x0
  2289                           
  2290  003D                     ?_ADC_SelectChannel:	
  2291                           ; 1 bytes @ 0x0
  2292                           
  2293  003D                     ?_ADC_StartConversion:	
  2294                           ; 1 bytes @ 0x0
  2295                           
  2296  003D                     ?_ADC_EnableChannel:	
  2297                           ; 1 bytes @ 0x0
  2298                           
  2299  003D                     ??_ADC_EnableChannel:	
  2300                           ; 1 bytes @ 0x0
  2301                           
  2302  003D                     ?_ADC_DisableChannel:	
  2303                           ; 1 bytes @ 0x0
  2304                           
  2305  003D                     ??_ADC_DisableChannel:	
  2306                           ; 1 bytes @ 0x0
  2307                           
  2308  003D                     ?_I2C1_Shutdown:	
  2309                           ; 1 bytes @ 0x0
  2310                           
  2311  003D                     ?_I2C1_Startup:	
  2312                           ; 1 bytes @ 0x0
  2313                           
  2314  003D                     ?_I2C1_ReadBuffer:	
  2315                           ; 1 bytes @ 0x0
  2316                           
  2317  003D                     ?_EPWM2_Initialize:	
  2318                           ; 1 bytes @ 0x0
  2319                           
  2320  003D                     ?_EPWM2_PowerDown:	
  2321                           ; 1 bytes @ 0x0
  2322                           
  2323  003D                     ?_PWM3_Initialize:	
  2324                           ; 1 bytes @ 0x0
  2325                           
  2326  003D                     ?_PWM3_PowerDown:	
  2327                           ; 1 bytes @ 0x0
  2328                           
  2329  003D                     ?_PWM4_Initialize:	
  2330                           ; 1 bytes @ 0x0
  2331                           
  2332  003D                     ?_PWM4_PowerDown:	
  2333                           ; 1 bytes @ 0x0
  2334                           
  2335  003D                     ?_Timer6Overflow:	
  2336                           ; 1 bytes @ 0x0
  2337                           
  2338  003D                     ?_main:	
  2339                           ; 1 bytes @ 0x0
  2340                           
  2341  003D                     ?i1_TMR2_StartTimer:	
  2342                           ; 1 bytes @ 0x0
  2343                           
  2344  003D                     ??i1_TMR2_StartTimer:	
  2345                           ; 1 bytes @ 0x0
  2346                           
  2347  003D                     ?i1_TMR2_StopTimer:	
  2348                           ; 1 bytes @ 0x0
  2349                           
  2350  003D                     ??i1_TMR2_StopTimer:	
  2351                           ; 1 bytes @ 0x0
  2352                           
  2353  003D                     ?i1_ADC_SelectChannel:	
  2354                           ; 1 bytes @ 0x0
  2355                           
  2356  003D                     ??i1_ADC_SelectChannel:	
  2357                           ; 1 bytes @ 0x0
  2358                           
  2359  003D                     ?i1_ADC_StartConversion:	
  2360                           ; 1 bytes @ 0x0
  2361                           
  2362  003D                     ??i1_ADC_StartConversion:	
  2363                           ; 1 bytes @ 0x0
  2364                           
  2365  003D                     ?i1_I2C1_ReadBuffer:	
  2366                           ; 1 bytes @ 0x0
  2367                           
  2368  003D                     ??i1_I2C1_ReadBuffer:	
  2369                           ; 1 bytes @ 0x0
  2370                           
  2371  003D                     ADC_EnableChannel@Channel:	
  2372                           ; 1 bytes @ 0x0
  2373                           
  2374  003D                     ADC_DisableChannel@Channel:	
  2375                           ; 1 bytes @ 0x0
  2376                           
  2377  003D                     I2C1_WriteBuffer@data:	
  2378                           ; 1 bytes @ 0x0
  2379                           
  2380  003D                     i1I2C1_ReadBuffer@address:	
  2381                           ; 1 bytes @ 0x0
  2382                           
  2383                           
  2384                           ; 1 bytes @ 0x0
  2385  003D                     	ds	1
  2386  003E                     ??_I2C1_WriteBuffer:	
  2387  003E                     ??_I2C1_StatusCallback:	
  2388                           ; 1 bytes @ 0x1
  2389                           
  2390  003E                     ?_EPWM1_LoadDutyValue:	
  2391                           ; 1 bytes @ 0x1
  2392                           
  2393  003E                     ?_EPWM2_LoadDutyValue:	
  2394                           ; 1 bytes @ 0x1
  2395                           
  2396  003E                     ?_PWM3_LoadDutyValue:	
  2397                           ; 1 bytes @ 0x1
  2398                           
  2399  003E                     ?_PWM4_LoadDutyValue:	
  2400                           ; 1 bytes @ 0x1
  2401                           
  2402  003E                     i1ADC_SelectChannel@channel:	
  2403                           ; 1 bytes @ 0x1
  2404                           
  2405  003E                     EPWM1_LoadDutyValue@dutyValue:	
  2406                           ; 1 bytes @ 0x1
  2407                           
  2408  003E                     EPWM2_LoadDutyValue@dutyValue:	
  2409                           ; 2 bytes @ 0x1
  2410                           
  2411  003E                     PWM3_LoadDutyValue@dutyValue:	
  2412                           ; 2 bytes @ 0x1
  2413                           
  2414  003E                     PWM4_LoadDutyValue@dutyValue:	
  2415                           ; 2 bytes @ 0x1
  2416                           
  2417                           
  2418                           ; 2 bytes @ 0x1
  2419  003E                     	ds	2
  2420  0040                     ??_EPWM1_LoadDutyValue:	
  2421  0040                     ??_EPWM2_LoadDutyValue:	
  2422                           ; 1 bytes @ 0x3
  2423                           
  2424  0040                     ??_PWM3_LoadDutyValue:	
  2425                           ; 1 bytes @ 0x3
  2426                           
  2427  0040                     ??_PWM4_LoadDutyValue:	
  2428                           ; 1 bytes @ 0x3
  2429                           
  2430  0040                     I2C1_WriteBuffer@address:	
  2431                           ; 1 bytes @ 0x3
  2432                           
  2433  0040                     I2C1_StatusCallback@i2c_bus_state:	
  2434                           ; 1 bytes @ 0x3
  2435                           
  2436                           
  2437                           ; 1 bytes @ 0x3
  2438  0040                     	ds	1
  2439  0041                     ??_I2C1_ISR:	
  2440  0041                     ??_ADC_ISR:	
  2441                           ; 1 bytes @ 0x4
  2442                           
  2443                           
  2444                           ; 1 bytes @ 0x4
  2445  0041                     	ds	1
  2446  0042                     ??_Timer6Overflow:	
  2447  0042                     I2C1_ISR@i2c_data:	
  2448                           ; 1 bytes @ 0x5
  2449                           
  2450                           
  2451                           ; 1 bytes @ 0x5
  2452  0042                     	ds	3
  2453  0045                     ??_TMR6_ISR:	
  2454  0045                     ??_TMR6_CallBack:	
  2455                           ; 1 bytes @ 0x8
  2456                           
  2457  0045                     ??_INTERRUPT_InterruptManager:	
  2458                           ; 1 bytes @ 0x8
  2459                           
  2460                           
  2461                           ; 1 bytes @ 0x8
  2462  0045                     	ds	1
  2463  0046                     ??_PIN_MANAGER_Initialize:	
  2464  0046                     ??_OSCILLATOR_Initialize:	
  2465                           ; 1 bytes @ 0x9
  2466                           
  2467  0046                     ??_WDT_Initialize:	
  2468                           ; 1 bytes @ 0x9
  2469                           
  2470  0046                     ??_I2C1_Initialize:	
  2471                           ; 1 bytes @ 0x9
  2472                           
  2473  0046                     ??_ADC_Initialize:	
  2474                           ; 1 bytes @ 0x9
  2475                           
  2476  0046                     ??_TMR2_Initialize:	
  2477                           ; 1 bytes @ 0x9
  2478                           
  2479  0046                     ??_TMR2_StartTimer:	
  2480                           ; 1 bytes @ 0x9
  2481                           
  2482  0046                     ?_TMR6_SetInterruptHandler:	
  2483                           ; 1 bytes @ 0x9
  2484                           
  2485  0046                     ??_TMR6_StartTimer:	
  2486                           ; 1 bytes @ 0x9
  2487                           
  2488  0046                     ??_TMR2_StopTimer:	
  2489                           ; 1 bytes @ 0x9
  2490                           
  2491  0046                     ??_EPWM1_Initialize:	
  2492                           ; 1 bytes @ 0x9
  2493                           
  2494  0046                     ??_EPWM1_PowerDown:	
  2495                           ; 1 bytes @ 0x9
  2496                           
  2497  0046                     ??_TMR6_StopTimer:	
  2498                           ; 1 bytes @ 0x9
  2499                           
  2500  0046                     ??_ADC_SelectChannel:	
  2501                           ; 1 bytes @ 0x9
  2502                           
  2503  0046                     ??_ADC_StartConversion:	
  2504                           ; 1 bytes @ 0x9
  2505                           
  2506  0046                     ??_I2C1_Shutdown:	
  2507                           ; 1 bytes @ 0x9
  2508                           
  2509  0046                     ??_I2C1_Startup:	
  2510                           ; 1 bytes @ 0x9
  2511                           
  2512  0046                     ??_I2C1_ReadBuffer:	
  2513                           ; 1 bytes @ 0x9
  2514                           
  2515  0046                     ??_EPWM2_Initialize:	
  2516                           ; 1 bytes @ 0x9
  2517                           
  2518  0046                     ??_EPWM2_PowerDown:	
  2519                           ; 1 bytes @ 0x9
  2520                           
  2521  0046                     ??_PWM3_Initialize:	
  2522                           ; 1 bytes @ 0x9
  2523                           
  2524  0046                     ??_PWM3_PowerDown:	
  2525                           ; 1 bytes @ 0x9
  2526                           
  2527  0046                     ??_PWM4_Initialize:	
  2528                           ; 1 bytes @ 0x9
  2529                           
  2530  0046                     ??_PWM4_PowerDown:	
  2531                           ; 1 bytes @ 0x9
  2532                           
  2533  0046                     ?_ADC_GetConversion:	
  2534                           ; 1 bytes @ 0x9
  2535                           
  2536  0046                     I2C1_ReadBuffer@address:	
  2537                           ; 2 bytes @ 0x9
  2538                           
  2539  0046                     TMR6_SetInterruptHandler@InterruptHandler:	
  2540                           ; 1 bytes @ 0x9
  2541                           
  2542                           
  2543                           ; 2 bytes @ 0x9
  2544  0046                     	ds	1
  2545  0047                     ADC_SelectChannel@channel:	
  2546                           
  2547                           ; 1 bytes @ 0xA
  2548  0047                     	ds	1
  2549  0048                     ??_TMR6_Initialize:	
  2550  0048                     ??_TMR6_SetInterruptHandler:	
  2551                           ; 1 bytes @ 0xB
  2552                           
  2553  0048                     ??_SYSTEM_Initialize:	
  2554                           ; 1 bytes @ 0xB
  2555                           
  2556  0048                     ??_ADC_GetConversion:	
  2557                           ; 1 bytes @ 0xB
  2558                           
  2559                           
  2560                           ; 1 bytes @ 0xB
  2561  0048                     	ds	1
  2562  0049                     ADC_GetConversion@channel:	
  2563                           
  2564                           ; 1 bytes @ 0xC
  2565  0049                     	ds	1
  2566  004A                     ??_main:	
  2567                           
  2568                           ; 1 bytes @ 0xD
  2569  004A                     	ds	1
  2570  004B                     main@i:	
  2571                           
  2572                           ; 2 bytes @ 0xE
  2573  004B                     	ds	2
  2574  004D                     main@System_State:	
  2575                           
  2576                           ; 1 bytes @ 0x10
  2577  004D                     	ds	1
  2578                           
  2579                           	psect	maintext
  2580  004D                     __pmaintext:	
  2581 ;;
  2582 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2583 ;;
  2584 ;; *************** function _main *****************
  2585 ;; Defined at:
  2586 ;;		line 89 in file "main.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  i               2   14[BANK0 ] int 
  2591 ;;  System_State    1   16[BANK0 ] enum E3133
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : B1F/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2602 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2603 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2604 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2605 ;;Total ram usage:        4 bytes
  2606 ;; Hardware stack levels required when called:    8
  2607 ;; This function calls:
  2608 ;;		_ADC_GetConversion
  2609 ;;		_ADC_SelectChannel
  2610 ;;		_ADC_StartConversion
  2611 ;;		_EPWM1_Initialize
  2612 ;;		_EPWM1_PowerDown
  2613 ;;		_EPWM2_Initialize
  2614 ;;		_EPWM2_PowerDown
  2615 ;;		_I2C1_ReadBuffer
  2616 ;;		_I2C1_Shutdown
  2617 ;;		_I2C1_Startup
  2618 ;;		_PWM3_Initialize
  2619 ;;		_PWM3_PowerDown
  2620 ;;		_PWM4_Initialize
  2621 ;;		_PWM4_PowerDown
  2622 ;;		_SYSTEM_Initialize
  2623 ;;		_TMR2_StartTimer
  2624 ;;		_TMR2_StopTimer
  2625 ;;		_TMR6_SetInterruptHandler
  2626 ;;		_TMR6_StartTimer
  2627 ;;		_TMR6_StopTimer
  2628 ;; This function is called by:
  2629 ;;		Startup code after reset
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           
  2634                           ;psect for function _main
  2635  004D                     _main:	
  2636                           
  2637                           ;main.c: 91: SYSTEM_Initialize();
  2638                           
  2639                           ;incstack = 0
  2640                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2641  004D  2202  3180         	fcall	_SYSTEM_Initialize
  2642                           
  2643                           ;main.c: 93: do { LATBbits.LATB7 = 0; } while(0);
  2644  004F  0022               	movlb	2	; force select bank2
  2645  0050  138D               	bcf	13,7	;volatile
  2646                           
  2647                           ;main.c: 95: EPWM1_PowerDown();
  2648  0051  2146  3180         	fcall	_EPWM1_PowerDown
  2649                           
  2650                           ;main.c: 96: EPWM2_PowerDown();
  2651  0053  214D  3180         	fcall	_EPWM2_PowerDown
  2652                           
  2653                           ;main.c: 97: PWM3_PowerDown();
  2654  0055  2157  3180         	fcall	_PWM3_PowerDown
  2655                           
  2656                           ;main.c: 98: PWM4_PowerDown();
  2657  0057  215E  3180         	fcall	_PWM4_PowerDown
  2658                           
  2659                           ;main.c: 100: do { LATCbits.LATC4 = 0; } while(0);
  2660  0059  0022               	movlb	2	; force select bank2
  2661  005A  120E               	bcf	14,4	;volatile
  2662                           
  2663                           ;main.c: 101: (INTCONbits.GIE = 0);
  2664  005B  138B               	bcf	11,7	;volatile
  2665                           
  2666                           ;main.c: 102: (INTCONbits.PEIE = 0);
  2667  005C  130B               	bcf	11,6	;volatile
  2668                           
  2669                           ;main.c: 104: do { LATCbits.LATC1 = 0; } while(0);
  2670  005D  0022               	movlb	2	; force select bank2
  2671  005E  108E               	bcf	14,1	;volatile
  2672                           
  2673                           ;main.c: 105: do { LATCbits.LATC2 = 0; } while(0);
  2674  005F  0022               	movlb	2	; force select bank2
  2675  0060  110E               	bcf	14,2	;volatile
  2676                           
  2677                           ;main.c: 107: I2C1_Shutdown();
  2678  0061  2154  3180         	fcall	_I2C1_Shutdown
  2679                           
  2680                           ;main.c: 108: do { TRISBbits.TRISB4 = 0; } while(0);
  2681  0063  0021               	movlb	1	; force select bank1
  2682  0064  120D               	bcf	13,4	;volatile
  2683                           
  2684                           ;main.c: 109: do { LATBbits.LATB4 = 0; } while(0);
  2685  0065  0022               	movlb	2	; force select bank2
  2686  0066  120D               	bcf	13,4	;volatile
  2687                           
  2688                           ;main.c: 110: do { TRISBbits.TRISB6 = 0; } while(0);
  2689  0067  0021               	movlb	1	; force select bank1
  2690  0068  130D               	bcf	13,6	;volatile
  2691                           
  2692                           ;main.c: 111: do { LATBbits.LATB6 = 0; } while(0);
  2693  0069  0022               	movlb	2	; force select bank2
  2694  006A  130D               	bcf	13,6	;volatile
  2695                           
  2696                           ;main.c: 113: do { TRISAbits.TRISA4 = 0; } while(0);
  2697  006B  0021               	movlb	1	; force select bank1
  2698  006C  120C               	bcf	12,4	;volatile
  2699                           
  2700                           ;main.c: 114: do { LATAbits.LATA4 = 0; } while(0);
  2701  006D  0022               	movlb	2	; force select bank2
  2702  006E  120C               	bcf	12,4	;volatile
  2703                           
  2704                           ;main.c: 115: do { TRISAbits.TRISA5 = 0; } while(0);
  2705  006F  0021               	movlb	1	; force select bank1
  2706  0070  128C               	bcf	12,5	;volatile
  2707                           
  2708                           ;main.c: 116: do { LATAbits.LATA5 = 0; } while(0);
  2709  0071  0022               	movlb	2	; force select bank2
  2710  0072  128C               	bcf	12,5	;volatile
  2711                           
  2712                           ;main.c: 117: do { TRISAbits.TRISA1 = 0; } while(0);
  2713  0073  0021               	movlb	1	; force select bank1
  2714  0074  108C               	bcf	12,1	;volatile
  2715                           
  2716                           ;main.c: 118: do { LATAbits.LATA1 = 0; } while(0);
  2717  0075  0022               	movlb	2	; force select bank2
  2718  0076  108C               	bcf	12,1	;volatile
  2719                           
  2720                           ;main.c: 119: do { TRISAbits.TRISA0 = 0; } while(0);
  2721  0077  0021               	movlb	1	; force select bank1
  2722  0078  100C               	bcf	12,0	;volatile
  2723                           
  2724                           ;main.c: 120: do { LATAbits.LATA0 = 0; } while(0);
  2725  0079  0022               	movlb	2	; force select bank2
  2726  007A  100C               	bcf	12,0	;volatile
  2727                           
  2728                           ;main.c: 123: TMR6_StopTimer();
  2729  007B  2168  3180         	fcall	_TMR6_StopTimer
  2730                           
  2731                           ;main.c: 124: TMR2_StopTimer();
  2732  007D  2165  3180         	fcall	_TMR2_StopTimer
  2733                           
  2734                           ;main.c: 125: TMR6_SetInterruptHandler(Timer6Overflow);
  2735  007F  3018               	movlw	low _Timer6Overflow
  2736  0080  0020               	movlb	0	; force select bank0
  2737  0081  00C6               	movwf	TMR6_SetInterruptHandler@InterruptHandler
  2738  0082  3004               	movlw	high _Timer6Overflow
  2739  0083  00C7               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1
  2740  0084  21F6  3180         	fcall	_TMR6_SetInterruptHandler
  2741                           
  2742                           ;main.c: 129: System_State_t System_State = sRESET;
  2743  0086  0020               	movlb	0	; force select bank0
  2744  0087  2938               	goto	L1
  2745  0088                     l2487:	
  2746                           ;main.c: 133: case sRESET:
  2747                           
  2748                           ;main.c: 132: switch (System_State) {
  2749                           
  2750                           ;main.c: 130: while (1) {
  2751                           
  2752                           
  2753                           ;main.c: 151: {
  2754                           ;main.c: 152: if (ADC_GetConversion(SenseV) >= 0xBB40) {
  2755  0088  3004               	movlw	4
  2756  0089  216B  3180         	fcall	_ADC_GetConversion
  2757  008B  30BB               	movlw	187
  2758  008C  0020               	movlb	0	; force select bank0
  2759  008D  0247               	subwf	?_ADC_GetConversion+1,w
  2760  008E  3040               	movlw	64
  2761  008F  1903               	skipnz
  2762  0090  0246               	subwf	?_ADC_GetConversion,w
  2763  0091  1C03               	skipc
  2764  0092  2898               	goto	l718
  2765                           
  2766                           ;main.c: 153: System_State = sINIT;
  2767  0093  3002               	movlw	2
  2768  0094  0020               	movlb	0	; force select bank0
  2769  0095  00CA               	movwf	??_main
  2770  0096  0020               	movlb	0	; force select bank0
  2771  0097  28CD               	goto	L2
  2772  0098                     l718:	
  2773                           ;main.c: 154: } else {
  2774                           
  2775                           
  2776                           ;main.c: 155: SWDTEN = 1;
  2777  0098  0021               	movlb	1	; force select bank1
  2778  0099  1417               	bsf	23,0	;volatile
  2779  009A  0063               	sleep	;# 
  2780                           
  2781                           ;main.c: 157: SWDTEN = 0;
  2782  009B  0021               	movlb	1	; force select bank1
  2783  009C  1017               	bcf	23,0	;volatile
  2784                           
  2785                           ;main.c: 158: }
  2786                           ;main.c: 159: break;
  2787  009D  293A               	goto	l2589
  2788  009E                     l2491:	
  2789                           ;main.c: 160: }
  2790                           ;main.c: 161: case sINIT:
  2791                           
  2792                           
  2793                           ;main.c: 178: {
  2794                           ;main.c: 179: TMR6_StartTimer();
  2795  009E  21FF  3180         	fcall	_TMR6_StartTimer
  2796                           
  2797                           ;main.c: 180: TMR2_StartTimer();
  2798  00A0  21F3  3180         	fcall	_TMR2_StartTimer
  2799                           
  2800                           ;main.c: 182: ADC_SelectChannel(SenseV);
  2801  00A2  3004               	movlw	4
  2802  00A3  218F  3180         	fcall	_ADC_SelectChannel
  2803                           
  2804                           ;main.c: 183: ADC_StartConversion();
  2805  00A5  21A2  3180         	fcall	_ADC_StartConversion
  2806                           
  2807                           ;main.c: 185: (INTCONbits.GIE = 1);
  2808  00A7  178B               	bsf	11,7	;volatile
  2809                           
  2810                           ;main.c: 188: (INTCONbits.PEIE = 1);
  2811  00A8  170B               	bsf	11,6	;volatile
  2812                           
  2813                           ;main.c: 189: do { LATCbits.LATC2 = 1; } while(0);
  2814  00A9  0022               	movlb	2	; force select bank2
  2815  00AA  150E               	bsf	14,2	;volatile
  2816                           
  2817                           ;main.c: 191: do { TRISAbits.TRISA4 = 1; } while(0);
  2818  00AB  0021               	movlb	1	; force select bank1
  2819  00AC  160C               	bsf	12,4	;volatile
  2820                           
  2821                           ;main.c: 192: do { TRISAbits.TRISA5 = 1; } while(0);
  2822  00AD  0021               	movlb	1	; force select bank1
  2823  00AE  168C               	bsf	12,5	;volatile
  2824                           
  2825                           ;main.c: 193: do { TRISAbits.TRISA1 = 1; } while(0);
  2826  00AF  0021               	movlb	1	; force select bank1
  2827  00B0  148C               	bsf	12,1	;volatile
  2828                           
  2829                           ;main.c: 194: do { TRISAbits.TRISA0 = 1; } while(0);
  2830  00B1  0021               	movlb	1	; force select bank1
  2831  00B2  140C               	bsf	12,0	;volatile
  2832                           
  2833                           ;main.c: 195: do { WPUBbits.WPUB4 = 1; } while(0);
  2834  00B3  0024               	movlb	4	; force select bank4
  2835  00B4  160D               	bsf	13,4	;volatile
  2836                           
  2837                           ;main.c: 196: do { WPUBbits.WPUB6 = 1; } while(0);
  2838  00B5  0024               	movlb	4	; force select bank4
  2839  00B6  170D               	bsf	13,6	;volatile
  2840                           
  2841                           ;main.c: 197: do { TRISBbits.TRISB4 = 1; } while(0);
  2842  00B7  0021               	movlb	1	; force select bank1
  2843  00B8  160D               	bsf	13,4	;volatile
  2844                           
  2845                           ;main.c: 198: do { TRISBbits.TRISB6 = 1; } while(0);
  2846  00B9  0021               	movlb	1	; force select bank1
  2847  00BA  170D               	bsf	13,6	;volatile
  2848                           
  2849                           ;main.c: 199: I2C1_Startup();
  2850  00BB  21D8  3180         	fcall	_I2C1_Startup
  2851                           
  2852                           ;main.c: 200: do { LATCbits.LATC1 = 1; } while(0);
  2853  00BD  0022               	movlb	2	; force select bank2
  2854  00BE  148E               	bsf	14,1	;volatile
  2855                           
  2856                           ;main.c: 201: do { LATBbits.LATB7 = 1; } while(0);
  2857  00BF  0022               	movlb	2	; force select bank2
  2858  00C0  178D               	bsf	13,7	;volatile
  2859                           
  2860                           ;main.c: 203: EPWM1_Initialize();
  2861  00C1  21A5  3180         	fcall	_EPWM1_Initialize
  2862                           
  2863                           ;main.c: 204: EPWM2_Initialize();
  2864  00C3  21B9  3180         	fcall	_EPWM2_Initialize
  2865                           
  2866                           ;main.c: 205: PWM3_Initialize();
  2867  00C5  21DB  3180         	fcall	_PWM3_Initialize
  2868                           
  2869                           ;main.c: 206: PWM4_Initialize();
  2870  00C7  21E7  3180         	fcall	_PWM4_Initialize
  2871                           
  2872                           ;main.c: 207: System_State = sRUNNING;
  2873  00C9  3003               	movlw	3
  2874  00CA  0020               	movlb	0	; force select bank0
  2875  00CB  00CA               	movwf	??_main
  2876  00CC  0020               	movlb	0	; force select bank0
  2877  00CD                     L2:	
  2878  00CD  00CD               	movwf	main@System_State
  2879                           
  2880                           ;main.c: 208: break;
  2881  00CE  293A               	goto	l2589
  2882  00CF                     l745:	
  2883                           ;main.c: 227: {
  2884                           ;main.c: 229: do { LATCbits.LATC4 = 1; } while(0);
  2885                           
  2886                           ;main.c: 209: }
  2887                           ;main.c: 210: case sRUNNING:
  2888                           
  2889  00CF  0022               	movlb	2	; force select bank2
  2890  00D0  160E               	bsf	14,4	;volatile
  2891  00D1                     l2533:	
  2892                           ;main.c: 230: while (!ADCValid);
  2893                           
  2894  00D1  0020               	movlb	0	; force select bank0
  2895  00D2  0857               	movf	_ADCValid,w	;volatile
  2896  00D3  1903               	btfsc	3,2
  2897  00D4  28D1               	goto	l2533
  2898                           
  2899                           ;main.c: 231: if (I2C1_ReadBuffer(I2CSenseV_H) <= 0x9A) {
  2900  00D5  300A               	movlw	10
  2901  00D6  21CD  3180         	fcall	_I2C1_ReadBuffer
  2902  00D8  0020               	movlb	0	; force select bank0
  2903  00D9  00CA               	movwf	??_main
  2904  00DA  309B               	movlw	155
  2905  00DB  024A               	subwf	??_main,w
  2906  00DC  1803               	skipnc
  2907  00DD  28E0               	goto	l750
  2908                           
  2909                           ;main.c: 232: System_State = sSHUTTINGDOWN;
  2910  00DE  0020               	movlb	0	; force select bank0
  2911  00DF  28E4               	goto	L3
  2912  00E0                     l750:	
  2913                           ;main.c: 233: break;
  2914                           
  2915                           
  2916                           ;main.c: 234: }
  2917                           ;main.c: 235: if (PORTBbits.RB5) {
  2918  00E0  0020               	movlb	0	; force select bank0
  2919  00E1  1E8D               	btfss	13,5	;volatile
  2920  00E2  293A               	goto	l2589
  2921                           
  2922                           ;main.c: 236: System_State = sSHUTTINGDOWN;
  2923  00E3  0020               	movlb	0	; force select bank0
  2924  00E4                     L3:	
  2925  00E4  01CD               	clrf	main@System_State
  2926                           
  2927                           ;main.c: 238: }
  2928                           ;main.c: 242: break;
  2929                           
  2930                           ;main.c: 237: break;
  2931  00E5  293A               	goto	l2589
  2932  00E6                     l753:	
  2933                           ;main.c: 261: {
  2934                           ;main.c: 262: do { LATBbits.LATB7 = 0; } while(0);
  2935                           
  2936                           ;main.c: 243: }
  2937                           ;main.c: 244: case sSHUTTINGDOWN:
  2938                           
  2939  00E6  0022               	movlb	2	; force select bank2
  2940  00E7  138D               	bcf	13,7	;volatile
  2941                           
  2942                           ;main.c: 264: EPWM1_PowerDown();
  2943  00E8  2146  3180         	fcall	_EPWM1_PowerDown
  2944                           
  2945                           ;main.c: 265: EPWM2_PowerDown();
  2946  00EA  214D  3180         	fcall	_EPWM2_PowerDown
  2947                           
  2948                           ;main.c: 266: PWM3_PowerDown();
  2949  00EC  2157  3180         	fcall	_PWM3_PowerDown
  2950                           
  2951                           ;main.c: 267: PWM4_PowerDown();
  2952  00EE  215E  3180         	fcall	_PWM4_PowerDown
  2953                           
  2954                           ;main.c: 269: do { LATCbits.LATC4 = 0; } while(0);
  2955  00F0  0022               	movlb	2	; force select bank2
  2956  00F1  120E               	bcf	14,4	;volatile
  2957                           
  2958                           ;main.c: 270: (INTCONbits.GIE = 0);
  2959  00F2  138B               	bcf	11,7	;volatile
  2960                           
  2961                           ;main.c: 271: (INTCONbits.PEIE = 0);
  2962  00F3  130B               	bcf	11,6	;volatile
  2963                           
  2964                           ;main.c: 273: do { LATCbits.LATC2 = 0; } while(0);
  2965  00F4  0022               	movlb	2	; force select bank2
  2966  00F5  110E               	bcf	14,2	;volatile
  2967                           
  2968                           ;main.c: 274: int i = 0;
  2969  00F6  0020               	movlb	0	; force select bank0
  2970  00F7  01CB               	clrf	main@i
  2971  00F8  01CC               	clrf	main@i+1
  2972  00F9                     l759:	
  2973                           ;main.c: 275: while (i < 10) {
  2974                           
  2975  00F9  0020               	movlb	0	; force select bank0
  2976  00FA  084C               	movf	main@i+1,w
  2977  00FB  3A80               	xorlw	128
  2978  00FC  0020               	movlb	0	; force select bank0
  2979  00FD  00CA               	movwf	??_main
  2980  00FE  3080               	movlw	128
  2981  00FF  024A               	subwf	??_main,w
  2982  0100  1D03               	skipz
  2983  0101  2905               	goto	u815
  2984  0102  300A               	movlw	10
  2985  0103  0020               	movlb	0	; force select bank0
  2986  0104  024B               	subwf	main@i,w
  2987  0105                     u815:	
  2988  0105  1803               	btfsc	3,0
  2989  0106  2913               	goto	l762
  2990                           
  2991                           ;main.c: 276: if (PORTBbits.RB5)
  2992  0107  0020               	movlb	0	; force select bank0
  2993  0108  1A8D               	btfsc	13,5	;volatile
  2994  0109  2913               	goto	l762
  2995                           
  2996                           ;main.c: 278: SWDTEN = 1;
  2997                           
  2998                           ;main.c: 277: break;
  2999  010A  0021               	movlb	1	; force select bank1
  3000  010B  1417               	bsf	23,0	;volatile
  3001  010C  0063               	sleep	;# 
  3002                           
  3003                           ;main.c: 280: i += 1;
  3004  010D  3001               	movlw	1
  3005  010E  0020               	movlb	0	; force select bank0
  3006  010F  07CB               	addwf	main@i,f
  3007  0110  3000               	movlw	0
  3008  0111  3DCC               	addwfc	main@i+1,f
  3009  0112  28F9               	goto	l759
  3010  0113                     l762:	
  3011                           
  3012                           ;main.c: 281: }
  3013                           ;main.c: 282: SWDTEN = 0;
  3014  0113  0021               	movlb	1	; force select bank1
  3015  0114  1017               	bcf	23,0	;volatile
  3016                           
  3017                           ;main.c: 284: do { LATCbits.LATC1 = 0; } while(0);
  3018  0115  0022               	movlb	2	; force select bank2
  3019  0116  108E               	bcf	14,1	;volatile
  3020                           
  3021                           ;main.c: 287: I2C1_Shutdown();
  3022  0117  2154  3180         	fcall	_I2C1_Shutdown
  3023                           
  3024                           ;main.c: 288: do { TRISBbits.TRISB4 = 0; } while(0);
  3025  0119  0021               	movlb	1	; force select bank1
  3026  011A  120D               	bcf	13,4	;volatile
  3027                           
  3028                           ;main.c: 289: do { LATBbits.LATB4 = 0; } while(0);
  3029  011B  0022               	movlb	2	; force select bank2
  3030  011C  120D               	bcf	13,4	;volatile
  3031                           
  3032                           ;main.c: 290: do { TRISBbits.TRISB6 = 0; } while(0);
  3033  011D  0021               	movlb	1	; force select bank1
  3034  011E  130D               	bcf	13,6	;volatile
  3035                           
  3036                           ;main.c: 291: do { LATBbits.LATB6 = 0; } while(0);
  3037  011F  0022               	movlb	2	; force select bank2
  3038  0120  130D               	bcf	13,6	;volatile
  3039                           
  3040                           ;main.c: 293: do { TRISAbits.TRISA4 = 0; } while(0);
  3041  0121  0021               	movlb	1	; force select bank1
  3042  0122  120C               	bcf	12,4	;volatile
  3043                           
  3044                           ;main.c: 294: do { LATAbits.LATA4 = 0; } while(0);
  3045  0123  0022               	movlb	2	; force select bank2
  3046  0124  120C               	bcf	12,4	;volatile
  3047                           
  3048                           ;main.c: 295: do { TRISAbits.TRISA5 = 0; } while(0);
  3049  0125  0021               	movlb	1	; force select bank1
  3050  0126  128C               	bcf	12,5	;volatile
  3051                           
  3052                           ;main.c: 296: do { LATAbits.LATA5 = 0; } while(0);
  3053  0127  0022               	movlb	2	; force select bank2
  3054  0128  128C               	bcf	12,5	;volatile
  3055                           
  3056                           ;main.c: 297: do { TRISAbits.TRISA1 = 0; } while(0);
  3057  0129  0021               	movlb	1	; force select bank1
  3058  012A  108C               	bcf	12,1	;volatile
  3059                           
  3060                           ;main.c: 298: do { LATAbits.LATA1 = 0; } while(0);
  3061  012B  0022               	movlb	2	; force select bank2
  3062  012C  108C               	bcf	12,1	;volatile
  3063                           
  3064                           ;main.c: 299: do { TRISAbits.TRISA0 = 0; } while(0);
  3065  012D  0021               	movlb	1	; force select bank1
  3066  012E  100C               	bcf	12,0	;volatile
  3067                           
  3068                           ;main.c: 300: do { LATAbits.LATA0 = 0; } while(0);
  3069  012F  0022               	movlb	2	; force select bank2
  3070  0130  100C               	bcf	12,0	;volatile
  3071                           
  3072                           ;main.c: 301: do { LATCbits.LATC2 = 1; } while(0);
  3073  0131  0022               	movlb	2	; force select bank2
  3074  0132  150E               	bsf	14,2	;volatile
  3075                           
  3076                           ;main.c: 304: TMR6_StopTimer();
  3077  0133  2168  3180         	fcall	_TMR6_StopTimer
  3078                           
  3079                           ;main.c: 305: TMR2_StopTimer();
  3080  0135  2165  3180         	fcall	_TMR2_StopTimer
  3081                           
  3082                           ;main.c: 313: System_State = sRESET;
  3083  0137  0020               	movlb	0	; force select bank0
  3084  0138                     L1:	
  3085  0138  01CD               	clrf	main@System_State
  3086  0139  0ACD               	incf	main@System_State,f
  3087  013A                     l2589:	
  3088                           ;main.c: 315: }
  3089                           ;main.c: 316: }
  3090                           
  3091                           ;main.c: 314: break;
  3092                           
  3093  013A  0020               	movlb	0	; force select bank0
  3094  013B  084D               	movf	main@System_State,w
  3095                           
  3096                           ; Switch size 1, requested type "speed"
  3097                           ; Number of cases is 4, Range of values is 0 to 3
  3098                           ; switch strategies available:
  3099                           ; Name         Instructions Cycles
  3100                           ; direct_byte           14     6 (fixed)
  3101                           ; simple_byte           13     7 (average)
  3102                           ; jumptable            260     6 (fixed)
  3103                           ;	Chosen strategy is direct_byte
  3104  013C  0084               	movwf	4
  3105  013D  3004               	movlw	4
  3106  013E  0204               	subwf	4,w
  3107  013F  1803               	skipnc
  3108  0140  293A               	goto	l2589
  3109  0141  3185               	movlp	high S2735
  3110  0142  3504               	lslf	4,w
  3111  0143  3EF2               	addlw	low S2735
  3112  0144  0082               	movwf	2
  3113  0145  293A               	goto	l2589
  3114  0146                     __end_of_main:	
  3115  0146                     __ptext23:	
  3116 ;; *************** function _EPWM1_PowerDown *****************
  3117 ;; Defined at:
  3118 ;;		line 100 in file "mcc_generated_files/epwm1.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;		None
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		status,2
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3136 ;;Total ram usage:        0 bytes
  3137 ;; Hardware stack levels used:    1
  3138 ;; Hardware stack levels required when called:    5
  3139 ;; This function calls:
  3140 ;;		Nothing
  3141 ;; This function is called by:
  3142 ;;		_main
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           
  3147                           ;psect for function _EPWM1_PowerDown
  3148  0146                     _EPWM1_PowerDown:	
  3149                           
  3150                           ;epwm1.c: 101: CCP1CON = 0x0;
  3151                           
  3152                           ;incstack = 0
  3153                           ; Regs used in _EPWM1_PowerDown: [status,2]
  3154  0146  0025               	movlb	5	; force select bank5
  3155  0147  0193               	clrf	19	;volatile
  3156                           
  3157                           ;epwm1.c: 102: do { TRISCbits.TRISC5 = 0; } while(0);
  3158  0148  0021               	movlb	1	; force select bank1
  3159  0149  128E               	bcf	14,5	;volatile
  3160                           
  3161                           ;epwm1.c: 103: do { LATCbits.LATC5 = 0; } while(0);
  3162  014A  0022               	movlb	2	; force select bank2
  3163  014B  128E               	bcf	14,5	;volatile
  3164  014C  0008               	return
  3165  014D                     __end_of_EPWM1_PowerDown:	
  3166  014D                     __ptext21:	
  3167 ;; *************** function _EPWM2_PowerDown *****************
  3168 ;; Defined at:
  3169 ;;		line 100 in file "mcc_generated_files/epwm2.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		status,2
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3187 ;;Total ram usage:        0 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    5
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           
  3198                           ;psect for function _EPWM2_PowerDown
  3199  014D                     _EPWM2_PowerDown:	
  3200                           
  3201                           ;epwm2.c: 101: CCP2CON = 0x0;
  3202                           
  3203                           ;incstack = 0
  3204                           ; Regs used in _EPWM2_PowerDown: [status,2]
  3205  014D  0025               	movlb	5	; force select bank5
  3206  014E  019A               	clrf	26	;volatile
  3207                           
  3208                           ;epwm2.c: 102: do { TRISCbits.TRISC3 = 0; } while(0);
  3209  014F  0021               	movlb	1	; force select bank1
  3210  0150  118E               	bcf	14,3	;volatile
  3211                           
  3212                           ;epwm2.c: 103: do { LATCbits.LATC3 = 0; } while(0);
  3213  0151  0022               	movlb	2	; force select bank2
  3214  0152  118E               	bcf	14,3	;volatile
  3215  0153  0008               	return
  3216  0154                     __end_of_EPWM2_PowerDown:	
  3217  0154                     __ptext19:	
  3218 ;; *************** function _I2C1_Shutdown *****************
  3219 ;; Defined at:
  3220 ;;		line 117 in file "mcc_generated_files/i2c1.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		None
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3238 ;;Total ram usage:        0 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    5
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_main
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           
  3249                           ;psect for function _I2C1_Shutdown
  3250  0154                     _I2C1_Shutdown:	
  3251                           
  3252                           ;i2c1.c: 118: SSP1CON1bits.SSPEN = 0;
  3253                           
  3254                           ;incstack = 0
  3255                           ; Regs used in _I2C1_Shutdown: []
  3256  0154  0024               	movlb	4	; force select bank4
  3257  0155  1295               	bcf	21,5	;volatile
  3258  0156  0008               	return
  3259  0157                     __end_of_I2C1_Shutdown:	
  3260  0157                     __ptext16:	
  3261 ;; *************** function _PWM3_PowerDown *****************
  3262 ;; Defined at:
  3263 ;;		line 90 in file "mcc_generated_files/pwm3.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		status,2
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3281 ;;Total ram usage:        0 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    5
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_main
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           
  3292                           ;psect for function _PWM3_PowerDown
  3293  0157                     _PWM3_PowerDown:	
  3294                           
  3295                           ;pwm3.c: 91: CCP3CON = 0x0;
  3296                           
  3297                           ;incstack = 0
  3298                           ; Regs used in _PWM3_PowerDown: [status,2]
  3299  0157  0026               	movlb	6	; force select bank6
  3300  0158  0193               	clrf	19	;volatile
  3301                           
  3302                           ;pwm3.c: 92: do { TRISAbits.TRISA2 = 0; } while(0);
  3303  0159  0021               	movlb	1	; force select bank1
  3304  015A  110C               	bcf	12,2	;volatile
  3305                           
  3306                           ;pwm3.c: 93: do { LATAbits.LATA2 = 0; } while(0);
  3307  015B  0022               	movlb	2	; force select bank2
  3308  015C  110C               	bcf	12,2	;volatile
  3309  015D  0008               	return
  3310  015E                     __end_of_PWM3_PowerDown:	
  3311  015E                     __ptext14:	
  3312 ;; *************** function _PWM4_PowerDown *****************
  3313 ;; Defined at:
  3314 ;;		line 90 in file "mcc_generated_files/pwm4.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;		None
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;		None
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		status,2
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3332 ;;Total ram usage:        0 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:    5
  3335 ;; This function calls:
  3336 ;;		Nothing
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           
  3343                           ;psect for function _PWM4_PowerDown
  3344  015E                     _PWM4_PowerDown:	
  3345                           
  3346                           ;pwm4.c: 91: CCP4CON = 0x0;
  3347                           
  3348                           ;incstack = 0
  3349                           ; Regs used in _PWM4_PowerDown: [status,2]
  3350  015E  0026               	movlb	6	; force select bank6
  3351  015F  019A               	clrf	26	;volatile
  3352                           
  3353                           ;pwm4.c: 92: do { TRISCbits.TRISC6 = 0; } while(0);
  3354  0160  0021               	movlb	1	; force select bank1
  3355  0161  130E               	bcf	14,6	;volatile
  3356                           
  3357                           ;pwm4.c: 93: do { LATCbits.LATC6 = 0; } while(0);
  3358  0162  0022               	movlb	2	; force select bank2
  3359  0163  130E               	bcf	14,6	;volatile
  3360  0164  0008               	return
  3361  0165                     __end_of_PWM4_PowerDown:	
  3362  0165                     __ptext2:	
  3363 ;; *************** function _TMR2_StopTimer *****************
  3364 ;; Defined at:
  3365 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		None
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3383 ;;Total ram usage:        0 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    5
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_main
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           
  3394                           ;psect for function _TMR2_StopTimer
  3395  0165                     _TMR2_StopTimer:	
  3396                           
  3397                           ;tmr2.c: 90: T2CONbits.TMR2ON = 0;
  3398                           
  3399                           ;incstack = 0
  3400                           ; Regs used in _TMR2_StopTimer: []
  3401  0165  0020               	movlb	0	; force select bank0
  3402  0166  111C               	bcf	28,2	;volatile
  3403  0167  0008               	return
  3404  0168                     __end_of_TMR2_StopTimer:	
  3405  0168                     __ptext1:	
  3406 ;; *************** function _TMR6_StopTimer *****************
  3407 ;; Defined at:
  3408 ;;		line 96 in file "mcc_generated_files/tmr6.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		None
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    5
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_main
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           
  3437                           ;psect for function _TMR6_StopTimer
  3438  0168                     _TMR6_StopTimer:	
  3439                           
  3440                           ;tmr6.c: 99: T6CONbits.TMR6ON = 0;
  3441                           
  3442                           ;incstack = 0
  3443                           ; Regs used in _TMR6_StopTimer: []
  3444  0168  0028               	movlb	8	; force select bank8
  3445  0169  111E               	bcf	30,2	;volatile
  3446  016A  0008               	return
  3447  016B                     __end_of_TMR6_StopTimer:	
  3448  016B                     __ptext27:	
  3449 ;; *************** function _ADC_GetConversion *****************
  3450 ;; Defined at:
  3451 ;;		line 115 in file "mcc_generated_files/adc.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  channel         1    wreg     enum E2976
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  channel         1   12[BANK0 ] enum E2976
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  2    9[BANK0 ] unsigned int 
  3458 ;; Registers used:
  3459 ;;		wreg, status,2, status,0
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3465 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3466 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3467 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3468 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3469 ;;Total ram usage:        4 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    5
  3472 ;; This function calls:
  3473 ;;		Nothing
  3474 ;; This function is called by:
  3475 ;;		_main
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           
  3480                           ;psect for function _ADC_GetConversion
  3481  016B                     _ADC_GetConversion:	
  3482                           
  3483                           ;incstack = 0
  3484                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3485                           ;ADC_GetConversion@channel stored from wreg
  3486  016B  0020               	movlb	0	; force select bank0
  3487  016C  00C9               	movwf	ADC_GetConversion@channel
  3488                           
  3489                           ;adc.c: 118: ADCON0bits.CHS = channel;
  3490  016D  0020               	movlb	0	; force select bank0
  3491  016E  0849               	movf	ADC_GetConversion@channel,w
  3492  016F  0020               	movlb	0	; force select bank0
  3493  0170  00C8               	movwf	??_ADC_GetConversion
  3494  0171  0DC8               	rlf	??_ADC_GetConversion,f
  3495  0172  0DC8               	rlf	??_ADC_GetConversion,f
  3496  0173  0021               	movlb	1	; force select bank1
  3497  0174  081D               	movf	29,w	;volatile
  3498  0175  0020               	movlb	0	; force select bank0
  3499  0176  0648               	xorwf	??_ADC_GetConversion,w
  3500  0177  3983               	andlw	-125
  3501  0178  0648               	xorwf	??_ADC_GetConversion,w
  3502  0179  0021               	movlb	1	; force select bank1
  3503  017A  009D               	movwf	29	;volatile
  3504                           
  3505                           ;adc.c: 121: ADCON0bits.ADON = 1;
  3506  017B  0021               	movlb	1	; force select bank1
  3507  017C  141D               	bsf	29,0	;volatile
  3508                           
  3509                           ;adc.c: 123: _delay((unsigned long)((5)*(32000000/4000000.0)));
  3510  017D  300D               	movlw	13
  3511  017E                     u827:	
  3512  017E  0B89               	decfsz	9,f
  3513  017F  297E               	goto	u827
  3514  0180  0000               	nop
  3515                           
  3516                           ;adc.c: 126: ADCON0bits.GO_nDONE = 1;
  3517  0181  0021               	movlb	1	; force select bank1
  3518  0182  149D               	bsf	29,1	;volatile
  3519  0183                     l305:	
  3520                           ;adc.c: 130: {
  3521                           
  3522                           ;adc.c: 129: while (ADCON0bits.GO_nDONE)
  3523                           
  3524  0183  0021               	movlb	1	; force select bank1
  3525  0184  189D               	btfsc	29,1	;volatile
  3526  0185  2983               	goto	l305
  3527                           
  3528                           ;adc.c: 131: }
  3529                           ;adc.c: 134: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3530  0186  0021               	movlb	1	; force select bank1
  3531  0187  081C               	movf	28,w	;volatile
  3532  0188  0020               	movlb	0	; force select bank0
  3533  0189  00C7               	movwf	?_ADC_GetConversion+1
  3534  018A  0021               	movlb	1	; force select bank1
  3535  018B  081B               	movf	27,w	;volatile
  3536  018C  0020               	movlb	0	; force select bank0
  3537  018D  00C6               	movwf	?_ADC_GetConversion
  3538  018E  0008               	return
  3539  018F                     __end_of_ADC_GetConversion:	
  3540  018F                     __ptext26:	
  3541 ;; *************** function _ADC_SelectChannel *****************
  3542 ;; Defined at:
  3543 ;;		line 88 in file "mcc_generated_files/adc.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  channel         1    wreg     enum E2976
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;  channel         1   10[BANK0 ] enum E2976
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3558 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3559 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3560 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3561 ;;Total ram usage:        2 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    5
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_main
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           
  3572                           ;psect for function _ADC_SelectChannel
  3573  018F                     _ADC_SelectChannel:	
  3574                           
  3575                           ;incstack = 0
  3576                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  3577                           ;ADC_SelectChannel@channel stored from wreg
  3578  018F  0020               	movlb	0	; force select bank0
  3579  0190  00C7               	movwf	ADC_SelectChannel@channel
  3580                           
  3581                           ;adc.c: 91: ADCON0bits.CHS = channel;
  3582  0191  0020               	movlb	0	; force select bank0
  3583  0192  0847               	movf	ADC_SelectChannel@channel,w
  3584  0193  0020               	movlb	0	; force select bank0
  3585  0194  00C6               	movwf	??_ADC_SelectChannel
  3586  0195  0DC6               	rlf	??_ADC_SelectChannel,f
  3587  0196  0DC6               	rlf	??_ADC_SelectChannel,f
  3588  0197  0021               	movlb	1	; force select bank1
  3589  0198  081D               	movf	29,w	;volatile
  3590  0199  0020               	movlb	0	; force select bank0
  3591  019A  0646               	xorwf	??_ADC_SelectChannel,w
  3592  019B  3983               	andlw	-125
  3593  019C  0646               	xorwf	??_ADC_SelectChannel,w
  3594  019D  0021               	movlb	1	; force select bank1
  3595  019E  009D               	movwf	29	;volatile
  3596                           
  3597                           ;adc.c: 93: ADCON0bits.ADON = 1;
  3598  019F  0021               	movlb	1	; force select bank1
  3599  01A0  141D               	bsf	29,0	;volatile
  3600  01A1  0008               	return
  3601  01A2                     __end_of_ADC_SelectChannel:	
  3602  01A2                     __ptext25:	
  3603 ;; *************** function _ADC_StartConversion *****************
  3604 ;; Defined at:
  3605 ;;		line 96 in file "mcc_generated_files/adc.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		None
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3623 ;;Total ram usage:        0 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    5
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		_main
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           
  3634                           ;psect for function _ADC_StartConversion
  3635  01A2                     _ADC_StartConversion:	
  3636                           
  3637                           ;adc.c: 99: ADCON0bits.GO_nDONE = 1;
  3638                           
  3639                           ;incstack = 0
  3640                           ; Regs used in _ADC_StartConversion: []
  3641  01A2  0021               	movlb	1	; force select bank1
  3642  01A3  149D               	bsf	29,1	;volatile
  3643  01A4  0008               	return
  3644  01A5                     __end_of_ADC_StartConversion:	
  3645  01A5                     __ptext24:	
  3646 ;; *************** function _EPWM1_Initialize *****************
  3647 ;; Defined at:
  3648 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;		None
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3666 ;;Total ram usage:        0 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    5
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_main
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           
  3677                           ;psect for function _EPWM1_Initialize
  3678  01A5                     _EPWM1_Initialize:	
  3679                           
  3680                           ;epwm1.c: 69: CCP1CON = 0x1D;
  3681                           
  3682                           ;incstack = 0
  3683                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  3684  01A5  301D               	movlw	29
  3685  01A6  0025               	movlb	5	; force select bank5
  3686  01A7  0093               	movwf	19	;volatile
  3687                           
  3688                           ;epwm1.c: 72: ECCP1AS = 0x00;
  3689  01A8  0025               	movlb	5	; force select bank5
  3690  01A9  0195               	clrf	21	;volatile
  3691                           
  3692                           ;epwm1.c: 75: PWM1CON = 0x80;
  3693  01AA  3080               	movlw	128
  3694  01AB  0025               	movlb	5	; force select bank5
  3695  01AC  0094               	movwf	20	;volatile
  3696                           
  3697                           ;epwm1.c: 78: PSTR1CON = 0x01;
  3698  01AD  3001               	movlw	1
  3699  01AE  0025               	movlb	5	; force select bank5
  3700  01AF  0096               	movwf	22	;volatile
  3701                           
  3702                           ;epwm1.c: 81: CCPR1L = 0x7D;
  3703  01B0  307D               	movlw	125
  3704  01B1  0025               	movlb	5	; force select bank5
  3705  01B2  0091               	movwf	17	;volatile
  3706                           
  3707                           ;epwm1.c: 84: CCPR1H = 0x00;
  3708  01B3  0025               	movlb	5	; force select bank5
  3709  01B4  0192               	clrf	18	;volatile
  3710                           
  3711                           ;epwm1.c: 87: CCPTMRSbits.C1TSEL = 0x0;
  3712  01B5  30FC               	movlw	-4
  3713  01B6  0025               	movlb	5	; force select bank5
  3714  01B7  059E               	andwf	30,f	;volatile
  3715  01B8  0008               	return
  3716  01B9                     __end_of_EPWM1_Initialize:	
  3717  01B9                     __ptext22:	
  3718 ;; *************** function _EPWM2_Initialize *****************
  3719 ;; Defined at:
  3720 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;		None
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;		None
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      void 
  3727 ;; Registers used:
  3728 ;;		wreg, status,2, status,0
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3738 ;;Total ram usage:        0 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:    5
  3741 ;; This function calls:
  3742 ;;		Nothing
  3743 ;; This function is called by:
  3744 ;;		_main
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           
  3749                           ;psect for function _EPWM2_Initialize
  3750  01B9                     _EPWM2_Initialize:	
  3751                           
  3752                           ;epwm2.c: 69: CCP2CON = 0x3C;
  3753                           
  3754                           ;incstack = 0
  3755                           ; Regs used in _EPWM2_Initialize: [wreg+status,2+status,0]
  3756  01B9  303C               	movlw	60
  3757  01BA  0025               	movlb	5	; force select bank5
  3758  01BB  009A               	movwf	26	;volatile
  3759                           
  3760                           ;epwm2.c: 72: CCP2AS = 0x00;
  3761  01BC  0025               	movlb	5	; force select bank5
  3762  01BD  019C               	clrf	28	;volatile
  3763                           
  3764                           ;epwm2.c: 75: PWM2CON = 0x80;
  3765  01BE  3080               	movlw	128
  3766  01BF  0025               	movlb	5	; force select bank5
  3767  01C0  009B               	movwf	27	;volatile
  3768                           
  3769                           ;epwm2.c: 78: PSTR2CON = 0x01;
  3770  01C1  3001               	movlw	1
  3771  01C2  0025               	movlb	5	; force select bank5
  3772  01C3  009D               	movwf	29	;volatile
  3773                           
  3774                           ;epwm2.c: 81: CCPR2L = 0xBF;
  3775  01C4  30BF               	movlw	191
  3776  01C5  0025               	movlb	5	; force select bank5
  3777  01C6  0098               	movwf	24	;volatile
  3778                           
  3779                           ;epwm2.c: 84: CCPR2H = 0x00;
  3780  01C7  0025               	movlb	5	; force select bank5
  3781  01C8  0199               	clrf	25	;volatile
  3782                           
  3783                           ;epwm2.c: 88: CCPTMRSbits.C2TSEL = 0x0;
  3784  01C9  30F3               	movlw	-13
  3785  01CA  0025               	movlb	5	; force select bank5
  3786  01CB  059E               	andwf	30,f	;volatile
  3787  01CC  0008               	return
  3788  01CD                     __end_of_EPWM2_Initialize:	
  3789  01CD                     __ptext20:	
  3790 ;; *************** function _I2C1_ReadBuffer *****************
  3791 ;; Defined at:
  3792 ;;		line 125 in file "mcc_generated_files/i2c1.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;  address         1    wreg     enum E2979
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  address         1    9[BANK0 ] enum E2979
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      unsigned char 
  3799 ;; Registers used:
  3800 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3807 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3809 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3810 ;;Total ram usage:        1 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    5
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		_main
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           
  3821                           ;psect for function _I2C1_ReadBuffer
  3822  01CD                     _I2C1_ReadBuffer:	
  3823                           
  3824                           ;incstack = 0
  3825                           ; Regs used in _I2C1_ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  3826                           ;I2C1_ReadBuffer@address stored from wreg
  3827  01CD  0020               	movlb	0	; force select bank0
  3828  01CE  00C6               	movwf	I2C1_ReadBuffer@address
  3829                           
  3830                           ;i2c1.c: 126: return EEPROM_Buffer[address];
  3831  01CF  0020               	movlb	0	; force select bank0
  3832  01D0  0846               	movf	I2C1_ReadBuffer@address,w
  3833  01D1  3E20               	addlw	low _EEPROM_Buffer
  3834  01D2  0086               	movwf	6
  3835  01D3  3000               	movlw	high _EEPROM_Buffer
  3836  01D4  0187               	clrf	7
  3837  01D5  3D87               	addwfc	7,f
  3838  01D6  0801               	movf	1,w
  3839  01D7  0008               	return
  3840  01D8                     __end_of_I2C1_ReadBuffer:	
  3841  01D8                     __ptext18:	
  3842 ;; *************** function _I2C1_Startup *****************
  3843 ;; Defined at:
  3844 ;;		line 121 in file "mcc_generated_files/i2c1.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;		None
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      void 
  3851 ;; Registers used:
  3852 ;;		None
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3862 ;;Total ram usage:        0 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    5
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		_main
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           
  3873                           ;psect for function _I2C1_Startup
  3874  01D8                     _I2C1_Startup:	
  3875                           
  3876                           ;i2c1.c: 122: SSP1CON1bits.SSPEN = 1;
  3877                           
  3878                           ;incstack = 0
  3879                           ; Regs used in _I2C1_Startup: []
  3880  01D8  0024               	movlb	4	; force select bank4
  3881  01D9  1695               	bsf	21,5	;volatile
  3882  01DA  0008               	return
  3883  01DB                     __end_of_I2C1_Startup:	
  3884  01DB                     __ptext17:	
  3885 ;; *************** function _PWM3_Initialize *****************
  3886 ;; Defined at:
  3887 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;		None
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;		None
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      void 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3905 ;;Total ram usage:        0 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    5
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_main
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           
  3916                           ;psect for function _PWM3_Initialize
  3917  01DB                     _PWM3_Initialize:	
  3918                           
  3919                           ;pwm3.c: 69: CCP3CON = 0x3C;
  3920                           
  3921                           ;incstack = 0
  3922                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  3923  01DB  303C               	movlw	60
  3924  01DC  0026               	movlb	6	; force select bank6
  3925  01DD  0093               	movwf	19	;volatile
  3926                           
  3927                           ;pwm3.c: 72: CCPR3L = 0xBF;
  3928  01DE  30BF               	movlw	191
  3929  01DF  0026               	movlb	6	; force select bank6
  3930  01E0  0091               	movwf	17	;volatile
  3931                           
  3932                           ;pwm3.c: 75: CCPR3H = 0x00;
  3933  01E1  0026               	movlb	6	; force select bank6
  3934  01E2  0192               	clrf	18	;volatile
  3935                           
  3936                           ;pwm3.c: 78: CCPTMRSbits.C3TSEL = 0x0;
  3937  01E3  30CF               	movlw	-49
  3938  01E4  0025               	movlb	5	; force select bank5
  3939  01E5  059E               	andwf	30,f	;volatile
  3940  01E6  0008               	return
  3941  01E7                     __end_of_PWM3_Initialize:	
  3942  01E7                     __ptext15:	
  3943 ;; *************** function _PWM4_Initialize *****************
  3944 ;; Defined at:
  3945 ;;		line 64 in file "mcc_generated_files/pwm4.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      void 
  3952 ;; Registers used:
  3953 ;;		wreg, status,2, status,0
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3963 ;;Total ram usage:        0 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:    5
  3966 ;; This function calls:
  3967 ;;		Nothing
  3968 ;; This function is called by:
  3969 ;;		_main
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           
  3974                           ;psect for function _PWM4_Initialize
  3975  01E7                     _PWM4_Initialize:	
  3976                           
  3977                           ;pwm4.c: 69: CCP4CON = 0x3C;
  3978                           
  3979                           ;incstack = 0
  3980                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
  3981  01E7  303C               	movlw	60
  3982  01E8  0026               	movlb	6	; force select bank6
  3983  01E9  009A               	movwf	26	;volatile
  3984                           
  3985                           ;pwm4.c: 72: CCPR4L = 0xBF;
  3986  01EA  30BF               	movlw	191
  3987  01EB  0026               	movlb	6	; force select bank6
  3988  01EC  0098               	movwf	24	;volatile
  3989                           
  3990                           ;pwm4.c: 75: CCPR4H = 0x00;
  3991  01ED  0026               	movlb	6	; force select bank6
  3992  01EE  0199               	clrf	25	;volatile
  3993                           
  3994                           ;pwm4.c: 78: CCPTMRSbits.C4TSEL = 0x0;
  3995  01EF  303F               	movlw	-193
  3996  01F0  0025               	movlb	5	; force select bank5
  3997  01F1  059E               	andwf	30,f	;volatile
  3998  01F2  0008               	return
  3999  01F3                     __end_of_PWM4_Initialize:	
  4000  01F3                     __ptext9:	
  4001 ;; *************** function _TMR2_StartTimer *****************
  4002 ;; Defined at:
  4003 ;;		line 81 in file "mcc_generated_files/tmr2.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;		None
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;		None
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		None
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4021 ;;Total ram usage:        0 bytes
  4022 ;; Hardware stack levels used:    1
  4023 ;; Hardware stack levels required when called:    5
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_TMR2_Initialize
  4028 ;;		_main
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           
  4033                           ;psect for function _TMR2_StartTimer
  4034  01F3                     _TMR2_StartTimer:	
  4035  01F3                     l1489:	
  4036                           ;incstack = 0
  4037                           ; Regs used in _TMR2_StartTimer: []
  4038                           
  4039                           
  4040                           ;tmr2.c: 84: T2CONbits.TMR2ON = 1;
  4041  01F3  0020               	movlb	0	; force select bank0
  4042  01F4  151C               	bsf	28,2	;volatile
  4043  01F5  0008               	return
  4044  01F6                     __end_of_TMR2_StartTimer:	
  4045  01F6                     __ptext7:	
  4046 ;; *************** function _TMR6_SetInterruptHandler *****************
  4047 ;; Defined at:
  4048 ;;		line 148 in file "mcc_generated_files/tmr6.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;  InterruptHan    2    9[BANK0 ] PTR FTN()void 
  4051 ;;		 -> Timer6Overflow(1), TMR6_DefaultInterruptHandler(1), 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		wreg
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4063 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4066 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4067 ;;Total ram usage:        2 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    5
  4070 ;; This function calls:
  4071 ;;		Nothing
  4072 ;; This function is called by:
  4073 ;;		_TMR6_Initialize
  4074 ;;		_main
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           
  4079                           ;psect for function _TMR6_SetInterruptHandler
  4080  01F6                     _TMR6_SetInterruptHandler:	
  4081                           
  4082                           ;tmr6.c: 149: TMR6_InterruptHandler = InterruptHandler;
  4083                           
  4084                           ;incstack = 0
  4085                           ; Regs used in _TMR6_SetInterruptHandler: [wreg]
  4086  01F6  0020               	movlb	0	; force select bank0
  4087  01F7  0847               	movf	TMR6_SetInterruptHandler@InterruptHandler+1,w
  4088  01F8  0020               	movlb	0	; force select bank0
  4089  01F9  00CF               	movwf	_TMR6_InterruptHandler+1
  4090  01FA  0020               	movlb	0	; force select bank0
  4091  01FB  0846               	movf	TMR6_SetInterruptHandler@InterruptHandler,w
  4092  01FC  0020               	movlb	0	; force select bank0
  4093  01FD  00CE               	movwf	_TMR6_InterruptHandler
  4094  01FE  0008               	return
  4095  01FF                     __end_of_TMR6_SetInterruptHandler:	
  4096  01FF                     __ptext6:	
  4097 ;; *************** function _TMR6_StartTimer *****************
  4098 ;; Defined at:
  4099 ;;		line 90 in file "mcc_generated_files/tmr6.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;		None
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1    wreg      void 
  4106 ;; Registers used:
  4107 ;;		None
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4117 ;;Total ram usage:        0 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    5
  4120 ;; This function calls:
  4121 ;;		Nothing
  4122 ;; This function is called by:
  4123 ;;		_TMR6_Initialize
  4124 ;;		_main
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           
  4129                           ;psect for function _TMR6_StartTimer
  4130  01FF                     _TMR6_StartTimer:	
  4131  01FF                     l1493:	
  4132                           ;incstack = 0
  4133                           ; Regs used in _TMR6_StartTimer: []
  4134                           
  4135                           
  4136                           ;tmr6.c: 93: T6CONbits.TMR6ON = 1;
  4137  01FF  0028               	movlb	8	; force select bank8
  4138  0200  151E               	bsf	30,2	;volatile
  4139  0201  0008               	return
  4140  0202                     __end_of_TMR6_StartTimer:	
  4141  0202                     __ptext3:	
  4142 ;; *************** function _SYSTEM_Initialize *****************
  4143 ;; Defined at:
  4144 ;;		line 69 in file "mcc_generated_files/mcc.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;		None
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;		None
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      void 
  4151 ;; Registers used:
  4152 ;;		wreg, status,2, status,0, pclath, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;Total ram usage:        0 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    7
  4165 ;; This function calls:
  4166 ;;		_ADC_Initialize
  4167 ;;		_I2C1_Initialize
  4168 ;;		_OSCILLATOR_Initialize
  4169 ;;		_PIN_MANAGER_Initialize
  4170 ;;		_TMR2_Initialize
  4171 ;;		_TMR6_Initialize
  4172 ;;		_WDT_Initialize
  4173 ;; This function is called by:
  4174 ;;		_main
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           
  4179                           ;psect for function _SYSTEM_Initialize
  4180  0202                     _SYSTEM_Initialize:	
  4181                           
  4182                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  4183                           
  4184                           ;incstack = 0
  4185                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4186  0202  224B  3180         	fcall	_PIN_MANAGER_Initialize
  4187                           
  4188                           ;mcc.c: 73: OSCILLATOR_Initialize();
  4189  0204  2242  3180         	fcall	_OSCILLATOR_Initialize
  4190                           
  4191                           ;mcc.c: 74: WDT_Initialize();
  4192  0206  2287  3180         	fcall	_WDT_Initialize
  4193                           
  4194                           ;mcc.c: 75: I2C1_Initialize();
  4195  0208  222D  3180         	fcall	_I2C1_Initialize
  4196                           
  4197                           ;mcc.c: 76: TMR6_Initialize();
  4198  020A  2273  3180         	fcall	_TMR6_Initialize
  4199                           
  4200                           ;mcc.c: 84: ADC_Initialize();
  4201  020C  2220  3180         	fcall	_ADC_Initialize
  4202                           
  4203                           ;mcc.c: 85: TMR2_Initialize();
  4204  020E  228B               	fcall	_TMR2_Initialize
  4205                           
  4206                           ;mcc.c: 87: do { TRISCbits.TRISC5 = 0; } while(0);
  4207  020F  0021               	movlb	1	; force select bank1
  4208  0210  128E               	bcf	14,5	;volatile
  4209                           
  4210                           ;mcc.c: 88: do { LATCbits.LATC5 = 0; } while(0);
  4211  0211  0022               	movlb	2	; force select bank2
  4212  0212  128E               	bcf	14,5	;volatile
  4213                           
  4214                           ;mcc.c: 89: do { TRISCbits.TRISC3 = 0; } while(0);
  4215  0213  0021               	movlb	1	; force select bank1
  4216  0214  118E               	bcf	14,3	;volatile
  4217                           
  4218                           ;mcc.c: 90: do { LATCbits.LATC3 = 0; } while(0);
  4219  0215  0022               	movlb	2	; force select bank2
  4220  0216  118E               	bcf	14,3	;volatile
  4221                           
  4222                           ;mcc.c: 91: do { TRISAbits.TRISA2 = 0; } while(0);
  4223  0217  0021               	movlb	1	; force select bank1
  4224  0218  110C               	bcf	12,2	;volatile
  4225                           
  4226                           ;mcc.c: 92: do { LATAbits.LATA2 = 0; } while(0);
  4227  0219  0022               	movlb	2	; force select bank2
  4228  021A  110C               	bcf	12,2	;volatile
  4229                           
  4230                           ;mcc.c: 93: do { TRISCbits.TRISC6 = 0; } while(0);
  4231  021B  0021               	movlb	1	; force select bank1
  4232  021C  130E               	bcf	14,6	;volatile
  4233                           
  4234                           ;mcc.c: 94: do { LATCbits.LATC6 = 0; } while(0);
  4235  021D  0022               	movlb	2	; force select bank2
  4236  021E  130E               	bcf	14,6	;volatile
  4237  021F  0008               	return
  4238  0220                     __end_of_SYSTEM_Initialize:	
  4239  0220                     __ptext13:	
  4240 ;; *************** function _ADC_Initialize *****************
  4241 ;; Defined at:
  4242 ;;		line 68 in file "mcc_generated_files/adc.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      void 
  4249 ;; Registers used:
  4250 ;;		wreg, status,2
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;Total ram usage:        0 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    5
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_SYSTEM_Initialize
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           
  4271                           ;psect for function _ADC_Initialize
  4272  0220                     _ADC_Initialize:	
  4273                           
  4274                           ;adc.c: 73: ADCON0 = 0x01;
  4275                           
  4276                           ;incstack = 0
  4277                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4278  0220  3001               	movlw	1
  4279  0221  0021               	movlb	1	; force select bank1
  4280  0222  009D               	movwf	29	;volatile
  4281                           
  4282                           ;adc.c: 76: ADCON1 = 0x20;
  4283  0223  3020               	movlw	32
  4284  0224  0021               	movlb	1	; force select bank1
  4285  0225  009E               	movwf	30	;volatile
  4286                           
  4287                           ;adc.c: 79: ADRESL = 0x00;
  4288  0226  0021               	movlb	1	; force select bank1
  4289  0227  019B               	clrf	27	;volatile
  4290                           
  4291                           ;adc.c: 82: ADRESH = 0x00;
  4292  0228  0021               	movlb	1	; force select bank1
  4293  0229  019C               	clrf	28	;volatile
  4294                           
  4295                           ;adc.c: 85: PIE1bits.ADIE = 1;
  4296  022A  0021               	movlb	1	; force select bank1
  4297  022B  1711               	bsf	17,6	;volatile
  4298  022C  0008               	return
  4299  022D                     __end_of_ADC_Initialize:	
  4300  022D                     __ptext12:	
  4301 ;; *************** function _I2C1_Initialize *****************
  4302 ;; Defined at:
  4303 ;;		line 94 in file "mcc_generated_files/i2c1.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;		None
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;		None
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1    wreg      void 
  4310 ;; Registers used:
  4311 ;;		wreg, status,2
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4321 ;;Total ram usage:        0 bytes
  4322 ;; Hardware stack levels used:    1
  4323 ;; Hardware stack levels required when called:    5
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		_SYSTEM_Initialize
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           
  4332                           ;psect for function _I2C1_Initialize
  4333  022D                     _I2C1_Initialize:	
  4334                           
  4335                           ;i2c1.c: 98: SSP1STAT = 0x00;
  4336                           
  4337                           ;incstack = 0
  4338                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  4339  022D  0024               	movlb	4	; force select bank4
  4340  022E  0194               	clrf	20	;volatile
  4341                           
  4342                           ;i2c1.c: 100: SSP1CON1 = 0x26;
  4343  022F  3026               	movlw	38
  4344  0230  0024               	movlb	4	; force select bank4
  4345  0231  0095               	movwf	21	;volatile
  4346                           
  4347                           ;i2c1.c: 102: SSP1CON2 = 0x00;
  4348  0232  0024               	movlb	4	; force select bank4
  4349  0233  0196               	clrf	22	;volatile
  4350                           
  4351                           ;i2c1.c: 104: SSP1CON3 = 0x08;
  4352  0234  3008               	movlw	8
  4353  0235  0024               	movlb	4	; force select bank4
  4354  0236  0097               	movwf	23	;volatile
  4355                           
  4356                           ;i2c1.c: 106: SSP1MSK = (0x7F << 1);
  4357  0237  30FE               	movlw	254
  4358  0238  0024               	movlb	4	; force select bank4
  4359  0239  0093               	movwf	19	;volatile
  4360                           
  4361                           ;i2c1.c: 108: SSP1ADD = (0x08 << 1);
  4362  023A  3010               	movlw	16
  4363  023B  0024               	movlb	4	; force select bank4
  4364  023C  0092               	movwf	18	;volatile
  4365                           
  4366                           ;i2c1.c: 111: PIR1bits.SSP1IF = 0;
  4367  023D  0020               	movlb	0	; force select bank0
  4368  023E  1191               	bcf	17,3	;volatile
  4369                           
  4370                           ;i2c1.c: 113: PIE1bits.SSP1IE = 1;
  4371  023F  0021               	movlb	1	; force select bank1
  4372  0240  1591               	bsf	17,3	;volatile
  4373  0241  0008               	return
  4374  0242                     __end_of_I2C1_Initialize:	
  4375  0242                     __ptext11:	
  4376 ;; *************** function _OSCILLATOR_Initialize *****************
  4377 ;; Defined at:
  4378 ;;		line 98 in file "mcc_generated_files/mcc.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;		None
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;		None
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  1    wreg      void 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4396 ;;Total ram usage:        0 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; Hardware stack levels required when called:    5
  4399 ;; This function calls:
  4400 ;;		Nothing
  4401 ;; This function is called by:
  4402 ;;		_SYSTEM_Initialize
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           
  4407                           ;psect for function _OSCILLATOR_Initialize
  4408  0242                     _OSCILLATOR_Initialize:	
  4409                           
  4410                           ;mcc.c: 101: OSCCON = 0x70;
  4411                           
  4412                           ;incstack = 0
  4413                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4414  0242  3070               	movlw	112
  4415  0243  0021               	movlb	1	; force select bank1
  4416  0244  0099               	movwf	25	;volatile
  4417                           
  4418                           ;mcc.c: 103: OSCTUNE = 0x00;
  4419  0245  0021               	movlb	1	; force select bank1
  4420  0246  0198               	clrf	24	;volatile
  4421  0247                     l56:	
  4422                           ;mcc.c: 106: {
  4423                           
  4424                           ;mcc.c: 105: while(PLLR == 0)
  4425                           
  4426  0247  0021               	movlb	1	; force select bank1
  4427  0248  1B1A               	btfsc	26,6	;volatile
  4428  0249  0008               	return
  4429  024A  2A47               	goto	l56
  4430  024B                     __end_of_OSCILLATOR_Initialize:	
  4431  024B                     __ptext10:	
  4432 ;; *************** function _PIN_MANAGER_Initialize *****************
  4433 ;; Defined at:
  4434 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;		None
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;		None
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  1    wreg      void 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4452 ;;Total ram usage:        0 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    5
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_SYSTEM_Initialize
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           
  4463                           ;psect for function _PIN_MANAGER_Initialize
  4464  024B                     _PIN_MANAGER_Initialize:	
  4465                           
  4466                           ;pin_manager.c: 57: LATA = 0x00;
  4467                           
  4468                           ;incstack = 0
  4469                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4470  024B  0022               	movlb	2	; force select bank2
  4471  024C  018C               	clrf	12	;volatile
  4472                           
  4473                           ;pin_manager.c: 58: LATB = 0x00;
  4474  024D  0022               	movlb	2	; force select bank2
  4475  024E  018D               	clrf	13	;volatile
  4476                           
  4477                           ;pin_manager.c: 59: LATC = 0x04;
  4478  024F  3004               	movlw	4
  4479  0250  0022               	movlb	2	; force select bank2
  4480  0251  008E               	movwf	14	;volatile
  4481                           
  4482                           ;pin_manager.c: 64: TRISA = 0x1B;
  4483  0252  301B               	movlw	27
  4484  0253  0021               	movlb	1	; force select bank1
  4485  0254  008C               	movwf	12	;volatile
  4486                           
  4487                           ;pin_manager.c: 65: TRISB = 0x70;
  4488  0255  3070               	movlw	112
  4489  0256  0021               	movlb	1	; force select bank1
  4490  0257  008D               	movwf	13	;volatile
  4491                           
  4492                           ;pin_manager.c: 66: TRISC = 0x81;
  4493  0258  3081               	movlw	129
  4494  0259  0021               	movlb	1	; force select bank1
  4495  025A  008E               	movwf	14	;volatile
  4496                           
  4497                           ;pin_manager.c: 71: ANSELC = 0xC7;
  4498  025B  30C7               	movlw	199
  4499  025C  0023               	movlb	3	; force select bank3
  4500  025D  008E               	movwf	14	;volatile
  4501                           
  4502                           ;pin_manager.c: 72: ANSELB = 0x00;
  4503  025E  0023               	movlb	3	; force select bank3
  4504  025F  018D               	clrf	13	;volatile
  4505                           
  4506                           ;pin_manager.c: 73: ANSELA = 0x17;
  4507  0260  3017               	movlw	23
  4508  0261  0023               	movlb	3	; force select bank3
  4509  0262  008C               	movwf	12	;volatile
  4510                           
  4511                           ;pin_manager.c: 78: WPUB = 0x50;
  4512  0263  3050               	movlw	80
  4513  0264  0024               	movlb	4	; force select bank4
  4514  0265  008D               	movwf	13	;volatile
  4515                           
  4516                           ;pin_manager.c: 79: WPUA = 0x2C;
  4517  0266  302C               	movlw	44
  4518  0267  0024               	movlb	4	; force select bank4
  4519  0268  008C               	movwf	12	;volatile
  4520                           
  4521                           ;pin_manager.c: 80: WPUC = 0x6E;
  4522  0269  306E               	movlw	110
  4523  026A  0024               	movlb	4	; force select bank4
  4524  026B  008E               	movwf	14	;volatile
  4525                           
  4526                           ;pin_manager.c: 81: OPTION_REGbits.nWPUEN = 0;
  4527  026C  0021               	movlb	1	; force select bank1
  4528  026D  1395               	bcf	21,7	;volatile
  4529                           
  4530                           ;pin_manager.c: 87: APFCON1 = 0x00;
  4531  026E  0022               	movlb	2	; force select bank2
  4532  026F  019E               	clrf	30	;volatile
  4533                           
  4534                           ;pin_manager.c: 88: APFCON0 = 0x00;
  4535  0270  0022               	movlb	2	; force select bank2
  4536  0271  019D               	clrf	29	;volatile
  4537  0272  0008               	return
  4538  0273                     __end_of_PIN_MANAGER_Initialize:	
  4539  0273                     __ptext5:	
  4540 ;; *************** function _TMR6_Initialize *****************
  4541 ;; Defined at:
  4542 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;		None
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2, status,0, pclath, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4560 ;;Total ram usage:        0 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    6
  4563 ;; This function calls:
  4564 ;;		_TMR6_SetInterruptHandler
  4565 ;;		_TMR6_StartTimer
  4566 ;; This function is called by:
  4567 ;;		_SYSTEM_Initialize
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           
  4572                           ;psect for function _TMR6_Initialize
  4573  0273                     _TMR6_Initialize:	
  4574                           
  4575                           ;tmr6.c: 69: T6CON = 0x03;
  4576                           
  4577                           ;incstack = 0
  4578                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4579  0273  3003               	movlw	3
  4580  0274  0028               	movlb	8	; force select bank8
  4581  0275  009E               	movwf	30	;volatile
  4582                           
  4583                           ;tmr6.c: 72: PR6 = 0xFE;
  4584  0276  30FE               	movlw	254
  4585  0277  0028               	movlb	8	; force select bank8
  4586  0278  009D               	movwf	29	;volatile
  4587                           
  4588                           ;tmr6.c: 75: TMR6 = 0x00;
  4589  0279  0028               	movlb	8	; force select bank8
  4590  027A  019C               	clrf	28	;volatile
  4591                           
  4592                           ;tmr6.c: 78: PIR3bits.TMR6IF = 0;
  4593  027B  0020               	movlb	0	; force select bank0
  4594  027C  1193               	bcf	19,3	;volatile
  4595                           
  4596                           ;tmr6.c: 81: PIE3bits.TMR6IE = 1;
  4597  027D  0021               	movlb	1	; force select bank1
  4598  027E  1593               	bsf	19,3	;volatile
  4599                           
  4600                           ;tmr6.c: 84: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  4601  027F  30AA               	movlw	low _TMR6_DefaultInterruptHandler
  4602  0280  0020               	movlb	0	; force select bank0
  4603  0281  00C6               	movwf	TMR6_SetInterruptHandler@InterruptHandler
  4604  0282  3006               	movlw	high _TMR6_DefaultInterruptHandler
  4605  0283  00C7               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1
  4606  0284  21F6  3180         	fcall	_TMR6_SetInterruptHandler
  4607                           
  4608                           ;tmr6.c: 87: TMR6_StartTimer();
  4609  0286  29FF               	ljmp	l1493
  4610  0287                     __end_of_TMR6_Initialize:	
  4611  0287                     __ptext4:	
  4612 ;; *************** function _WDT_Initialize *****************
  4613 ;; Defined at:
  4614 ;;		line 110 in file "mcc_generated_files/mcc.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;		None
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;		None
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      void 
  4621 ;; Registers used:
  4622 ;;		wreg
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4632 ;;Total ram usage:        0 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    5
  4635 ;; This function calls:
  4636 ;;		Nothing
  4637 ;; This function is called by:
  4638 ;;		_SYSTEM_Initialize
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           
  4643                           ;psect for function _WDT_Initialize
  4644  0287                     _WDT_Initialize:	
  4645                           
  4646                           ;mcc.c: 113: WDTCON = 0x14;
  4647                           
  4648                           ;incstack = 0
  4649                           ; Regs used in _WDT_Initialize: [wreg]
  4650  0287  3014               	movlw	20
  4651  0288  0021               	movlb	1	; force select bank1
  4652  0289  0097               	movwf	23	;volatile
  4653  028A  0008               	return
  4654  028B                     __end_of_WDT_Initialize:	
  4655  028B                     __ptext8:	
  4656 ;; *************** function _TMR2_Initialize *****************
  4657 ;; Defined at:
  4658 ;;		line 61 in file "mcc_generated_files/tmr2.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;		None
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0, pclath, cstack
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;Total ram usage:        0 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    6
  4679 ;; This function calls:
  4680 ;;		_TMR2_StartTimer
  4681 ;; This function is called by:
  4682 ;;		_SYSTEM_Initialize
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           
  4687                           ;psect for function _TMR2_Initialize
  4688  028B                     _TMR2_Initialize:	
  4689                           
  4690                           ;tmr2.c: 66: T2CON = 0x03;
  4691                           
  4692                           ;incstack = 0
  4693                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4694  028B  3003               	movlw	3
  4695  028C  0020               	movlb	0	; force select bank0
  4696  028D  009C               	movwf	28	;volatile
  4697                           
  4698                           ;tmr2.c: 69: PR2 = 0xFF;
  4699  028E  30FF               	movlw	255
  4700  028F  0020               	movlb	0	; force select bank0
  4701  0290  009B               	movwf	27	;volatile
  4702                           
  4703                           ;tmr2.c: 72: TMR2 = 0x00;
  4704  0291  0020               	movlb	0	; force select bank0
  4705  0292  019A               	clrf	26	;volatile
  4706                           
  4707                           ;tmr2.c: 75: PIR1bits.TMR2IF = 0;
  4708  0293  0020               	movlb	0	; force select bank0
  4709  0294  1091               	bcf	17,1	;volatile
  4710                           
  4711                           ;tmr2.c: 78: TMR2_StartTimer();
  4712  0295  29F3               	ljmp	l1489
  4713  0296                     __end_of_TMR2_Initialize:	
  4714                           
  4715                           	psect	swtext1
  4716  05F2                     __pswtext1:	
  4717  05F2                     S2735:	
  4718  05F2  3180  28E6         	ljmp	l753
  4719  05F4  3180  2888         	ljmp	l2487
  4720  05F6  3180  289E         	ljmp	l2491
  4721  05F8  3180  28CF         	ljmp	l745
  4722                           
  4723                           	psect	intentry
  4724  0004                     __pintentry:	
  4725 ;; *************** function _INTERRUPT_InterruptManager *****************
  4726 ;; Defined at:
  4727 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;		None
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4744 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4745 ;;Total ram usage:        1 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:    4
  4748 ;; This function calls:
  4749 ;;		_ADC_ISR
  4750 ;;		_I2C1_ISR
  4751 ;;		_TMR6_ISR
  4752 ;; This function is called by:
  4753 ;;		Interrupt level 1
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757  0004                     _INTERRUPT_InterruptManager:	
  4758                           
  4759                           ;incstack = 0
  4760  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4761                           
  4762                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4763  0005  3180               	pagesel	$
  4764  0006  0020               	movlb	0	; force select bank0
  4765  0007  087F               	movf	127,w
  4766  0008  0020               	movlb	0	; force select bank0
  4767  0009  00C5               	movwf	??_INTERRUPT_InterruptManager
  4768                           
  4769                           ;interrupt_manager.c: 57: if(INTCONbits.PEIE == 1 && PIE1bits.SSP1IE == 1 && PIR1bits.SS
      +                          P1IF == 1)
  4770  000A  1F0B               	btfss	11,6	;volatile
  4771  000B  2816               	goto	i1l192
  4772  000C  0021               	movlb	1	; force select bank1
  4773  000D  1D91               	btfss	17,3	;volatile
  4774  000E  2816               	goto	i1l192
  4775  000F  0020               	movlb	0	; force select bank0
  4776  0010  1D91               	btfss	17,3	;volatile
  4777  0011  2816               	goto	i1l192
  4778                           
  4779                           ;interrupt_manager.c: 58: {
  4780                           ;interrupt_manager.c: 59: I2C1_ISR();
  4781  0012  3182  2296  3180   	fcall	_I2C1_ISR
  4782                           
  4783                           ;interrupt_manager.c: 60: }
  4784  0015  282C               	goto	i1l198
  4785  0016                     i1l192:	
  4786                           
  4787                           ;interrupt_manager.c: 61: else if(INTCONbits.PEIE == 1 && PIE3bits.TMR6IE == 1 && PIR3bi
      +                          ts.TMR6IF == 1)
  4788  0016  1F0B               	btfss	11,6	;volatile
  4789  0017  2822               	goto	i1l194
  4790  0018  0021               	movlb	1	; force select bank1
  4791  0019  1D93               	btfss	19,3	;volatile
  4792  001A  2822               	goto	i1l194
  4793  001B  0020               	movlb	0	; force select bank0
  4794  001C  1D93               	btfss	19,3	;volatile
  4795  001D  2822               	goto	i1l194
  4796                           
  4797                           ;interrupt_manager.c: 62: {
  4798                           ;interrupt_manager.c: 63: TMR6_ISR();
  4799  001E  3186  268D  3180   	fcall	_TMR6_ISR
  4800                           
  4801                           ;interrupt_manager.c: 64: }
  4802  0021  282C               	goto	i1l198
  4803  0022                     i1l194:	
  4804                           
  4805                           ;interrupt_manager.c: 65: else if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits
      +                          .ADIF == 1)
  4806  0022  1F0B               	btfss	11,6	;volatile
  4807  0023  282C               	goto	i1l198
  4808  0024  0021               	movlb	1	; force select bank1
  4809  0025  1F11               	btfss	17,6	;volatile
  4810  0026  282C               	goto	i1l198
  4811  0027  0020               	movlb	0	; force select bank0
  4812  0028  1F11               	btfss	17,6	;volatile
  4813  0029  282C               	goto	i1l198
  4814                           
  4815                           ;interrupt_manager.c: 66: {
  4816                           ;interrupt_manager.c: 67: ADC_ISR();
  4817  002A  3185  2540         	fcall	_ADC_ISR
  4818  002C                     i1l198:	
  4819                           ;interrupt_manager.c: 69: else
  4820                           ;interrupt_manager.c: 70: {
  4821                           
  4822                           ;interrupt_manager.c: 68: }
  4823                           
  4824  002C  0020               	movlb	0	; force select bank0
  4825  002D  0845               	movf	??_INTERRUPT_InterruptManager,w
  4826  002E  0020               	movlb	0	; force select bank0
  4827  002F  00FF               	movwf	127
  4828  0030  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4829  0031  0009               	retfie
  4830  0032                     __end_of_INTERRUPT_InterruptManager:	
  4831                           
  4832                           	psect	text29
  4833  068D                     __ptext29:	
  4834 ;; *************** function _TMR6_ISR *****************
  4835 ;; Defined at:
  4836 ;;		line 122 in file "mcc_generated_files/tmr6.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;		None
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;		None
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4854 ;;Total ram usage:        0 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; Hardware stack levels required when called:    3
  4857 ;; This function calls:
  4858 ;;		_TMR6_CallBack
  4859 ;; This function is called by:
  4860 ;;		_INTERRUPT_InterruptManager
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           
  4865                           ;psect for function _TMR6_ISR
  4866  068D                     _TMR6_ISR:	
  4867                           
  4868                           ;tmr6.c: 128: PIR3bits.TMR6IF = 0;
  4869                           
  4870                           ;incstack = 0
  4871                           ; Regs used in _TMR6_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4872  068D  0020               	movlb	0	; force select bank0
  4873  068E  1193               	bcf	19,3	;volatile
  4874                           
  4875                           ;tmr6.c: 132: TMR6_CallBack();
  4876  068F  2E90               	ljmp	i1l2329
  4877  0690                     __end_of_TMR6_ISR:	
  4878  0690                     __ptext30:	
  4879 ;; *************** function _TMR6_CallBack *****************
  4880 ;; Defined at:
  4881 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;		None
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;		None
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  1    wreg      void 
  4888 ;; Registers used:
  4889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;Total ram usage:        0 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:    2
  4902 ;; This function calls:
  4903 ;;		Absolute function
  4904 ;;		_TMR6_DefaultInterruptHandler
  4905 ;;		_Timer6Overflow
  4906 ;; This function is called by:
  4907 ;;		_TMR6_ISR
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           
  4912                           ;psect for function _TMR6_CallBack
  4913  0690                     _TMR6_CallBack:	
  4914  0690                     i1l2329:	
  4915                           ;incstack = 0
  4916                           ; Regs used in _TMR6_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4917                           
  4918                           
  4919                           ;tmr6.c: 142: if(TMR6_InterruptHandler)
  4920  0690  0020               	movlb	0	; force select bank0
  4921  0691  084E               	movf	_TMR6_InterruptHandler,w
  4922  0692  044F               	iorwf	_TMR6_InterruptHandler+1,w
  4923  0693  1903               	btfsc	3,2
  4924  0694  0008               	return
  4925                           
  4926                           ;tmr6.c: 143: {
  4927                           ;tmr6.c: 144: TMR6_InterruptHandler();
  4928  0695  0020               	movlb	0	; force select bank0
  4929  0696  084F               	movf	_TMR6_InterruptHandler+1,w
  4930  0697  008A               	movwf	10
  4931  0698  084E               	movf	_TMR6_InterruptHandler,w
  4932  0699  000A               	callw
  4933  069A  3186               	pagesel	$
  4934  069B  0008               	return
  4935  069C                     __end_of_TMR6_CallBack:	
  4936                           
  4937                           	psect	text31
  4938  06AA                     __ptext31:	
  4939 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  4940 ;; Defined at:
  4941 ;;		line 152 in file "mcc_generated_files/tmr6.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;		None
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;		None
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  1    wreg      void 
  4948 ;; Registers used:
  4949 ;;		None
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4959 ;;Total ram usage:        0 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		_TMR6_Initialize
  4965 ;;		_TMR6_CallBack
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           
  4970                           ;psect for function _TMR6_DefaultInterruptHandler
  4971  06AA                     _TMR6_DefaultInterruptHandler:	
  4972                           
  4973                           ;incstack = 0
  4974                           ; Regs used in _TMR6_DefaultInterruptHandler: []
  4975  06AA  0008               	return
  4976  06AB                     __end_of_TMR6_DefaultInterruptHandler:	
  4977                           
  4978                           	psect	text32
  4979  0418                     __ptext32:	
  4980 ;; *************** function _Timer6Overflow *****************
  4981 ;; Defined at:
  4982 ;;		line 55 in file "main.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;		None
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;		None
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  1    wreg      void 
  4989 ;; Registers used:
  4990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4998 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;Total ram usage:        3 bytes
  5001 ;; Hardware stack levels used:    1
  5002 ;; Hardware stack levels required when called:    1
  5003 ;; This function calls:
  5004 ;;		_EPWM1_LoadDutyValue
  5005 ;;		_EPWM2_LoadDutyValue
  5006 ;;		_PWM3_LoadDutyValue
  5007 ;;		_PWM4_LoadDutyValue
  5008 ;;		i1_ADC_StartConversion
  5009 ;;		i1_I2C1_ReadBuffer
  5010 ;;		i1_TMR2_StartTimer
  5011 ;;		i1_TMR2_StopTimer
  5012 ;; This function is called by:
  5013 ;;		_main
  5014 ;;		_TMR6_CallBack
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           
  5019                           ;psect for function _Timer6Overflow
  5020  0418                     _Timer6Overflow:	
  5021                           
  5022                           ;main.c: 56: static uint8_t count = 0;
  5023                           ;main.c: 58: switch (count) {
  5024                           
  5025                           ;incstack = 0
  5026                           ; Regs used in _Timer6Overflow: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5027  0418  2C92               	goto	i1l2303
  5028  0419                     i1l2281:	
  5029                           ;main.c: 59: case 0:
  5030                           
  5031                           
  5032                           ;main.c: 60: TMR2_StopTimer();
  5033  0419  253A  3184         	fcall	i1_TMR2_StopTimer
  5034                           
  5035                           ;main.c: 61: break;
  5036  041B  2C9D               	goto	i1l2305
  5037  041C                     i1l2283:	
  5038                           ;main.c: 62: case 1:
  5039                           
  5040                           
  5041                           ;main.c: 63: if (!pwm_lock) EPWM1_LoadDutyValue((uint16_t)I2C1_ReadBuffer(I2CPWM1_L) + (
      +                          (uint16_t)I2C1_ReadBuffer(I2CPWM1_H) * 0x100) + (uint16_t)00);
  5042  041C  0020               	movlb	0	; force select bank0
  5043  041D  0856               	movf	_pwm_lock,w
  5044  041E  1D03               	btfss	3,2
  5045  041F  2C9D               	goto	i1l2305
  5046  0420  3002               	movlw	2
  5047  0421  24AC  3184         	fcall	i1_I2C1_ReadBuffer
  5048  0423  0020               	movlb	0	; force select bank0
  5049  0424  00C2               	movwf	??_Timer6Overflow
  5050  0425  01C3               	clrf	??_Timer6Overflow+1
  5051  0426  00C3               	movwf	??_Timer6Overflow+1
  5052  0427  3001               	movlw	1
  5053  0428  01C2               	clrf	??_Timer6Overflow
  5054  0429  24AC  3184         	fcall	i1_I2C1_ReadBuffer
  5055  042B  0020               	movlb	0	; force select bank0
  5056  042C  0742               	addwf	??_Timer6Overflow,w
  5057  042D  0020               	movlb	0	; force select bank0
  5058  042E  00BE               	movwf	EPWM1_LoadDutyValue@dutyValue
  5059  042F  0020               	movlb	0	; force select bank0
  5060  0430  0843               	movf	??_Timer6Overflow+1,w
  5061  0431  1803               	skipnc
  5062  0432  0A43               	incf	??_Timer6Overflow+1,w
  5063  0433  0020               	movlb	0	; force select bank0
  5064  0434  00BF               	movwf	EPWM1_LoadDutyValue@dutyValue+1
  5065  0435  24B7  3184         	fcall	_EPWM1_LoadDutyValue
  5066                           
  5067                           ;main.c: 64: break;
  5068  0437  2C9D               	goto	i1l2305
  5069  0438                     i1l2287:	
  5070                           ;main.c: 65: case 2:
  5071                           
  5072                           
  5073                           ;main.c: 66: if (!pwm_lock) EPWM2_LoadDutyValue((uint16_t)I2C1_ReadBuffer(I2CPWM2_L) + (
      +                          (uint16_t)I2C1_ReadBuffer(I2CPWM2_H) * 0x100) + (uint16_t)00);
  5074  0438  0020               	movlb	0	; force select bank0
  5075  0439  0856               	movf	_pwm_lock,w
  5076  043A  1D03               	btfss	3,2
  5077  043B  2C9D               	goto	i1l2305
  5078  043C  3004               	movlw	4
  5079  043D  24AC  3184         	fcall	i1_I2C1_ReadBuffer
  5080  043F  0020               	movlb	0	; force select bank0
  5081  0440  00C2               	movwf	??_Timer6Overflow
  5082  0441  01C3               	clrf	??_Timer6Overflow+1
  5083  0442  00C3               	movwf	??_Timer6Overflow+1
  5084  0443  3003               	movlw	3
  5085  0444  01C2               	clrf	??_Timer6Overflow
  5086  0445  24AC  3184         	fcall	i1_I2C1_ReadBuffer
  5087  0447  0020               	movlb	0	; force select bank0
  5088  0448  0742               	addwf	??_Timer6Overflow,w
  5089  0449  0020               	movlb	0	; force select bank0
  5090  044A  00BE               	movwf	EPWM2_LoadDutyValue@dutyValue
  5091  044B  0020               	movlb	0	; force select bank0
  5092  044C  0843               	movf	??_Timer6Overflow+1,w
  5093  044D  1803               	skipnc
  5094  044E  0A43               	incf	??_Timer6Overflow+1,w
  5095  044F  0020               	movlb	0	; force select bank0
  5096  0450  00BF               	movwf	EPWM2_LoadDutyValue@dutyValue+1
  5097  0451  24D7  3184         	fcall	_EPWM2_LoadDutyValue
  5098                           
  5099                           ;main.c: 67: break;
  5100  0453  2C9D               	goto	i1l2305
  5101  0454                     i1l2291:	
  5102                           ;main.c: 68: case 3:
  5103                           
  5104                           
  5105                           ;main.c: 69: if (!pwm_lock) PWM3_LoadDutyValue((uint16_t)I2C1_ReadBuffer(I2CPWM3_L) + ((
      +                          uint16_t)I2C1_ReadBuffer(I2CPWM3_H) * 0x100) + (uint16_t)00);
  5106  0454  0020               	movlb	0	; force select bank0
  5107  0455  0856               	movf	_pwm_lock,w
  5108  0456  1D03               	btfss	3,2
  5109  0457  2C9D               	goto	i1l2305
  5110  0458  3006               	movlw	6
  5111  0459  24AC  3184         	fcall	i1_I2C1_ReadBuffer
  5112  045B  0020               	movlb	0	; force select bank0
  5113  045C  00C2               	movwf	??_Timer6Overflow
  5114  045D  01C3               	clrf	??_Timer6Overflow+1
  5115  045E  00C3               	movwf	??_Timer6Overflow+1
  5116  045F  3005               	movlw	5
  5117  0460  01C2               	clrf	??_Timer6Overflow
  5118  0461  24AC  3184         	fcall	i1_I2C1_ReadBuffer
  5119  0463  0020               	movlb	0	; force select bank0
  5120  0464  0742               	addwf	??_Timer6Overflow,w
  5121  0465  0020               	movlb	0	; force select bank0
  5122  0466  00BE               	movwf	PWM3_LoadDutyValue@dutyValue
  5123  0467  0020               	movlb	0	; force select bank0
  5124  0468  0843               	movf	??_Timer6Overflow+1,w
  5125  0469  1803               	skipnc
  5126  046A  0A43               	incf	??_Timer6Overflow+1,w
  5127  046B  0020               	movlb	0	; force select bank0
  5128  046C  00BF               	movwf	PWM3_LoadDutyValue@dutyValue+1
  5129  046D  24F7  3184         	fcall	_PWM3_LoadDutyValue
  5130                           
  5131                           ;main.c: 70: break;
  5132  046F  2C9D               	goto	i1l2305
  5133  0470                     i1l2295:	
  5134                           ;main.c: 71: case 4:
  5135                           
  5136                           
  5137                           ;main.c: 72: if (!pwm_lock) PWM4_LoadDutyValue((uint16_t)I2C1_ReadBuffer(I2CPWM4_L) + ((
      +                          uint16_t)I2C1_ReadBuffer(I2CPWM4_H) * 0x100) + (uint16_t)000);
  5138  0470  0020               	movlb	0	; force select bank0
  5139  0471  0856               	movf	_pwm_lock,w
  5140  0472  1D03               	btfss	3,2
  5141  0473  2C9D               	goto	i1l2305
  5142  0474  3008               	movlw	8
  5143  0475  24AC  3184         	fcall	i1_I2C1_ReadBuffer
  5144  0477  0020               	movlb	0	; force select bank0
  5145  0478  00C2               	movwf	??_Timer6Overflow
  5146  0479  01C3               	clrf	??_Timer6Overflow+1
  5147  047A  00C3               	movwf	??_Timer6Overflow+1
  5148  047B  3007               	movlw	7
  5149  047C  01C2               	clrf	??_Timer6Overflow
  5150  047D  24AC  3184         	fcall	i1_I2C1_ReadBuffer
  5151  047F  0020               	movlb	0	; force select bank0
  5152  0480  0742               	addwf	??_Timer6Overflow,w
  5153  0481  0020               	movlb	0	; force select bank0
  5154  0482  00BE               	movwf	PWM4_LoadDutyValue@dutyValue
  5155  0483  0020               	movlb	0	; force select bank0
  5156  0484  0843               	movf	??_Timer6Overflow+1,w
  5157  0485  1803               	skipnc
  5158  0486  0A43               	incf	??_Timer6Overflow+1,w
  5159  0487  0020               	movlb	0	; force select bank0
  5160  0488  00BF               	movwf	PWM4_LoadDutyValue@dutyValue+1
  5161  0489  2517  3184         	fcall	_PWM4_LoadDutyValue
  5162                           
  5163                           ;main.c: 73: break;
  5164  048B  2C9D               	goto	i1l2305
  5165  048C                     i1l2299:	
  5166                           ;main.c: 74: case 9:
  5167                           
  5168                           
  5169                           ;main.c: 75: TMR2 = 0xFF;
  5170  048C  30FF               	movlw	255
  5171  048D  0020               	movlb	0	; force select bank0
  5172  048E  009A               	movwf	26	;volatile
  5173                           
  5174                           ;main.c: 76: TMR2_StartTimer();
  5175  048F  2537  3184         	fcall	i1_TMR2_StartTimer
  5176                           
  5177                           ;main.c: 77: }
  5178  0491  2C9D               	goto	i1l2305
  5179  0492                     i1l2303:	
  5180  0492  0020               	movlb	0	; force select bank0
  5181  0493  0850               	movf	Timer6Overflow@count,w
  5182                           
  5183                           ; Switch size 1, requested type "speed"
  5184                           ; Number of cases is 6, Range of values is 0 to 9
  5185                           ; switch strategies available:
  5186                           ; Name         Instructions Cycles
  5187                           ; direct_byte           26     6 (fixed)
  5188                           ; simple_byte           19    10 (average)
  5189                           ; jumptable            260     6 (fixed)
  5190                           ;	Chosen strategy is direct_byte
  5191  0494  0084               	movwf	4
  5192  0495  300A               	movlw	10
  5193  0496  0204               	subwf	4,w
  5194  0497  1803               	skipnc
  5195  0498  2C9D               	goto	i1l2305
  5196  0499  3186               	movlp	high i1S2737
  5197  049A  3504               	lslf	4,w
  5198  049B  3E51               	addlw	low i1S2737
  5199  049C  0082               	movwf	2
  5200  049D                     i1l2305:	
  5201                           
  5202                           ;main.c: 78: if (count < 9)
  5203  049D  3009               	movlw	9
  5204  049E  0020               	movlb	0	; force select bank0
  5205  049F  0250               	subwf	Timer6Overflow@count,w
  5206  04A0  1803               	skipnc
  5207  04A1  2CA8               	goto	i1l2309
  5208                           
  5209                           ;main.c: 79: count += 1;
  5210  04A2  3001               	movlw	1
  5211  04A3  0020               	movlb	0	; force select bank0
  5212  04A4  00C2               	movwf	??_Timer6Overflow
  5213  04A5  0020               	movlb	0	; force select bank0
  5214  04A6  07D0               	addwf	Timer6Overflow@count,f
  5215  04A7  2CAA               	goto	i1l2311
  5216  04A8                     i1l2309:	
  5217                           
  5218                           ;main.c: 80: else
  5219                           ;main.c: 81: count = 0;
  5220  04A8  0020               	movlb	0	; force select bank0
  5221  04A9  01D0               	clrf	Timer6Overflow@count
  5222  04AA                     i1l2311:	
  5223                           
  5224                           ;main.c: 82: ADC_StartConversion();
  5225  04AA  253D               	fcall	i1_ADC_StartConversion
  5226  04AB  0008               	return
  5227  04AC                     __end_of_Timer6Overflow:	
  5228  04AC                     __ptext35:	
  5229 ;; *************** function i1_I2C1_ReadBuffer *****************
  5230 ;; Defined at:
  5231 ;;		line 125 in file "mcc_generated_files/i2c1.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  address         1    wreg     enum E2979
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  address         1    0[BANK0 ] enum E2979
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  1    wreg      unsigned char 
  5238 ;; Registers used:
  5239 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5246 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5248 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5249 ;;Total ram usage:        1 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; This function calls:
  5252 ;;		Nothing
  5253 ;; This function is called by:
  5254 ;;		_Timer6Overflow
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           
  5259                           ;psect for function i1_I2C1_ReadBuffer
  5260  04AC                     i1_I2C1_ReadBuffer:	
  5261                           
  5262                           ;incstack = 0
  5263                           ; Regs used in i1_I2C1_ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  5264                           ;i1I2C1_ReadBuffer@address stored from wreg
  5265  04AC  0020               	movlb	0	; force select bank0
  5266  04AD  00BD               	movwf	i1I2C1_ReadBuffer@address
  5267                           
  5268                           ;i2c1.c: 126: return EEPROM_Buffer[address];
  5269  04AE  0020               	movlb	0	; force select bank0
  5270  04AF  083D               	movf	i1I2C1_ReadBuffer@address,w
  5271  04B0  3E20               	addlw	low _EEPROM_Buffer
  5272  04B1  0086               	movwf	6
  5273  04B2  3000               	movlw	high _EEPROM_Buffer
  5274  04B3  0187               	clrf	7
  5275  04B4  3D87               	addwfc	7,f
  5276  04B5  0801               	movf	1,w
  5277  04B6  0008               	return
  5278  04B7                     __end_ofi1_I2C1_ReadBuffer:	
  5279  04B7                     __ptext40:	
  5280 ;; *************** function _EPWM1_LoadDutyValue *****************
  5281 ;; Defined at:
  5282 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  dutyValue       2    1[BANK0 ] unsigned int 
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      void 
  5289 ;; Registers used:
  5290 ;;		wreg, status,2, status,0
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5296 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5298 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5299 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5300 ;;Total ram usage:        4 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_Timer6Overflow
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           
  5310                           ;psect for function _EPWM1_LoadDutyValue
  5311  04B7                     _EPWM1_LoadDutyValue:	
  5312                           
  5313                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  5314                           
  5315                           ;incstack = 0
  5316                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  5317  04B7  0020               	movlb	0	; force select bank0
  5318  04B8  083F               	movf	EPWM1_LoadDutyValue@dutyValue+1,w
  5319  04B9  0020               	movlb	0	; force select bank0
  5320  04BA  00C1               	movwf	??_EPWM1_LoadDutyValue+1
  5321  04BB  0020               	movlb	0	; force select bank0
  5322  04BC  083E               	movf	EPWM1_LoadDutyValue@dutyValue,w
  5323  04BD  0020               	movlb	0	; force select bank0
  5324  04BE  00C0               	movwf	??_EPWM1_LoadDutyValue
  5325  04BF  36C1               	lsrf	??_EPWM1_LoadDutyValue+1,f
  5326  04C0  0CC0               	rrf	??_EPWM1_LoadDutyValue,f
  5327  04C1  36C1               	lsrf	??_EPWM1_LoadDutyValue+1,f
  5328  04C2  0CC0               	rrf	??_EPWM1_LoadDutyValue,f
  5329  04C3  0840               	movf	??_EPWM1_LoadDutyValue,w
  5330  04C4  0025               	movlb	5	; force select bank5
  5331  04C5  0091               	movwf	17	;volatile
  5332                           
  5333                           ;epwm1.c: 96: CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4));
  5334  04C6  0020               	movlb	0	; force select bank0
  5335  04C7  083E               	movf	EPWM1_LoadDutyValue@dutyValue,w
  5336  04C8  3903               	andlw	3
  5337  04C9  0020               	movlb	0	; force select bank0
  5338  04CA  00C0               	movwf	??_EPWM1_LoadDutyValue
  5339  04CB  3004               	movlw	4
  5340  04CC                     u53_25:	
  5341  04CC  35C0               	lslf	??_EPWM1_LoadDutyValue,f
  5342  04CD  0B89               	decfsz	9,f
  5343  04CE  2CCC               	goto	u53_25
  5344  04CF  0025               	movlb	5	; force select bank5
  5345  04D0  0813               	movf	19,w	;volatile
  5346  04D1  39CF               	andlw	207
  5347  04D2  0020               	movlb	0	; force select bank0
  5348  04D3  0440               	iorwf	??_EPWM1_LoadDutyValue,w
  5349  04D4  0025               	movlb	5	; force select bank5
  5350  04D5  0093               	movwf	19	;volatile
  5351  04D6  0008               	return
  5352  04D7                     __end_of_EPWM1_LoadDutyValue:	
  5353  04D7                     __ptext39:	
  5354 ;; *************** function _EPWM2_LoadDutyValue *****************
  5355 ;; Defined at:
  5356 ;;		line 91 in file "mcc_generated_files/epwm2.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  dutyValue       2    1[BANK0 ] unsigned int 
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;		None
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  1    wreg      void 
  5363 ;; Registers used:
  5364 ;;		wreg, status,2, status,0
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5370 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5372 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5373 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5374 ;;Total ram usage:        4 bytes
  5375 ;; Hardware stack levels used:    1
  5376 ;; This function calls:
  5377 ;;		Nothing
  5378 ;; This function is called by:
  5379 ;;		_Timer6Overflow
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           
  5384                           ;psect for function _EPWM2_LoadDutyValue
  5385  04D7                     _EPWM2_LoadDutyValue:	
  5386                           
  5387                           ;epwm2.c: 94: CCPR2L = ((dutyValue & 0x03FC)>>2);
  5388                           
  5389                           ;incstack = 0
  5390                           ; Regs used in _EPWM2_LoadDutyValue: [wreg+status,2+status,0]
  5391  04D7  0020               	movlb	0	; force select bank0
  5392  04D8  083F               	movf	EPWM2_LoadDutyValue@dutyValue+1,w
  5393  04D9  0020               	movlb	0	; force select bank0
  5394  04DA  00C1               	movwf	??_EPWM2_LoadDutyValue+1
  5395  04DB  0020               	movlb	0	; force select bank0
  5396  04DC  083E               	movf	EPWM2_LoadDutyValue@dutyValue,w
  5397  04DD  0020               	movlb	0	; force select bank0
  5398  04DE  00C0               	movwf	??_EPWM2_LoadDutyValue
  5399  04DF  36C1               	lsrf	??_EPWM2_LoadDutyValue+1,f
  5400  04E0  0CC0               	rrf	??_EPWM2_LoadDutyValue,f
  5401  04E1  36C1               	lsrf	??_EPWM2_LoadDutyValue+1,f
  5402  04E2  0CC0               	rrf	??_EPWM2_LoadDutyValue,f
  5403  04E3  0840               	movf	??_EPWM2_LoadDutyValue,w
  5404  04E4  0025               	movlb	5	; force select bank5
  5405  04E5  0098               	movwf	24	;volatile
  5406                           
  5407                           ;epwm2.c: 97: CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4));
  5408  04E6  0020               	movlb	0	; force select bank0
  5409  04E7  083E               	movf	EPWM2_LoadDutyValue@dutyValue,w
  5410  04E8  3903               	andlw	3
  5411  04E9  0020               	movlb	0	; force select bank0
  5412  04EA  00C0               	movwf	??_EPWM2_LoadDutyValue
  5413  04EB  3004               	movlw	4
  5414  04EC                     u54_25:	
  5415  04EC  35C0               	lslf	??_EPWM2_LoadDutyValue,f
  5416  04ED  0B89               	decfsz	9,f
  5417  04EE  2CEC               	goto	u54_25
  5418  04EF  0025               	movlb	5	; force select bank5
  5419  04F0  081A               	movf	26,w	;volatile
  5420  04F1  39CF               	andlw	207
  5421  04F2  0020               	movlb	0	; force select bank0
  5422  04F3  0440               	iorwf	??_EPWM2_LoadDutyValue,w
  5423  04F4  0025               	movlb	5	; force select bank5
  5424  04F5  009A               	movwf	26	;volatile
  5425  04F6  0008               	return
  5426  04F7                     __end_of_EPWM2_LoadDutyValue:	
  5427  04F7                     __ptext38:	
  5428 ;; *************** function _PWM3_LoadDutyValue *****************
  5429 ;; Defined at:
  5430 ;;		line 81 in file "mcc_generated_files/pwm3.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;  dutyValue       2    1[BANK0 ] unsigned int 
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;		None
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  1    wreg      void 
  5437 ;; Registers used:
  5438 ;;		wreg, status,2, status,0
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5444 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5446 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5447 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5448 ;;Total ram usage:        4 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; This function calls:
  5451 ;;		Nothing
  5452 ;; This function is called by:
  5453 ;;		_Timer6Overflow
  5454 ;; This function uses a non-reentrant model
  5455 ;;
  5456                           
  5457                           
  5458                           ;psect for function _PWM3_LoadDutyValue
  5459  04F7                     _PWM3_LoadDutyValue:	
  5460                           
  5461                           ;pwm3.c: 84: CCPR3L = ((dutyValue & 0x03FC)>>2);
  5462                           
  5463                           ;incstack = 0
  5464                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  5465  04F7  0020               	movlb	0	; force select bank0
  5466  04F8  083F               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  5467  04F9  0020               	movlb	0	; force select bank0
  5468  04FA  00C1               	movwf	??_PWM3_LoadDutyValue+1
  5469  04FB  0020               	movlb	0	; force select bank0
  5470  04FC  083E               	movf	PWM3_LoadDutyValue@dutyValue,w
  5471  04FD  0020               	movlb	0	; force select bank0
  5472  04FE  00C0               	movwf	??_PWM3_LoadDutyValue
  5473  04FF  36C1               	lsrf	??_PWM3_LoadDutyValue+1,f
  5474  0500  0CC0               	rrf	??_PWM3_LoadDutyValue,f
  5475  0501  36C1               	lsrf	??_PWM3_LoadDutyValue+1,f
  5476  0502  0CC0               	rrf	??_PWM3_LoadDutyValue,f
  5477  0503  0840               	movf	??_PWM3_LoadDutyValue,w
  5478  0504  0026               	movlb	6	; force select bank6
  5479  0505  0091               	movwf	17	;volatile
  5480                           
  5481                           ;pwm3.c: 87: CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue & 0x0003)<<4));
  5482  0506  0020               	movlb	0	; force select bank0
  5483  0507  083E               	movf	PWM3_LoadDutyValue@dutyValue,w
  5484  0508  3903               	andlw	3
  5485  0509  0020               	movlb	0	; force select bank0
  5486  050A  00C0               	movwf	??_PWM3_LoadDutyValue
  5487  050B  3004               	movlw	4
  5488  050C                     u55_25:	
  5489  050C  35C0               	lslf	??_PWM3_LoadDutyValue,f
  5490  050D  0B89               	decfsz	9,f
  5491  050E  2D0C               	goto	u55_25
  5492  050F  0026               	movlb	6	; force select bank6
  5493  0510  0813               	movf	19,w	;volatile
  5494  0511  39CF               	andlw	207
  5495  0512  0020               	movlb	0	; force select bank0
  5496  0513  0440               	iorwf	??_PWM3_LoadDutyValue,w
  5497  0514  0026               	movlb	6	; force select bank6
  5498  0515  0093               	movwf	19	;volatile
  5499  0516  0008               	return
  5500  0517                     __end_of_PWM3_LoadDutyValue:	
  5501  0517                     __ptext37:	
  5502 ;; *************** function _PWM4_LoadDutyValue *****************
  5503 ;; Defined at:
  5504 ;;		line 81 in file "mcc_generated_files/pwm4.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;  dutyValue       2    1[BANK0 ] unsigned int 
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;		None
  5509 ;; Return value:  Size  Location     Type
  5510 ;;                  1    wreg      void 
  5511 ;; Registers used:
  5512 ;;		wreg, status,2, status,0
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5518 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5520 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5521 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5522 ;;Total ram usage:        4 bytes
  5523 ;; Hardware stack levels used:    1
  5524 ;; This function calls:
  5525 ;;		Nothing
  5526 ;; This function is called by:
  5527 ;;		_Timer6Overflow
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           
  5532                           ;psect for function _PWM4_LoadDutyValue
  5533  0517                     _PWM4_LoadDutyValue:	
  5534                           
  5535                           ;pwm4.c: 84: CCPR4L = ((dutyValue & 0x03FC)>>2);
  5536                           
  5537                           ;incstack = 0
  5538                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2+status,0]
  5539  0517  0020               	movlb	0	; force select bank0
  5540  0518  083F               	movf	PWM4_LoadDutyValue@dutyValue+1,w
  5541  0519  0020               	movlb	0	; force select bank0
  5542  051A  00C1               	movwf	??_PWM4_LoadDutyValue+1
  5543  051B  0020               	movlb	0	; force select bank0
  5544  051C  083E               	movf	PWM4_LoadDutyValue@dutyValue,w
  5545  051D  0020               	movlb	0	; force select bank0
  5546  051E  00C0               	movwf	??_PWM4_LoadDutyValue
  5547  051F  36C1               	lsrf	??_PWM4_LoadDutyValue+1,f
  5548  0520  0CC0               	rrf	??_PWM4_LoadDutyValue,f
  5549  0521  36C1               	lsrf	??_PWM4_LoadDutyValue+1,f
  5550  0522  0CC0               	rrf	??_PWM4_LoadDutyValue,f
  5551  0523  0840               	movf	??_PWM4_LoadDutyValue,w
  5552  0524  0026               	movlb	6	; force select bank6
  5553  0525  0098               	movwf	24	;volatile
  5554                           
  5555                           ;pwm4.c: 87: CCP4CON = ((uint8_t)(CCP4CON & 0xCF) | ((dutyValue & 0x0003)<<4));
  5556  0526  0020               	movlb	0	; force select bank0
  5557  0527  083E               	movf	PWM4_LoadDutyValue@dutyValue,w
  5558  0528  3903               	andlw	3
  5559  0529  0020               	movlb	0	; force select bank0
  5560  052A  00C0               	movwf	??_PWM4_LoadDutyValue
  5561  052B  3004               	movlw	4
  5562  052C                     u56_25:	
  5563  052C  35C0               	lslf	??_PWM4_LoadDutyValue,f
  5564  052D  0B89               	decfsz	9,f
  5565  052E  2D2C               	goto	u56_25
  5566  052F  0026               	movlb	6	; force select bank6
  5567  0530  081A               	movf	26,w	;volatile
  5568  0531  39CF               	andlw	207
  5569  0532  0020               	movlb	0	; force select bank0
  5570  0533  0440               	iorwf	??_PWM4_LoadDutyValue,w
  5571  0534  0026               	movlb	6	; force select bank6
  5572  0535  009A               	movwf	26	;volatile
  5573  0536  0008               	return
  5574  0537                     __end_of_PWM4_LoadDutyValue:	
  5575  0537                     __ptext34:	
  5576 ;; *************** function i1_TMR2_StartTimer *****************
  5577 ;; Defined at:
  5578 ;;		line 81 in file "mcc_generated_files/tmr2.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1    wreg      void 
  5585 ;; Registers used:
  5586 ;;		None
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;Total ram usage:        0 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; This function calls:
  5599 ;;		Nothing
  5600 ;; This function is called by:
  5601 ;;		_Timer6Overflow
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           
  5606                           ;psect for function i1_TMR2_StartTimer
  5607  0537                     i1_TMR2_StartTimer:	
  5608                           
  5609                           ;tmr2.c: 84: T2CONbits.TMR2ON = 1;
  5610                           
  5611                           ;incstack = 0
  5612                           ; Regs used in i1_TMR2_StartTimer: []
  5613  0537  0020               	movlb	0	; force select bank0
  5614  0538  151C               	bsf	28,2	;volatile
  5615  0539  0008               	return
  5616  053A                     __end_ofi1_TMR2_StartTimer:	
  5617  053A                     __ptext33:	
  5618 ;; *************** function i1_TMR2_StopTimer *****************
  5619 ;; Defined at:
  5620 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;		None
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      void 
  5627 ;; Registers used:
  5628 ;;		None
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5638 ;;Total ram usage:        0 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_Timer6Overflow
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           
  5648                           ;psect for function i1_TMR2_StopTimer
  5649  053A                     i1_TMR2_StopTimer:	
  5650                           
  5651                           ;tmr2.c: 90: T2CONbits.TMR2ON = 0;
  5652                           
  5653                           ;incstack = 0
  5654                           ; Regs used in i1_TMR2_StopTimer: []
  5655  053A  0020               	movlb	0	; force select bank0
  5656  053B  111C               	bcf	28,2	;volatile
  5657  053C  0008               	return
  5658  053D                     __end_ofi1_TMR2_StopTimer:	
  5659  053D                     __ptext36:	
  5660 ;; *************** function i1_ADC_StartConversion *****************
  5661 ;; Defined at:
  5662 ;;		line 96 in file "mcc_generated_files/adc.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;		None
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;		None
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		None
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;Total ram usage:        0 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_Timer6Overflow
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           
  5690                           ;psect for function i1_ADC_StartConversion
  5691  053D                     i1_ADC_StartConversion:	
  5692                           
  5693                           ;adc.c: 99: ADCON0bits.GO_nDONE = 1;
  5694                           
  5695                           ;incstack = 0
  5696                           ; Regs used in i1_ADC_StartConversion: []
  5697  053D  0021               	movlb	1	; force select bank1
  5698  053E  149D               	bsf	29,1	;volatile
  5699  053F  0008               	return
  5700  0540                     __end_ofi1_ADC_StartConversion:	
  5701                           
  5702                           	psect	swtext2
  5703  0651                     __pswtext2:	
  5704  0651                     i1S2737:	
  5705  0651  3184  2C19         	ljmp	i1l2281
  5706  0653  3184  2C1C         	ljmp	i1l2283
  5707  0655  3184  2C38         	ljmp	i1l2287
  5708  0657  3184  2C54         	ljmp	i1l2291
  5709  0659  3184  2C70         	ljmp	i1l2295
  5710  065B  3184  2C9D         	ljmp	i1l2305
  5711  065D  3184  2C9D         	ljmp	i1l2305
  5712  065F  3184  2C9D         	ljmp	i1l2305
  5713  0661  3184  2C9D         	ljmp	i1l2305
  5714  0663  3184  2C8C         	ljmp	i1l2299
  5715                           
  5716                           	psect	text41
  5717  0296                     __ptext41:	
  5718 ;; *************** function _I2C1_ISR *****************
  5719 ;; Defined at:
  5720 ;;		line 134 in file "mcc_generated_files/i2c1.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  i2c_data        1    5[BANK0 ] unsigned char 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5735 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5736 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5737 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5738 ;;Total ram usage:        2 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:    2
  5741 ;; This function calls:
  5742 ;;		_I2C1_StatusCallback
  5743 ;; This function is called by:
  5744 ;;		_INTERRUPT_InterruptManager
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           
  5749                           ;psect for function _I2C1_ISR
  5750  0296                     _I2C1_ISR:	
  5751                           
  5752                           ;i2c1.c: 140: uint8_t i2c_data = 0x55;
  5753                           
  5754                           ;incstack = 0
  5755                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5756  0296  3055               	movlw	85
  5757  0297  0020               	movlb	0	; force select bank0
  5758  0298  00C1               	movwf	??_I2C1_ISR
  5759  0299  0020               	movlb	0	; force select bank0
  5760  029A  00C2               	movwf	I2C1_ISR@i2c_data
  5761                           
  5762                           ;i2c1.c: 146: PIR1bits.SSP1IF = 0;
  5763  029B  0020               	movlb	0	; force select bank0
  5764  029C  1191               	bcf	17,3	;volatile
  5765                           
  5766                           ;i2c1.c: 147: i2c_data = SSP1BUF;
  5767  029D  0024               	movlb	4	; force select bank4
  5768  029E  0811               	movf	17,w	;volatile
  5769  029F  0020               	movlb	0	; force select bank0
  5770  02A0  00C1               	movwf	??_I2C1_ISR
  5771  02A1  0020               	movlb	0	; force select bank0
  5772  02A2  00C2               	movwf	I2C1_ISR@i2c_data
  5773                           
  5774                           ;i2c1.c: 148: if(1 == SSP1STATbits.R_nW)
  5775  02A3  0024               	movlb	4	; force select bank4
  5776  02A4  1D14               	btfss	20,2	;volatile
  5777  02A5  2AB0               	goto	i1l412
  5778                           
  5779                           ;i2c1.c: 149: {
  5780                           ;i2c1.c: 150: if((1 == SSP1STATbits.D_nA) && (1 == SSP1CON2bits.ACKSTAT))
  5781  02A6  0024               	movlb	4	; force select bank4
  5782  02A7  1E94               	btfss	20,5	;volatile
  5783  02A8  2AAE               	goto	i1l1785
  5784  02A9  0024               	movlb	4	; force select bank4
  5785  02AA  1F16               	btfss	22,6	;volatile
  5786  02AB  2AAE               	goto	i1l1785
  5787                           
  5788                           ;i2c1.c: 151: {
  5789                           ;i2c1.c: 153: I2C1_StatusCallback(I2C1_SLAVE_READ_COMPLETED);
  5790  02AC  3003               	movlw	3
  5791  02AD  2ABC               	goto	L4
  5792  02AE                     i1l1785:	
  5793                           ;i2c1.c: 154: }
  5794                           
  5795                           
  5796                           ;i2c1.c: 155: else
  5797                           ;i2c1.c: 156: {
  5798                           ;i2c1.c: 158: I2C1_StatusCallback(I2C1_SLAVE_READ_REQUEST);
  5799  02AE  3001               	movlw	1
  5800  02AF  2ABC               	goto	L4
  5801  02B0                     i1l412:	
  5802                           ;i2c1.c: 159: }
  5803                           ;i2c1.c: 160: }
  5804                           
  5805                           
  5806                           ;i2c1.c: 161: else if(0 == SSP1STATbits.D_nA)
  5807  02B0  0024               	movlb	4	; force select bank4
  5808  02B1  1A94               	btfsc	20,5	;volatile
  5809  02B2  2AB5               	goto	i1l1789
  5810                           
  5811                           ;i2c1.c: 162: {
  5812                           ;i2c1.c: 166: I2C1_StatusCallback(I2C1_SLAVE_WRITE_REQUEST);
  5813  02B3  3000               	movlw	0
  5814  02B4  2ABC               	goto	L4
  5815  02B5                     i1l1789:	
  5816                           ;i2c1.c: 167: }
  5817                           
  5818                           
  5819                           ;i2c1.c: 168: else
  5820                           ;i2c1.c: 169: {
  5821                           ;i2c1.c: 170: I2C1_slaveWriteData = i2c_data;
  5822  02B5  0020               	movlb	0	; force select bank0
  5823  02B6  0842               	movf	I2C1_ISR@i2c_data,w
  5824  02B7  0020               	movlb	0	; force select bank0
  5825  02B8  00C1               	movwf	??_I2C1_ISR
  5826  02B9  0020               	movlb	0	; force select bank0
  5827  02BA  00BB               	movwf	_I2C1_slaveWriteData	;volatile
  5828                           
  5829                           ;i2c1.c: 173: I2C1_StatusCallback(I2C1_SLAVE_WRITE_COMPLETED);
  5830  02BB  3002               	movlw	2
  5831  02BC                     L4:	
  5832  02BC  22C0               	fcall	_I2C1_StatusCallback
  5833                           
  5834                           ;i2c1.c: 174: }
  5835                           ;i2c1.c: 176: SSP1CON1bits.CKP = 1;
  5836  02BD  0024               	movlb	4	; force select bank4
  5837  02BE  1615               	bsf	21,4	;volatile
  5838  02BF  0008               	return
  5839  02C0                     __end_of_I2C1_ISR:	
  5840  02C0                     __ptext42:	
  5841 ;; *************** function _I2C1_StatusCallback *****************
  5842 ;; Defined at:
  5843 ;;		line 204 in file "mcc_generated_files/i2c1.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;  i2c_bus_stat    1    wreg     enum E2973
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;  i2c_bus_stat    1    3[BANK0 ] enum E2973
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  1    wreg      void 
  5850 ;; Registers used:
  5851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5858 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5859 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5860 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5861 ;;Total ram usage:        3 bytes
  5862 ;; Hardware stack levels used:    1
  5863 ;; Hardware stack levels required when called:    1
  5864 ;; This function calls:
  5865 ;;		_ADC_DisableChannel
  5866 ;;		_ADC_EnableChannel
  5867 ;; This function is called by:
  5868 ;;		_I2C1_ISR
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           
  5873                           ;psect for function _I2C1_StatusCallback
  5874  02C0                     _I2C1_StatusCallback:	
  5875                           
  5876                           ;incstack = 0
  5877                           ; Regs used in _I2C1_StatusCallback: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5878                           ;I2C1_StatusCallback@i2c_bus_state stored from wreg
  5879  02C0  0020               	movlb	0	; force select bank0
  5880  02C1  00C0               	movwf	I2C1_StatusCallback@i2c_bus_state
  5881                           
  5882                           ;i2c1.c: 207: static uint8_t eepromAddress = 0;
  5883                           ;i2c1.c: 208: static uint8_t slaveWriteType = SLAVE_NORMAL_DATA;
  5884                           ;i2c1.c: 211: switch (i2c_bus_state)
  5885  02C2  2BD7               	goto	i1l1717
  5886  02C3                     i1l426:	
  5887                           ;i2c1.c: 212: {
  5888                           ;i2c1.c: 213: case I2C1_SLAVE_WRITE_REQUEST:
  5889                           
  5890                           
  5891                           ;i2c1.c: 215: slaveWriteType = SLAVE_DATA_ADDRESS;
  5892  02C3  0020               	movlb	0	; force select bank0
  5893  02C4  01D1               	clrf	I2C1_StatusCallback@slaveWriteType
  5894  02C5  0AD1               	incf	I2C1_StatusCallback@slaveWriteType,f
  5895                           
  5896                           ;i2c1.c: 216: break;
  5897  02C6  0008               	return
  5898  02C7                     i1l1623:	
  5899                           ;i2c1.c: 222: {
  5900                           ;i2c1.c: 223: case SLAVE_DATA_ADDRESS:
  5901                           
  5902                           ;i2c1.c: 221: switch(slaveWriteType)
  5903                           
  5904                           ;i2c1.c: 219: case I2C1_SLAVE_WRITE_COMPLETED:
  5905                           
  5906                           
  5907                           ;i2c1.c: 224: eepromAddress = I2C1_slaveWriteData;
  5908  02C7  0020               	movlb	0	; force select bank0
  5909  02C8  083B               	movf	_I2C1_slaveWriteData,w	;volatile
  5910  02C9  0020               	movlb	0	; force select bank0
  5911  02CA  00BE               	movwf	??_I2C1_StatusCallback
  5912  02CB  0020               	movlb	0	; force select bank0
  5913  02CC  00D2               	movwf	I2C1_StatusCallback@eepromAddress
  5914                           
  5915                           ;i2c1.c: 225: break;
  5916  02CD  2B96               	goto	i1l1699
  5917  02CE                     i1l435:	
  5918                           ;i2c1.c: 232: case I2CCGPIO1:
  5919                           
  5920                           ;i2c1.c: 231: switch (eepromAddress) {
  5921                           
  5922                           ;i2c1.c: 229: default:
  5923                           
  5924                           ;i2c1.c: 228: case SLAVE_NORMAL_DATA:
  5925                           
  5926                           
  5927                           ;i2c1.c: 233: if (I2C1_slaveWriteData & 0x01) {
  5928  02CE  0020               	movlb	0	; force select bank0
  5929  02CF  1C3B               	btfss	_I2C1_slaveWriteData,0	;volatile
  5930  02D0  2AD4               	goto	i1l436
  5931                           
  5932                           ;i2c1.c: 234: TRISAbits.TRISA4 = 1;
  5933  02D1  0021               	movlb	1	; force select bank1
  5934  02D2  160C               	bsf	12,4	;volatile
  5935                           
  5936                           ;i2c1.c: 235: } else {
  5937  02D3  2AD6               	goto	i1l437
  5938  02D4                     i1l436:	
  5939                           
  5940                           ;i2c1.c: 236: TRISAbits.TRISA4 = 0;
  5941  02D4  0021               	movlb	1	; force select bank1
  5942  02D5  120C               	bcf	12,4	;volatile
  5943  02D6                     i1l437:	
  5944                           
  5945                           ;i2c1.c: 237: }
  5946                           ;i2c1.c: 238: if (I2C1_slaveWriteData & 0x02) {
  5947  02D6  0020               	movlb	0	; force select bank0
  5948  02D7  1CBB               	btfss	_I2C1_slaveWriteData,1	;volatile
  5949  02D8  2ADF               	goto	i1l438
  5950                           
  5951                           ;i2c1.c: 239: ANSELAbits.ANSA4 = 1;
  5952  02D9  0023               	movlb	3	; force select bank3
  5953  02DA  160C               	bsf	12,4	;volatile
  5954                           
  5955                           ;i2c1.c: 240: ADC_EnableChannel(GPIO1);
  5956  02DB  3003               	movlw	3
  5957  02DC  23FC  3182         	fcall	_ADC_EnableChannel
  5958                           
  5959                           ;i2c1.c: 241: } else {
  5960  02DE  2AE4               	goto	i1l1633
  5961  02DF                     i1l438:	
  5962                           
  5963                           ;i2c1.c: 242: ANSELAbits.ANSA4 = 0;
  5964  02DF  0023               	movlb	3	; force select bank3
  5965  02E0  120C               	bcf	12,4	;volatile
  5966                           
  5967                           ;i2c1.c: 243: ADC_DisableChannel(GPIO1);
  5968  02E1  3003               	movlw	3
  5969  02E2  23E3  3182         	fcall	_ADC_DisableChannel
  5970  02E4                     i1l1633:	
  5971                           
  5972                           ;i2c1.c: 244: }
  5973                           ;i2c1.c: 245: if (I2C1_slaveWriteData & 0x04) {
  5974  02E4  0020               	movlb	0	; force select bank0
  5975  02E5  1D3B               	btfss	_I2C1_slaveWriteData,2	;volatile
  5976  02E6  2AE9               	goto	i1l440
  5977                           
  5978                           ;i2c1.c: 246: WPUAbits.WPUA4 = 1;
  5979  02E7  0024               	movlb	4	; force select bank4
  5980  02E8  2B39               	goto	L5
  5981  02E9                     i1l440:	
  5982                           ;i2c1.c: 247: } else {
  5983                           
  5984                           
  5985                           ;i2c1.c: 248: WPUAbits.WPUA4 = 0;
  5986  02E9  0024               	movlb	4	; force select bank4
  5987  02EA  2B3C               	goto	L6
  5988  02EB                     i1l443:	
  5989                           ;i2c1.c: 251: case I2CCGPIO2:
  5990                           
  5991                           ;i2c1.c: 249: }
  5992                           ;i2c1.c: 250: break;
  5993                           
  5994                           
  5995                           ;i2c1.c: 252: if (I2C1_slaveWriteData & 0x01) {
  5996  02EB  0020               	movlb	0	; force select bank0
  5997  02EC  1C3B               	btfss	_I2C1_slaveWriteData,0	;volatile
  5998  02ED  2AF1               	goto	i1l444
  5999                           
  6000                           ;i2c1.c: 253: TRISAbits.TRISA5 = 1;
  6001  02EE  0021               	movlb	1	; force select bank1
  6002  02EF  168C               	bsf	12,5	;volatile
  6003                           
  6004                           ;i2c1.c: 254: } else {
  6005  02F0  2AF3               	goto	i1l445
  6006  02F1                     i1l444:	
  6007                           
  6008                           ;i2c1.c: 255: TRISAbits.TRISA5 = 0;
  6009  02F1  0021               	movlb	1	; force select bank1
  6010  02F2  128C               	bcf	12,5	;volatile
  6011  02F3                     i1l445:	
  6012                           
  6013                           ;i2c1.c: 256: }
  6014                           ;i2c1.c: 257: if (I2C1_slaveWriteData & 0x04) {
  6015  02F3  0020               	movlb	0	; force select bank0
  6016  02F4  1D3B               	btfss	_I2C1_slaveWriteData,2	;volatile
  6017  02F5  2AF8               	goto	i1l446
  6018                           
  6019                           ;i2c1.c: 258: WPUAbits.WPUA5 = 1;
  6020  02F6  0024               	movlb	4	; force select bank4
  6021  02F7  2B43               	goto	L7
  6022  02F8                     i1l446:	
  6023                           ;i2c1.c: 259: } else {
  6024                           
  6025                           
  6026                           ;i2c1.c: 260: WPUAbits.WPUA5 = 0;
  6027  02F8  0024               	movlb	4	; force select bank4
  6028  02F9  2B46               	goto	L8
  6029  02FA                     i1l448:	
  6030                           ;i2c1.c: 263: case I2CCGPIO3:
  6031                           
  6032                           ;i2c1.c: 261: }
  6033                           ;i2c1.c: 262: break;
  6034                           
  6035                           
  6036                           ;i2c1.c: 264: if (I2C1_slaveWriteData & 0x01) {
  6037  02FA  0020               	movlb	0	; force select bank0
  6038  02FB  1C3B               	btfss	_I2C1_slaveWriteData,0	;volatile
  6039  02FC  2B00               	goto	i1l449
  6040                           
  6041                           ;i2c1.c: 265: TRISAbits.TRISA1 = 1;
  6042  02FD  0021               	movlb	1	; force select bank1
  6043  02FE  148C               	bsf	12,1	;volatile
  6044                           
  6045                           ;i2c1.c: 266: } else {
  6046  02FF  2B02               	goto	i1l450
  6047  0300                     i1l449:	
  6048                           
  6049                           ;i2c1.c: 267: TRISAbits.TRISA1 = 0;
  6050  0300  0021               	movlb	1	; force select bank1
  6051  0301  108C               	bcf	12,1	;volatile
  6052  0302                     i1l450:	
  6053                           
  6054                           ;i2c1.c: 268: }
  6055                           ;i2c1.c: 269: if (I2C1_slaveWriteData & 0x02) {
  6056  0302  0020               	movlb	0	; force select bank0
  6057  0303  1CBB               	btfss	_I2C1_slaveWriteData,1	;volatile
  6058  0304  2B0B               	goto	i1l451
  6059                           
  6060                           ;i2c1.c: 270: ANSELAbits.ANSA1 = 1;
  6061  0305  0023               	movlb	3	; force select bank3
  6062  0306  148C               	bsf	12,1	;volatile
  6063                           
  6064                           ;i2c1.c: 271: ADC_EnableChannel(GPIO3);
  6065  0307  3001               	movlw	1
  6066  0308  23FC  3182         	fcall	_ADC_EnableChannel
  6067                           
  6068                           ;i2c1.c: 272: } else {
  6069  030A  2B10               	goto	i1l1649
  6070  030B                     i1l451:	
  6071                           
  6072                           ;i2c1.c: 273: ANSELAbits.ANSA1 = 0;
  6073  030B  0023               	movlb	3	; force select bank3
  6074  030C  108C               	bcf	12,1	;volatile
  6075                           
  6076                           ;i2c1.c: 274: ADC_DisableChannel(GPIO3);
  6077  030D  3001               	movlw	1
  6078  030E  23E3  3182         	fcall	_ADC_DisableChannel
  6079  0310                     i1l1649:	
  6080                           
  6081                           ;i2c1.c: 275: }
  6082                           ;i2c1.c: 276: if (I2C1_slaveWriteData & 0x04) {
  6083  0310  0020               	movlb	0	; force select bank0
  6084  0311  1D3B               	btfss	_I2C1_slaveWriteData,2	;volatile
  6085  0312  2B15               	goto	i1l453
  6086                           
  6087                           ;i2c1.c: 277: WPUAbits.WPUA1 = 1;
  6088  0313  0024               	movlb	4	; force select bank4
  6089  0314  2B4D               	goto	L9
  6090  0315                     i1l453:	
  6091                           ;i2c1.c: 278: } else {
  6092                           
  6093                           
  6094                           ;i2c1.c: 279: WPUAbits.WPUA1 = 0;
  6095  0315  0024               	movlb	4	; force select bank4
  6096  0316  2B50               	goto	L10
  6097  0317                     i1l455:	
  6098                           ;i2c1.c: 282: case I2CCGPIO4:
  6099                           
  6100                           ;i2c1.c: 280: }
  6101                           ;i2c1.c: 281: break;
  6102                           
  6103                           
  6104                           ;i2c1.c: 283: if (I2C1_slaveWriteData & 0x01) {
  6105  0317  0020               	movlb	0	; force select bank0
  6106  0318  1C3B               	btfss	_I2C1_slaveWriteData,0	;volatile
  6107  0319  2B1D               	goto	i1l456
  6108                           
  6109                           ;i2c1.c: 284: TRISAbits.TRISA0 = 1;
  6110  031A  0021               	movlb	1	; force select bank1
  6111  031B  140C               	bsf	12,0	;volatile
  6112                           
  6113                           ;i2c1.c: 285: } else {
  6114  031C  2B1F               	goto	i1l457
  6115  031D                     i1l456:	
  6116                           
  6117                           ;i2c1.c: 286: TRISAbits.TRISA0 = 0;
  6118  031D  0021               	movlb	1	; force select bank1
  6119  031E  100C               	bcf	12,0	;volatile
  6120  031F                     i1l457:	
  6121                           
  6122                           ;i2c1.c: 287: }
  6123                           ;i2c1.c: 288: if (I2C1_slaveWriteData & 0x02) {
  6124  031F  0020               	movlb	0	; force select bank0
  6125  0320  1CBB               	btfss	_I2C1_slaveWriteData,1	;volatile
  6126  0321  2B28               	goto	i1l458
  6127                           
  6128                           ;i2c1.c: 289: ANSELAbits.ANSA0 = 1;
  6129  0322  0023               	movlb	3	; force select bank3
  6130  0323  140C               	bsf	12,0	;volatile
  6131                           
  6132                           ;i2c1.c: 290: ADC_EnableChannel(GPIO4);
  6133  0324  3000               	movlw	0
  6134  0325  23FC  3182         	fcall	_ADC_EnableChannel
  6135                           
  6136                           ;i2c1.c: 291: } else {
  6137  0327  2B2D               	goto	i1l1661
  6138  0328                     i1l458:	
  6139                           
  6140                           ;i2c1.c: 292: ANSELAbits.ANSA0 = 0;
  6141  0328  0023               	movlb	3	; force select bank3
  6142  0329  100C               	bcf	12,0	;volatile
  6143                           
  6144                           ;i2c1.c: 293: ADC_DisableChannel(GPIO4);
  6145  032A  3000               	movlw	0
  6146  032B  23E3  3182         	fcall	_ADC_DisableChannel
  6147  032D                     i1l1661:	
  6148                           
  6149                           ;i2c1.c: 294: }
  6150                           ;i2c1.c: 295: if (I2C1_slaveWriteData & 0x04) {
  6151  032D  0020               	movlb	0	; force select bank0
  6152  032E  1D3B               	btfss	_I2C1_slaveWriteData,2	;volatile
  6153  032F  2B32               	goto	i1l460
  6154                           
  6155                           ;i2c1.c: 296: WPUAbits.WPUA0 = 1;
  6156  0330  0024               	movlb	4	; force select bank4
  6157  0331  2B57               	goto	L11
  6158  0332                     i1l460:	
  6159                           ;i2c1.c: 297: } else {
  6160                           
  6161                           
  6162                           ;i2c1.c: 298: WPUAbits.WPUA0 = 0;
  6163  0332  0024               	movlb	4	; force select bank4
  6164  0333  2B5A               	goto	L12
  6165  0334                     i1l1665:	
  6166                           ;i2c1.c: 301: case I2CGPIO1:
  6167                           
  6168                           ;i2c1.c: 299: }
  6169                           ;i2c1.c: 300: break;
  6170                           
  6171                           
  6172                           ;i2c1.c: 302: if (I2C1_slaveWriteData) {
  6173  0334  0020               	movlb	0	; force select bank0
  6174  0335  083B               	movf	_I2C1_slaveWriteData,w	;volatile
  6175  0336  1903               	btfsc	3,2
  6176  0337  2B3B               	goto	i1l463
  6177                           
  6178                           ;i2c1.c: 303: LATAbits.LATA4 = 1;
  6179  0338  0022               	movlb	2	; force select bank2
  6180  0339                     L5:	
  6181  0339  160C               	bsf	12,4	;volatile
  6182                           
  6183                           ;i2c1.c: 304: } else {
  6184  033A  2B71               	goto	i1l1687
  6185  033B                     i1l463:	
  6186                           
  6187                           ;i2c1.c: 305: LATAbits.LATA4 = 0;
  6188  033B  0022               	movlb	2	; force select bank2
  6189  033C                     L6:	
  6190  033C  120C               	bcf	12,4	;volatile
  6191                           
  6192                           ;i2c1.c: 306: }
  6193                           ;i2c1.c: 307: break;
  6194  033D  2B71               	goto	i1l1687
  6195  033E                     i1l1669:	
  6196                           ;i2c1.c: 308: case I2CGPIO2:
  6197                           
  6198                           
  6199                           ;i2c1.c: 309: if (I2C1_slaveWriteData) {
  6200  033E  0020               	movlb	0	; force select bank0
  6201  033F  083B               	movf	_I2C1_slaveWriteData,w	;volatile
  6202  0340  1903               	btfsc	3,2
  6203  0341  2B45               	goto	i1l466
  6204                           
  6205                           ;i2c1.c: 310: LATAbits.LATA5 = 1;
  6206  0342  0022               	movlb	2	; force select bank2
  6207  0343                     L7:	
  6208  0343  168C               	bsf	12,5	;volatile
  6209                           
  6210                           ;i2c1.c: 311: } else {
  6211  0344  2B71               	goto	i1l1687
  6212  0345                     i1l466:	
  6213                           
  6214                           ;i2c1.c: 312: LATAbits.LATA5 = 0;
  6215  0345  0022               	movlb	2	; force select bank2
  6216  0346                     L8:	
  6217  0346  128C               	bcf	12,5	;volatile
  6218                           
  6219                           ;i2c1.c: 313: }
  6220                           ;i2c1.c: 314: break;
  6221  0347  2B71               	goto	i1l1687
  6222  0348                     i1l1673:	
  6223                           ;i2c1.c: 315: case I2CGPIO3:
  6224                           
  6225                           
  6226                           ;i2c1.c: 316: if (I2C1_slaveWriteData) {
  6227  0348  0020               	movlb	0	; force select bank0
  6228  0349  083B               	movf	_I2C1_slaveWriteData,w	;volatile
  6229  034A  1903               	btfsc	3,2
  6230  034B  2B4F               	goto	i1l469
  6231                           
  6232                           ;i2c1.c: 317: LATAbits.LATA1 = 1;
  6233  034C  0022               	movlb	2	; force select bank2
  6234  034D                     L9:	
  6235  034D  148C               	bsf	12,1	;volatile
  6236                           
  6237                           ;i2c1.c: 318: } else {
  6238  034E  2B71               	goto	i1l1687
  6239  034F                     i1l469:	
  6240                           
  6241                           ;i2c1.c: 319: LATAbits.LATA1 = 0;
  6242  034F  0022               	movlb	2	; force select bank2
  6243  0350                     L10:	
  6244  0350  108C               	bcf	12,1	;volatile
  6245                           
  6246                           ;i2c1.c: 320: }
  6247                           ;i2c1.c: 321: break;
  6248  0351  2B71               	goto	i1l1687
  6249  0352                     i1l1677:	
  6250                           ;i2c1.c: 322: case I2CGPIO4:
  6251                           
  6252                           
  6253                           ;i2c1.c: 323: if (I2C1_slaveWriteData) {
  6254  0352  0020               	movlb	0	; force select bank0
  6255  0353  083B               	movf	_I2C1_slaveWriteData,w	;volatile
  6256  0354  1903               	btfsc	3,2
  6257  0355  2B59               	goto	i1l472
  6258                           
  6259                           ;i2c1.c: 324: LATAbits.LATA0 = 1;
  6260  0356  0022               	movlb	2	; force select bank2
  6261  0357                     L11:	
  6262  0357  140C               	bsf	12,0	;volatile
  6263                           
  6264                           ;i2c1.c: 325: } else {
  6265  0358  2B71               	goto	i1l1687
  6266  0359                     i1l472:	
  6267                           
  6268                           ;i2c1.c: 326: LATAbits.LATA0 = 0;
  6269  0359  0022               	movlb	2	; force select bank2
  6270  035A                     L12:	
  6271  035A  100C               	bcf	12,0	;volatile
  6272                           
  6273                           ;i2c1.c: 327: }
  6274                           ;i2c1.c: 328: break;
  6275  035B  2B71               	goto	i1l1687
  6276  035C                     i1l477:	
  6277                           ;i2c1.c: 329: case I2CPWM1_L:
  6278                           
  6279                           
  6280                           ;i2c1.c: 330: case I2CPWM2_L:
  6281                           ;i2c1.c: 331: case I2CPWM3_L:
  6282                           ;i2c1.c: 332: case I2CPWM4_L:
  6283                           ;i2c1.c: 333: pwm_lock = 1;
  6284  035C  0020               	movlb	0	; force select bank0
  6285  035D  01D6               	clrf	_pwm_lock
  6286  035E  0AD6               	incf	_pwm_lock,f
  6287                           
  6288                           ;i2c1.c: 334: break;
  6289  035F  2B71               	goto	i1l1687
  6290  0360                     i1l1681:	
  6291                           ;i2c1.c: 336: case I2CPWM1_H:
  6292                           
  6293                           
  6294                           ;i2c1.c: 337: case I2CPWM2_H:
  6295                           ;i2c1.c: 338: case I2CPWM3_H:
  6296                           ;i2c1.c: 339: case I2CPWM4_H:
  6297                           ;i2c1.c: 340: pwm_lock = 0;
  6298  0360  0020               	movlb	0	; force select bank0
  6299  0361  01D6               	clrf	_pwm_lock
  6300                           
  6301                           ;i2c1.c: 343: }
  6302                           
  6303                           ;i2c1.c: 341: break;
  6304  0362  2B71               	goto	i1l1687
  6305  0363                     i1l1685:	
  6306  0363  0020               	movlb	0	; force select bank0
  6307  0364  0852               	movf	I2C1_StatusCallback@eepromAddress,w
  6308                           
  6309                           ; Switch size 1, requested type "speed"
  6310                           ; Number of cases is 16, Range of values is 1 to 26
  6311                           ; switch strategies available:
  6312                           ; Name         Instructions Cycles
  6313                           ; direct_byte           61     9 (fixed)
  6314                           ; simple_byte           49    25 (average)
  6315                           ; jumptable            263     9 (fixed)
  6316                           ;	Chosen strategy is direct_byte
  6317  0365  3EFF               	addlw	-1
  6318  0366  1C03               	skipc
  6319  0367  2B71               	goto	i1l1687
  6320  0368  0084               	movwf	4
  6321  0369  301A               	movlw	26
  6322  036A  0204               	subwf	4,w
  6323  036B  1803               	skipnc
  6324  036C  2B71               	goto	i1l1687
  6325  036D  3186               	movlp	high i1S2739
  6326  036E  3504               	lslf	4,w
  6327  036F  3E00               	addlw	low i1S2739
  6328  0370  0082               	movwf	2
  6329  0371                     i1l1687:	
  6330                           
  6331                           ;i2c1.c: 344: EEPROM_Buffer[eepromAddress++] = I2C1_slaveWriteData;
  6332  0371  0020               	movlb	0	; force select bank0
  6333  0372  0852               	movf	I2C1_StatusCallback@eepromAddress,w
  6334  0373  3E20               	addlw	low _EEPROM_Buffer
  6335  0374  0020               	movlb	0	; force select bank0
  6336  0375  00BE               	movwf	??_I2C1_StatusCallback
  6337  0376  3000               	movlw	high _EEPROM_Buffer
  6338  0377  01BF               	clrf	??_I2C1_StatusCallback+1
  6339  0378  3DBF               	addwfc	??_I2C1_StatusCallback+1,f
  6340  0379  083E               	movf	??_I2C1_StatusCallback,w
  6341  037A  0086               	movwf	6
  6342  037B  083F               	movf	??_I2C1_StatusCallback+1,w
  6343  037C  0087               	movwf	7
  6344  037D  0020               	movlb	0	; force select bank0
  6345  037E  083B               	movf	_I2C1_slaveWriteData,w	;volatile
  6346  037F  0081               	movwf	1
  6347  0380  3001               	movlw	1
  6348  0381  0020               	movlb	0	; force select bank0
  6349  0382  00BE               	movwf	??_I2C1_StatusCallback
  6350  0383  0020               	movlb	0	; force select bank0
  6351  0384  07D2               	addwf	I2C1_StatusCallback@eepromAddress,f
  6352                           
  6353                           ;i2c1.c: 345: if(sizeof(EEPROM_Buffer) <= eepromAddress)
  6354  0385  301B               	movlw	27
  6355  0386  0020               	movlb	0	; force select bank0
  6356  0387  0252               	subwf	I2C1_StatusCallback@eepromAddress,w
  6357  0388  1C03               	skipc
  6358  0389  2B96               	goto	i1l1699
  6359                           
  6360                           ;i2c1.c: 346: {
  6361                           ;i2c1.c: 347: eepromAddress = 0;
  6362  038A  0020               	movlb	0	; force select bank0
  6363  038B  01D2               	clrf	I2C1_StatusCallback@eepromAddress
  6364                           
  6365                           ;i2c1.c: 351: }
  6366                           
  6367                           ;i2c1.c: 348: }
  6368                           ;i2c1.c: 349: break;
  6369  038C  2B96               	goto	i1l1699
  6370  038D                     i1l1697:	
  6371  038D  0020               	movlb	0	; force select bank0
  6372  038E  0851               	movf	I2C1_StatusCallback@slaveWriteType,w
  6373                           
  6374                           ; Switch size 1, requested type "speed"
  6375                           ; Number of cases is 2, Range of values is 0 to 1
  6376                           ; switch strategies available:
  6377                           ; Name         Instructions Cycles
  6378                           ; simple_byte            7     4 (average)
  6379                           ; direct_byte           10     6 (fixed)
  6380                           ; jumptable            260     6 (fixed)
  6381                           ;	Chosen strategy is simple_byte
  6382  038F  3A00               	xorlw	0	; case 0
  6383  0390  1903               	skipnz
  6384  0391  2B63               	goto	i1l1685
  6385  0392  3A01               	xorlw	1	; case 1
  6386  0393  1903               	skipnz
  6387  0394  2AC7               	goto	i1l1623
  6388  0395  2B63               	goto	i1l1685
  6389  0396                     i1l1699:	
  6390                           
  6391                           ;i2c1.c: 353: slaveWriteType = SLAVE_NORMAL_DATA;
  6392  0396  0020               	movlb	0	; force select bank0
  6393  0397  01D1               	clrf	I2C1_StatusCallback@slaveWriteType
  6394                           
  6395                           ;i2c1.c: 354: break;
  6396  0398  0008               	return
  6397  0399                     i1l1701:	
  6398                           ;i2c1.c: 358: case I2CGPIO1:
  6399                           
  6400                           ;i2c1.c: 357: switch (eepromAddress) {
  6401                           
  6402                           ;i2c1.c: 356: case I2C1_SLAVE_READ_REQUEST:
  6403                           
  6404                           
  6405                           ;i2c1.c: 359: SSP1BUF = PORTAbits.RA4;
  6406  0399  3000               	movlw	0
  6407  039A  0020               	movlb	0	; force select bank0
  6408  039B  1A0C               	btfsc	12,4	;volatile
  6409  039C  3001               	movlw	1
  6410  039D  0024               	movlb	4	; force select bank4
  6411  039E  2BBA               	goto	L16
  6412  039F                     i1l1703:	
  6413                           ;i2c1.c: 361: case I2CGPIO2:
  6414                           
  6415                           ;i2c1.c: 360: break;
  6416                           
  6417                           
  6418                           ;i2c1.c: 362: SSP1BUF = PORTAbits.RA5;
  6419  039F  3000               	movlw	0
  6420  03A0  0020               	movlb	0	; force select bank0
  6421  03A1  1A8C               	btfsc	12,5	;volatile
  6422  03A2  3001               	movlw	1
  6423  03A3  0024               	movlb	4	; force select bank4
  6424  03A4  2BBA               	goto	L16
  6425  03A5                     i1l1705:	
  6426                           ;i2c1.c: 364: case I2CGPIO3:
  6427                           
  6428                           ;i2c1.c: 363: break;
  6429                           
  6430                           
  6431                           ;i2c1.c: 365: SSP1BUF = PORTAbits.RA1;
  6432  03A5  3000               	movlw	0
  6433  03A6  0020               	movlb	0	; force select bank0
  6434  03A7  188C               	btfsc	12,1	;volatile
  6435  03A8  3001               	movlw	1
  6436  03A9  0024               	movlb	4	; force select bank4
  6437  03AA  2BBA               	goto	L16
  6438  03AB                     i1l1707:	
  6439                           ;i2c1.c: 367: case I2CGPIO4:
  6440                           
  6441                           ;i2c1.c: 366: break;
  6442                           
  6443                           
  6444                           ;i2c1.c: 368: SSP1BUF = PORTAbits.RA0;
  6445  03AB  3000               	movlw	0
  6446  03AC  0020               	movlb	0	; force select bank0
  6447  03AD  180C               	btfsc	12,0	;volatile
  6448  03AE  3001               	movlw	1
  6449  03AF  0024               	movlb	4	; force select bank4
  6450  03B0  2BBA               	goto	L16
  6451  03B1                     i1l1709:	
  6452                           ;i2c1.c: 370: default:
  6453                           
  6454                           ;i2c1.c: 369: break;
  6455                           
  6456                           
  6457                           ;i2c1.c: 371: SSP1BUF = EEPROM_Buffer[eepromAddress];
  6458  03B1  0020               	movlb	0	; force select bank0
  6459  03B2  0852               	movf	I2C1_StatusCallback@eepromAddress,w
  6460  03B3  3E20               	addlw	low _EEPROM_Buffer
  6461  03B4  0086               	movwf	6
  6462  03B5  3000               	movlw	high _EEPROM_Buffer
  6463  03B6  0187               	clrf	7
  6464  03B7  3D87               	addwfc	7,f
  6465  03B8  0801               	movf	1,w
  6466  03B9  0024               	movlb	4	; force select bank4
  6467  03BA                     L16:	
  6468  03BA  0091               	movwf	17	;volatile
  6469                           
  6470                           ;i2c1.c: 372: }
  6471  03BB  2BCB               	goto	i1l1713
  6472  03BC                     i1l1711:	
  6473  03BC  0020               	movlb	0	; force select bank0
  6474  03BD  0852               	movf	I2C1_StatusCallback@eepromAddress,w
  6475                           
  6476                           ; Switch size 1, requested type "speed"
  6477                           ; Number of cases is 4, Range of values is 23 to 26
  6478                           ; switch strategies available:
  6479                           ; Name         Instructions Cycles
  6480                           ; simple_byte           13     7 (average)
  6481                           ; direct_byte           17     9 (fixed)
  6482                           ; jumptable            263     9 (fixed)
  6483                           ;	Chosen strategy is simple_byte
  6484  03BE  3A17               	xorlw	23	; case 23
  6485  03BF  1903               	skipnz
  6486  03C0  2B99               	goto	i1l1701
  6487  03C1  3A0F               	xorlw	15	; case 24
  6488  03C2  1903               	skipnz
  6489  03C3  2B9F               	goto	i1l1703
  6490  03C4  3A01               	xorlw	1	; case 25
  6491  03C5  1903               	skipnz
  6492  03C6  2BA5               	goto	i1l1705
  6493  03C7  3A03               	xorlw	3	; case 26
  6494  03C8  1903               	skipnz
  6495  03C9  2BAB               	goto	i1l1707
  6496  03CA  2BB1               	goto	i1l1709
  6497  03CB                     i1l1713:	
  6498                           
  6499                           ;i2c1.c: 375: if(sizeof(EEPROM_Buffer) <= ++eepromAddress)
  6500  03CB  3001               	movlw	1
  6501  03CC  0020               	movlb	0	; force select bank0
  6502  03CD  00BE               	movwf	??_I2C1_StatusCallback
  6503  03CE  0020               	movlb	0	; force select bank0
  6504  03CF  07D2               	addwf	I2C1_StatusCallback@eepromAddress,f
  6505  03D0  301B               	movlw	27
  6506  03D1  0252               	subwf	I2C1_StatusCallback@eepromAddress,w
  6507  03D2  1C03               	skipc
  6508  03D3  0008               	return
  6509                           
  6510                           ;i2c1.c: 376: {
  6511                           ;i2c1.c: 377: eepromAddress = 0;
  6512  03D4  0020               	movlb	0	; force select bank0
  6513  03D5  01D2               	clrf	I2C1_StatusCallback@eepromAddress
  6514                           
  6515                           ;i2c1.c: 384: }
  6516                           
  6517                           ;i2c1.c: 382: default:;
  6518                           
  6519                           ;i2c1.c: 381: case I2C1_SLAVE_READ_COMPLETED:
  6520                           
  6521                           ;i2c1.c: 378: }
  6522                           ;i2c1.c: 379: break;
  6523  03D6  0008               	return
  6524  03D7                     i1l1717:	
  6525  03D7  0020               	movlb	0	; force select bank0
  6526  03D8  0840               	movf	I2C1_StatusCallback@i2c_bus_state,w
  6527                           
  6528                           ; Switch size 1, requested type "speed"
  6529                           ; Number of cases is 4, Range of values is 0 to 3
  6530                           ; switch strategies available:
  6531                           ; Name         Instructions Cycles
  6532                           ; direct_byte           14     6 (fixed)
  6533                           ; simple_byte           13     7 (average)
  6534                           ; jumptable            260     6 (fixed)
  6535                           ;	Chosen strategy is direct_byte
  6536  03D9  0084               	movwf	4
  6537  03DA  3004               	movlw	4
  6538  03DB  0204               	subwf	4,w
  6539  03DC  1803               	skipnc
  6540  03DD  0008               	return
  6541  03DE  3186               	movlp	high i1S2741
  6542  03DF  3504               	lslf	4,w
  6543  03E0  3E9C               	addlw	low i1S2741
  6544  03E1  0082               	movwf	2
  6545  03E2                     i1l494:	
  6546  03E2  0008               	return
  6547  03E3                     __end_of_I2C1_StatusCallback:	
  6548  03E3                     __ptext44:	
  6549 ;; *************** function _ADC_DisableChannel *****************
  6550 ;; Defined at:
  6551 ;;		line 225 in file "mcc_generated_files/adc.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  Channel         1    wreg     enum E2976
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;  Channel         1    0[BANK0 ] enum E2976
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  1    wreg      void 
  6558 ;; Registers used:
  6559 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6566 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6568 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6569 ;;Total ram usage:        1 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; This function calls:
  6572 ;;		Nothing
  6573 ;; This function is called by:
  6574 ;;		_I2C1_StatusCallback
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           
  6579                           ;psect for function _ADC_DisableChannel
  6580  03E3                     _ADC_DisableChannel:	
  6581                           
  6582                           ;incstack = 0
  6583                           ; Regs used in _ADC_DisableChannel: [wreg-fsr0h+status,2+status,0]
  6584                           ;ADC_DisableChannel@Channel stored from wreg
  6585  03E3  0020               	movlb	0	; force select bank0
  6586  03E4  00BD               	movwf	ADC_DisableChannel@Channel
  6587                           
  6588                           ;adc.c: 226: switch(Channel)
  6589  03E5  2BEF               	goto	i1l1511
  6590  03E6                     i1l1503:	
  6591                           ;adc.c: 227: {
  6592                           ;adc.c: 228: case GPIO1:
  6593                           
  6594                           
  6595                           ;adc.c: 229: GPIO1Enable = 0;
  6596  03E6  0020               	movlb	0	; force select bank0
  6597  03E7  01D5               	clrf	_GPIO1Enable
  6598                           
  6599                           ;adc.c: 230: break;
  6600  03E8  0008               	return
  6601  03E9                     i1l1505:	
  6602                           ;adc.c: 231: case GPIO3:
  6603                           
  6604                           
  6605                           ;adc.c: 232: GPIO3Enable = 0;
  6606  03E9  0020               	movlb	0	; force select bank0
  6607  03EA  01D4               	clrf	_GPIO3Enable
  6608                           
  6609                           ;adc.c: 233: break;
  6610  03EB  0008               	return
  6611  03EC                     i1l1507:	
  6612                           ;adc.c: 234: case GPIO4:
  6613                           
  6614                           
  6615                           ;adc.c: 235: GPIO4Enable = 0;
  6616  03EC  0020               	movlb	0	; force select bank0
  6617  03ED  01D3               	clrf	_GPIO4Enable
  6618                           
  6619                           ;adc.c: 237: }
  6620                           
  6621                           ;adc.c: 236: break;
  6622  03EE  0008               	return
  6623  03EF                     i1l1511:	
  6624  03EF  0020               	movlb	0	; force select bank0
  6625  03F0  083D               	movf	ADC_DisableChannel@Channel,w
  6626                           
  6627                           ; Switch size 1, requested type "speed"
  6628                           ; Number of cases is 3, Range of values is 0 to 3
  6629                           ; switch strategies available:
  6630                           ; Name         Instructions Cycles
  6631                           ; simple_byte           10     6 (average)
  6632                           ; direct_byte           14     6 (fixed)
  6633                           ; jumptable            260     6 (fixed)
  6634                           ;	Chosen strategy is simple_byte
  6635  03F1  3A00               	xorlw	0	; case 0
  6636  03F2  1903               	skipnz
  6637  03F3  2BEC               	goto	i1l1507
  6638  03F4  3A01               	xorlw	1	; case 1
  6639  03F5  1903               	skipnz
  6640  03F6  2BE9               	goto	i1l1505
  6641  03F7  3A02               	xorlw	2	; case 3
  6642  03F8  1903               	skipnz
  6643  03F9  2BE6               	goto	i1l1503
  6644  03FA  2BFB               	goto	i1l346
  6645  03FB                     i1l346:	
  6646  03FB  0008               	return
  6647  03FC                     __end_of_ADC_DisableChannel:	
  6648  03FC                     __ptext43:	
  6649 ;; *************** function _ADC_EnableChannel *****************
  6650 ;; Defined at:
  6651 ;;		line 210 in file "mcc_generated_files/adc.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;  Channel         1    wreg     enum E2976
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;  Channel         1    0[BANK0 ] enum E2976
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  1    wreg      void 
  6658 ;; Registers used:
  6659 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6666 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6668 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6669 ;;Total ram usage:        1 bytes
  6670 ;; Hardware stack levels used:    1
  6671 ;; This function calls:
  6672 ;;		Nothing
  6673 ;; This function is called by:
  6674 ;;		_I2C1_StatusCallback
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678                           
  6679                           ;psect for function _ADC_EnableChannel
  6680  03FC                     _ADC_EnableChannel:	
  6681                           
  6682                           ;incstack = 0
  6683                           ; Regs used in _ADC_EnableChannel: [wreg-fsr0h+status,2+status,0]
  6684                           ;ADC_EnableChannel@Channel stored from wreg
  6685  03FC  0020               	movlb	0	; force select bank0
  6686  03FD  00BD               	movwf	ADC_EnableChannel@Channel
  6687                           
  6688                           ;adc.c: 211: switch(Channel)
  6689  03FE  2C0B               	goto	i1l1499
  6690  03FF                     i1l334:	
  6691                           ;adc.c: 212: {
  6692                           ;adc.c: 213: case GPIO1:
  6693                           
  6694                           
  6695                           ;adc.c: 214: GPIO1Enable = 1;
  6696  03FF  0020               	movlb	0	; force select bank0
  6697  0400  01D5               	clrf	_GPIO1Enable
  6698  0401  0AD5               	incf	_GPIO1Enable,f
  6699                           
  6700                           ;adc.c: 215: break;
  6701  0402  0008               	return
  6702  0403                     i1l336:	
  6703                           ;adc.c: 216: case GPIO3:
  6704                           
  6705                           
  6706                           ;adc.c: 217: GPIO3Enable = 1;
  6707  0403  0020               	movlb	0	; force select bank0
  6708  0404  01D4               	clrf	_GPIO3Enable
  6709  0405  0AD4               	incf	_GPIO3Enable,f
  6710                           
  6711                           ;adc.c: 218: break;
  6712  0406  0008               	return
  6713  0407                     i1l337:	
  6714                           ;adc.c: 219: case GPIO4:
  6715                           
  6716                           
  6717                           ;adc.c: 220: GPIO4Enable = 1;
  6718  0407  0020               	movlb	0	; force select bank0
  6719  0408  01D3               	clrf	_GPIO4Enable
  6720  0409  0AD3               	incf	_GPIO4Enable,f
  6721                           
  6722                           ;adc.c: 222: }
  6723                           
  6724                           ;adc.c: 221: break;
  6725  040A  0008               	return
  6726  040B                     i1l1499:	
  6727  040B  0020               	movlb	0	; force select bank0
  6728  040C  083D               	movf	ADC_EnableChannel@Channel,w
  6729                           
  6730                           ; Switch size 1, requested type "speed"
  6731                           ; Number of cases is 3, Range of values is 0 to 3
  6732                           ; switch strategies available:
  6733                           ; Name         Instructions Cycles
  6734                           ; simple_byte           10     6 (average)
  6735                           ; direct_byte           14     6 (fixed)
  6736                           ; jumptable            260     6 (fixed)
  6737                           ;	Chosen strategy is simple_byte
  6738  040D  3A00               	xorlw	0	; case 0
  6739  040E  1903               	skipnz
  6740  040F  2C07               	goto	i1l337
  6741  0410  3A01               	xorlw	1	; case 1
  6742  0411  1903               	skipnz
  6743  0412  2C03               	goto	i1l336
  6744  0413  3A02               	xorlw	2	; case 3
  6745  0414  1903               	skipnz
  6746  0415  2BFF               	goto	i1l334
  6747  0416  2C17               	goto	i1l338
  6748  0417                     i1l338:	
  6749  0417  0008               	return
  6750  0418                     __end_of_ADC_EnableChannel:	
  6751                           
  6752                           	psect	swtext3
  6753  0600                     __pswtext3:	
  6754  0600                     i1S2739:	
  6755  0600  3183  2B5C         	ljmp	i1l477
  6756  0602  3183  2B60         	ljmp	i1l1681
  6757  0604  3183  2B5C         	ljmp	i1l477
  6758  0606  3183  2B60         	ljmp	i1l1681
  6759  0608  3183  2B5C         	ljmp	i1l477
  6760  060A  3183  2B60         	ljmp	i1l1681
  6761  060C  3183  2B5C         	ljmp	i1l477
  6762  060E  3183  2B60         	ljmp	i1l1681
  6763  0610  3183  2B71         	ljmp	i1l1687
  6764  0612  3183  2B71         	ljmp	i1l1687
  6765  0614  3183  2B71         	ljmp	i1l1687
  6766  0616  3183  2B71         	ljmp	i1l1687
  6767  0618  3183  2B71         	ljmp	i1l1687
  6768  061A  3183  2B71         	ljmp	i1l1687
  6769  061C  3183  2B71         	ljmp	i1l1687
  6770  061E  3183  2B71         	ljmp	i1l1687
  6771  0620  3183  2B71         	ljmp	i1l1687
  6772  0622  3183  2B71         	ljmp	i1l1687
  6773  0624  3182  2ACE         	ljmp	i1l435
  6774  0626  3182  2AEB         	ljmp	i1l443
  6775  0628  3182  2AFA         	ljmp	i1l448
  6776  062A  3183  2B17         	ljmp	i1l455
  6777  062C  3183  2B34         	ljmp	i1l1665
  6778  062E  3183  2B3E         	ljmp	i1l1669
  6779  0630  3183  2B48         	ljmp	i1l1673
  6780  0632  3183  2B52         	ljmp	i1l1677
  6781                           
  6782                           	psect	swtext4
  6783  069C                     __pswtext4:	
  6784  069C                     i1S2741:	
  6785  069C  3182  2AC3         	ljmp	i1l426
  6786  069E  3183  2BBC         	ljmp	i1l1711
  6787  06A0  3183  2B8D         	ljmp	i1l1697
  6788  06A2  3183  2BE2         	ljmp	i1l494
  6789                           
  6790                           	psect	text45
  6791  0540                     __ptext45:	
  6792 ;; *************** function _ADC_ISR *****************
  6793 ;; Defined at:
  6794 ;;		line 138 in file "mcc_generated_files/adc.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;		None
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;  AnalogReadin    2    0        unsigned int 
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  1    wreg      void 
  6801 ;; Registers used:
  6802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6810 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6811 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6812 ;;Total ram usage:        1 bytes
  6813 ;; Hardware stack levels used:    1
  6814 ;; Hardware stack levels required when called:    1
  6815 ;; This function calls:
  6816 ;;		_I2C1_WriteBuffer
  6817 ;;		i1_ADC_SelectChannel
  6818 ;; This function is called by:
  6819 ;;		_INTERRUPT_InterruptManager
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           
  6824                           ;psect for function _ADC_ISR
  6825  0540                     _ADC_ISR:	
  6826                           
  6827                           ;incstack = 0
  6828                           ; Regs used in _ADC_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6829                           ;adc.c: 140: uint16_t AnalogReading;
  6830                           ;adc.c: 143: do { LATCbits.LATC5 = 1; } while(0);
  6831  0540  0022               	movlb	2	; force select bank2
  6832  0541  168E               	bsf	14,5	;volatile
  6833                           
  6834                           ;adc.c: 146: PIR1bits.ADIF = 0;
  6835  0542  0020               	movlb	0	; force select bank0
  6836  0543  1311               	bcf	17,6	;volatile
  6837                           
  6838                           ;adc.c: 151: switch(CurrentChannel)
  6839  0544  2D89               	goto	i1l2369
  6840  0545                     i1l2357:	
  6841                           ;adc.c: 152: {
  6842                           ;adc.c: 153: case SenseV:
  6843                           
  6844                           
  6845                           ;adc.c: 154: I2C1_WriteBuffer(I2CSenseV_H,ADRESH);
  6846  0545  0021               	movlb	1	; force select bank1
  6847  0546  081C               	movf	28,w	;volatile
  6848  0547  0020               	movlb	0	; force select bank0
  6849  0548  00C1               	movwf	??_ADC_ISR
  6850  0549  0020               	movlb	0	; force select bank0
  6851  054A  00BD               	movwf	I2C1_WriteBuffer@data
  6852  054B  300A               	movlw	10
  6853  054C  25CD  3185         	fcall	_I2C1_WriteBuffer
  6854                           
  6855                           ;adc.c: 155: I2C1_WriteBuffer(I2CSenseV_L,ADRESL);
  6856  054E  0021               	movlb	1	; force select bank1
  6857  054F  081B               	movf	27,w	;volatile
  6858  0550  0020               	movlb	0	; force select bank0
  6859  0551  00C1               	movwf	??_ADC_ISR
  6860  0552  0020               	movlb	0	; force select bank0
  6861  0553  00BD               	movwf	I2C1_WriteBuffer@data
  6862  0554  3009               	movlw	9
  6863  0555  25CD  3185         	fcall	_I2C1_WriteBuffer
  6864                           
  6865                           ;adc.c: 156: break;
  6866  0557  2DBE               	goto	i1l2387
  6867  0558                     i1l2359:	
  6868                           ;adc.c: 157: case SenseI:
  6869                           
  6870                           
  6871                           ;adc.c: 158: I2C1_WriteBuffer(I2CSenseI_H,ADRESH);
  6872  0558  0021               	movlb	1	; force select bank1
  6873  0559  081C               	movf	28,w	;volatile
  6874  055A  0020               	movlb	0	; force select bank0
  6875  055B  00C1               	movwf	??_ADC_ISR
  6876  055C  0020               	movlb	0	; force select bank0
  6877  055D  00BD               	movwf	I2C1_WriteBuffer@data
  6878  055E  300C               	movlw	12
  6879  055F  25CD  3185         	fcall	_I2C1_WriteBuffer
  6880                           
  6881                           ;adc.c: 159: I2C1_WriteBuffer(I2CSenseI_L,ADRESL);
  6882  0561  0021               	movlb	1	; force select bank1
  6883  0562  081B               	movf	27,w	;volatile
  6884  0563  0020               	movlb	0	; force select bank0
  6885  0564  00C1               	movwf	??_ADC_ISR
  6886  0565  0020               	movlb	0	; force select bank0
  6887  0566  00BD               	movwf	I2C1_WriteBuffer@data
  6888  0567  300B               	movlw	11
  6889  0568  25CD  3185         	fcall	_I2C1_WriteBuffer
  6890                           
  6891                           ;adc.c: 160: break;
  6892  056A  2DBE               	goto	i1l2387
  6893  056B                     i1l2361:	
  6894                           ;adc.c: 161: case GPIO1:
  6895                           
  6896                           
  6897                           ;adc.c: 162: I2C1_WriteBuffer(I2CAGPIO1_H,ADRESH);
  6898  056B  0021               	movlb	1	; force select bank1
  6899  056C  081C               	movf	28,w	;volatile
  6900  056D  0020               	movlb	0	; force select bank0
  6901  056E  00C1               	movwf	??_ADC_ISR
  6902  056F  0020               	movlb	0	; force select bank0
  6903  0570  00BD               	movwf	I2C1_WriteBuffer@data
  6904  0571  300E               	movlw	14
  6905  0572  25CD  3185         	fcall	_I2C1_WriteBuffer
  6906                           
  6907                           ;adc.c: 163: break;
  6908  0574  2DBE               	goto	i1l2387
  6909  0575                     i1l2363:	
  6910                           ;adc.c: 164: case GPIO3:
  6911                           
  6912                           
  6913                           ;adc.c: 165: I2C1_WriteBuffer(I2CAGPIO3_H,ADRESH);
  6914  0575  0021               	movlb	1	; force select bank1
  6915  0576  081C               	movf	28,w	;volatile
  6916  0577  0020               	movlb	0	; force select bank0
  6917  0578  00C1               	movwf	??_ADC_ISR
  6918  0579  0020               	movlb	0	; force select bank0
  6919  057A  00BD               	movwf	I2C1_WriteBuffer@data
  6920  057B  3010               	movlw	16
  6921  057C  25CD  3185         	fcall	_I2C1_WriteBuffer
  6922                           
  6923                           ;adc.c: 166: break;
  6924  057E  2DBE               	goto	i1l2387
  6925  057F                     i1l2365:	
  6926                           ;adc.c: 167: case GPIO4:
  6927                           
  6928                           
  6929                           ;adc.c: 168: I2C1_WriteBuffer(I2CAGPIO4_H,ADRESH);
  6930  057F  0021               	movlb	1	; force select bank1
  6931  0580  081C               	movf	28,w	;volatile
  6932  0581  0020               	movlb	0	; force select bank0
  6933  0582  00C1               	movwf	??_ADC_ISR
  6934  0583  0020               	movlb	0	; force select bank0
  6935  0584  00BD               	movwf	I2C1_WriteBuffer@data
  6936  0585  3012               	movlw	18
  6937  0586  25CD  3185         	fcall	_I2C1_WriteBuffer
  6938                           
  6939                           ;adc.c: 170: }
  6940                           
  6941                           ;adc.c: 169: break;
  6942  0588  2DBE               	goto	i1l2387
  6943  0589                     i1l2369:	
  6944  0589  0020               	movlb	0	; force select bank0
  6945  058A  083C               	movf	_CurrentChannel,w
  6946                           
  6947                           ; Switch size 1, requested type "speed"
  6948                           ; Number of cases is 5, Range of values is 0 to 9
  6949                           ; switch strategies available:
  6950                           ; Name         Instructions Cycles
  6951                           ; direct_byte           26     6 (fixed)
  6952                           ; simple_byte           16     9 (average)
  6953                           ; jumptable            260     6 (fixed)
  6954                           ;	Chosen strategy is direct_byte
  6955  058B  0084               	movwf	4
  6956  058C  300A               	movlw	10
  6957  058D  0204               	subwf	4,w
  6958  058E  1803               	skipnc
  6959  058F  2DBE               	goto	i1l2387
  6960  0590  3186               	movlp	high i1S2743
  6961  0591  3504               	lslf	4,w
  6962  0592  3E65               	addlw	low i1S2743
  6963  0593  0082               	movwf	2
  6964                           
  6965                           ;adc.c: 173: switch(CurrentChannel)
  6966  0594  2DBE               	goto	i1l2387
  6967  0595                     i1l2371:	
  6968                           ;adc.c: 174: {
  6969                           ;adc.c: 176: case SenseV:
  6970                           
  6971                           
  6972                           ;adc.c: 177: CurrentChannel = SenseI;
  6973  0595  3009               	movlw	9
  6974  0596  0020               	movlb	0	; force select bank0
  6975  0597  00C1               	movwf	??_ADC_ISR
  6976  0598  0020               	movlb	0	; force select bank0
  6977  0599  2DA2               	goto	L17
  6978  059A                     i1l2373:	
  6979                           ;adc.c: 179: case SenseI:
  6980                           
  6981                           ;adc.c: 178: break;
  6982                           
  6983                           
  6984                           ;adc.c: 180: if (GPIO1Enable) {
  6985  059A  0020               	movlb	0	; force select bank0
  6986  059B  0855               	movf	_GPIO1Enable,w
  6987  059C  1903               	btfsc	3,2
  6988  059D  2DA4               	goto	i1l2377
  6989                           
  6990                           ;adc.c: 181: CurrentChannel = GPIO1;
  6991  059E  3003               	movlw	3
  6992  059F  0020               	movlb	0	; force select bank0
  6993  05A0  00C1               	movwf	??_ADC_ISR
  6994  05A1  0020               	movlb	0	; force select bank0
  6995  05A2                     L17:	
  6996  05A2  00BC               	movwf	_CurrentChannel
  6997                           
  6998                           ;adc.c: 182: break;
  6999  05A3  2DC9               	goto	i1l2389
  7000  05A4                     i1l2377:	
  7001                           ;adc.c: 183: }
  7002                           ;adc.c: 184: case GPIO1:
  7003                           
  7004                           
  7005                           ;adc.c: 185: if (GPIO3Enable) {
  7006  05A4  0020               	movlb	0	; force select bank0
  7007  05A5  0854               	movf	_GPIO3Enable,w
  7008  05A6  1903               	btfsc	3,2
  7009  05A7  2DAC               	goto	i1l2381
  7010                           
  7011                           ;adc.c: 186: CurrentChannel = GPIO3;
  7012  05A8  0020               	movlb	0	; force select bank0
  7013  05A9  01BC               	clrf	_CurrentChannel
  7014  05AA  0ABC               	incf	_CurrentChannel,f
  7015                           
  7016                           ;adc.c: 187: break;
  7017  05AB  2DC9               	goto	i1l2389
  7018  05AC                     i1l2381:	
  7019                           ;adc.c: 188: }
  7020                           ;adc.c: 189: case GPIO3:
  7021                           
  7022                           
  7023                           ;adc.c: 190: if (GPIO4Enable) {
  7024  05AC  0020               	movlb	0	; force select bank0
  7025  05AD  0853               	movf	_GPIO4Enable,w
  7026  05AE  1903               	btfsc	3,2
  7027  05AF  2DB3               	goto	i1l2385
  7028                           
  7029                           ;adc.c: 191: CurrentChannel = GPIO4;
  7030  05B0  0020               	movlb	0	; force select bank0
  7031  05B1  01BC               	clrf	_CurrentChannel
  7032                           
  7033                           ;adc.c: 192: break;
  7034  05B2  2DC9               	goto	i1l2389
  7035  05B3                     i1l2385:	
  7036                           ;adc.c: 193: }
  7037                           ;adc.c: 194: case GPIO4:
  7038                           
  7039                           
  7040                           ;adc.c: 195: CurrentChannel = SenseV;
  7041  05B3  3004               	movlw	4
  7042  05B4  0020               	movlb	0	; force select bank0
  7043  05B5  00C1               	movwf	??_ADC_ISR
  7044  05B6  0020               	movlb	0	; force select bank0
  7045  05B7  00BC               	movwf	_CurrentChannel
  7046                           
  7047                           ;adc.c: 196: ADCValid = 1;
  7048  05B8  3001               	movlw	1
  7049  05B9  0020               	movlb	0	; force select bank0
  7050  05BA  00C1               	movwf	??_ADC_ISR
  7051  05BB  0020               	movlb	0	; force select bank0
  7052  05BC  00D7               	movwf	_ADCValid	;volatile
  7053                           
  7054                           ;adc.c: 197: }
  7055  05BD  2DC9               	goto	i1l2389
  7056  05BE                     i1l2387:	
  7057  05BE  0020               	movlb	0	; force select bank0
  7058  05BF  083C               	movf	_CurrentChannel,w
  7059                           
  7060                           ; Switch size 1, requested type "speed"
  7061                           ; Number of cases is 5, Range of values is 0 to 9
  7062                           ; switch strategies available:
  7063                           ; Name         Instructions Cycles
  7064                           ; direct_byte           26     6 (fixed)
  7065                           ; simple_byte           16     9 (average)
  7066                           ; jumptable            260     6 (fixed)
  7067                           ;	Chosen strategy is direct_byte
  7068  05C0  0084               	movwf	4
  7069  05C1  300A               	movlw	10
  7070  05C2  0204               	subwf	4,w
  7071  05C3  1803               	skipnc
  7072  05C4  2DC9               	goto	i1l2389
  7073  05C5  3186               	movlp	high i1S2745
  7074  05C6  3504               	lslf	4,w
  7075  05C7  3E79               	addlw	low i1S2745
  7076  05C8  0082               	movwf	2
  7077  05C9                     i1l2389:	
  7078                           
  7079                           ;adc.c: 201: ADC_SelectChannel(CurrentChannel);
  7080  05C9  0020               	movlb	0	; force select bank0
  7081  05CA  083C               	movf	_CurrentChannel,w
  7082  05CB  25DF               	fcall	i1_ADC_SelectChannel
  7083  05CC  0008               	return
  7084  05CD                     __end_of_ADC_ISR:	
  7085  05CD                     __ptext47:	
  7086 ;; *************** function _I2C1_WriteBuffer *****************
  7087 ;; Defined at:
  7088 ;;		line 129 in file "mcc_generated_files/i2c1.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;  address         1    wreg     enum E2979
  7091 ;;  data            1    0[BANK0 ] unsigned char 
  7092 ;; Auto vars:     Size  Location     Type
  7093 ;;  address         1    3[BANK0 ] enum E2979
  7094 ;; Return value:  Size  Location     Type
  7095 ;;                  1    wreg      void 
  7096 ;; Registers used:
  7097 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7098 ;; Tracked objects:
  7099 ;;		On entry : 0/0
  7100 ;;		On exit  : 0/0
  7101 ;;		Unchanged: 0/0
  7102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7103 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7104 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7105 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7106 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7107 ;;Total ram usage:        4 bytes
  7108 ;; Hardware stack levels used:    1
  7109 ;; This function calls:
  7110 ;;		Nothing
  7111 ;; This function is called by:
  7112 ;;		_ADC_ISR
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           
  7117                           ;psect for function _I2C1_WriteBuffer
  7118  05CD                     _I2C1_WriteBuffer:	
  7119                           
  7120                           ;incstack = 0
  7121                           ; Regs used in _I2C1_WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  7122                           ;I2C1_WriteBuffer@address stored from wreg
  7123  05CD  0020               	movlb	0	; force select bank0
  7124  05CE  00C0               	movwf	I2C1_WriteBuffer@address
  7125                           
  7126                           ;i2c1.c: 130: EEPROM_Buffer[address] = data;
  7127  05CF  0020               	movlb	0	; force select bank0
  7128  05D0  0840               	movf	I2C1_WriteBuffer@address,w
  7129  05D1  3E20               	addlw	low _EEPROM_Buffer
  7130  05D2  0020               	movlb	0	; force select bank0
  7131  05D3  00BE               	movwf	??_I2C1_WriteBuffer
  7132  05D4  3000               	movlw	high _EEPROM_Buffer
  7133  05D5  01BF               	clrf	??_I2C1_WriteBuffer+1
  7134  05D6  3DBF               	addwfc	??_I2C1_WriteBuffer+1,f
  7135  05D7  083E               	movf	??_I2C1_WriteBuffer,w
  7136  05D8  0086               	movwf	6
  7137  05D9  083F               	movf	??_I2C1_WriteBuffer+1,w
  7138  05DA  0087               	movwf	7
  7139  05DB  0020               	movlb	0	; force select bank0
  7140  05DC  083D               	movf	I2C1_WriteBuffer@data,w
  7141  05DD  0081               	movwf	1
  7142  05DE  0008               	return
  7143  05DF                     __end_of_I2C1_WriteBuffer:	
  7144  007E                     btemp	set	126	;btemp
  7145  007E                     int$flags	set	126
  7146  007E                     wtemp0	set	126
  7147  05DF                     __ptext46:	
  7148 ;; *************** function i1_ADC_SelectChannel *****************
  7149 ;; Defined at:
  7150 ;;		line 88 in file "mcc_generated_files/adc.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;  channel         1    wreg     enum E2976
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;  channel         1    1[BANK0 ] enum E2976
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1    wreg      void 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;Total ram usage:        2 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; This function calls:
  7171 ;;		Nothing
  7172 ;; This function is called by:
  7173 ;;		_ADC_ISR
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177                           
  7178                           ;psect for function i1_ADC_SelectChannel
  7179  05DF                     i1_ADC_SelectChannel:	
  7180                           
  7181                           ;incstack = 0
  7182                           ; Regs used in i1_ADC_SelectChannel: [wreg+status,2+status,0]
  7183                           ;i1ADC_SelectChannel@channel stored from wreg
  7184  05DF  0020               	movlb	0	; force select bank0
  7185  05E0  00BE               	movwf	i1ADC_SelectChannel@channel
  7186                           
  7187                           ;adc.c: 91: ADCON0bits.CHS = channel;
  7188  05E1  0020               	movlb	0	; force select bank0
  7189  05E2  083E               	movf	i1ADC_SelectChannel@channel,w
  7190  05E3  0020               	movlb	0	; force select bank0
  7191  05E4  00BD               	movwf	??i1_ADC_SelectChannel
  7192  05E5  0DBD               	rlf	??i1_ADC_SelectChannel,f
  7193  05E6  0DBD               	rlf	??i1_ADC_SelectChannel,f
  7194  05E7  0021               	movlb	1	; force select bank1
  7195  05E8  081D               	movf	29,w	;volatile
  7196  05E9  0020               	movlb	0	; force select bank0
  7197  05EA  063D               	xorwf	??i1_ADC_SelectChannel,w
  7198  05EB  3983               	andlw	-125
  7199  05EC  063D               	xorwf	??i1_ADC_SelectChannel,w
  7200  05ED  0021               	movlb	1	; force select bank1
  7201  05EE  009D               	movwf	29	;volatile
  7202                           
  7203                           ;adc.c: 93: ADCON0bits.ADON = 1;
  7204  05EF  0021               	movlb	1	; force select bank1
  7205  05F0  141D               	bsf	29,0	;volatile
  7206  05F1  0008               	return
  7207  05F2                     __end_ofi1_ADC_SelectChannel:	
  7208                           
  7209                           	psect	swtext5
  7210  0665                     __pswtext5:	
  7211  0665                     i1S2743:	
  7212  0665  3185  2D7F         	ljmp	i1l2365
  7213  0667  3185  2D75         	ljmp	i1l2363
  7214  0669  3185  2DBE         	ljmp	i1l2387
  7215  066B  3185  2D6B         	ljmp	i1l2361
  7216  066D  3185  2D45         	ljmp	i1l2357
  7217  066F  3185  2DBE         	ljmp	i1l2387
  7218  0671  3185  2DBE         	ljmp	i1l2387
  7219  0673  3185  2DBE         	ljmp	i1l2387
  7220  0675  3185  2DBE         	ljmp	i1l2387
  7221  0677  3185  2D58         	ljmp	i1l2359
  7222                           
  7223                           	psect	swtext6
  7224  0679                     __pswtext6:	
  7225  0679                     i1S2745:	
  7226  0679  3185  2DB3         	ljmp	i1l2385
  7227  067B  3185  2DAC         	ljmp	i1l2381
  7228  067D  3185  2DC9         	ljmp	i1l2389
  7229  067F  3185  2DA4         	ljmp	i1l2377
  7230  0681  3185  2D95         	ljmp	i1l2371
  7231  0683  3185  2DC9         	ljmp	i1l2389
  7232  0685  3185  2DC9         	ljmp	i1l2389
  7233  0687  3185  2DC9         	ljmp	i1l2389
  7234  0689  3185  2DC9         	ljmp	i1l2389
  7235  068B  3185  2D9A         	ljmp	i1l2373


Data Sizes:
    Strings     0
    Constant    0
    Data        29
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       0
    BANK0            80     17      56
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer6Overflow(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	 PTR FTN()void  size(2) Largest target is 1
		 -> Timer6Overflow(), Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ADC_GetConversion
    _TMR6_Initialize->_TMR6_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR6_CallBack->_Timer6Overflow
    _Timer6Overflow->_EPWM1_LoadDutyValue
    _Timer6Overflow->_EPWM2_LoadDutyValue
    _Timer6Overflow->_PWM3_LoadDutyValue
    _Timer6Overflow->_PWM4_LoadDutyValue
    _PWM4_LoadDutyValue->i1_I2C1_ReadBuffer
    _PWM3_LoadDutyValue->i1_I2C1_ReadBuffer
    _EPWM2_LoadDutyValue->i1_I2C1_ReadBuffer
    _EPWM1_LoadDutyValue->i1_I2C1_ReadBuffer
    _I2C1_ISR->_I2C1_StatusCallback
    _I2C1_StatusCallback->_ADC_DisableChannel
    _I2C1_StatusCallback->_ADC_EnableChannel
    _ADC_ISR->_I2C1_WriteBuffer

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     585
                                             13 BANK0      4     4      0
                  _ADC_GetConversion
                  _ADC_SelectChannel
                _ADC_StartConversion
                   _EPWM1_Initialize
                    _EPWM1_PowerDown
                   _EPWM2_Initialize
                    _EPWM2_PowerDown
                    _I2C1_ReadBuffer
                      _I2C1_Shutdown
                       _I2C1_Startup
                    _PWM3_Initialize
                     _PWM3_PowerDown
                    _PWM4_Initialize
                     _PWM4_PowerDown
                  _SYSTEM_Initialize
                    _TMR2_StartTimer
                     _TMR2_StopTimer
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
                     _TMR6_StopTimer
 ---------------------------------------------------------------------------------
 (1) _TMR6_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                     _ADC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     174
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             2     0      2     174
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM4_PowerDown                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_PowerDown                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C1_Startup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C1_Shutdown                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C1_ReadBuffer                                      1     1      0     114
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EPWM2_PowerDown                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_PowerDown                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      37
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      34
                                              9 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0    1394
                                              8 BANK0      1     1      0
                            _ADC_ISR
                           _I2C1_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0     543
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR6_CallBack                                        0     0      0     543
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
                     _Timer6Overflow *
 ---------------------------------------------------------------------------------
 (7) _Timer6Overflow                                       3     3      0     543
                                              5 BANK0      3     3      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
              i1_ADC_StartConversion
                  i1_I2C1_ReadBuffer
                  i1_TMR2_StartTimer
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_I2C1_ReadBuffer                                    1     1      0      63
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_ADC_StartConversion                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _PWM4_LoadDutyValue                                   4     2      2     120
                                              1 BANK0      4     2      2
                  i1_I2C1_ReadBuffer (ARG)
 ---------------------------------------------------------------------------------
 (8) _PWM3_LoadDutyValue                                   4     2      2     120
                                              1 BANK0      4     2      2
                  i1_I2C1_ReadBuffer (ARG)
 ---------------------------------------------------------------------------------
 (8) _EPWM2_LoadDutyValue                                  4     2      2     120
                                              1 BANK0      4     2      2
                  i1_I2C1_ReadBuffer (ARG)
 ---------------------------------------------------------------------------------
 (8) _EPWM1_LoadDutyValue                                  4     2      2     120
                                              1 BANK0      4     2      2
                  i1_I2C1_ReadBuffer (ARG)
 ---------------------------------------------------------------------------------
 (7) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_ISR                                             2     2      0     170
                                              4 BANK0      2     2      0
                _I2C1_StatusCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_StatusCallback                                  3     3      0     155
                                              1 BANK0      3     3      0
                 _ADC_DisableChannel
                  _ADC_EnableChannel
 ---------------------------------------------------------------------------------
 (7) _ADC_EnableChannel                                    1     1      0      48
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADC_DisableChannel                                   1     1      0      48
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              3     3      0     681
                                              4 BANK0      1     1      0
                   _I2C1_WriteBuffer
                i1_ADC_SelectChannel
 ---------------------------------------------------------------------------------
 (6) i1_ADC_SelectChannel                                  2     2      0      21
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _I2C1_WriteBuffer                                     4     3      1     660
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_SelectChannel
   _ADC_StartConversion
   _EPWM1_Initialize
   _EPWM1_PowerDown
   _EPWM2_Initialize
   _EPWM2_PowerDown
   _I2C1_ReadBuffer
   _I2C1_Shutdown
   _I2C1_Startup
   _PWM3_Initialize
   _PWM3_PowerDown
   _PWM4_Initialize
   _PWM4_PowerDown
   _SYSTEM_Initialize
     _ADC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
     _WDT_Initialize
   _TMR2_StartTimer
   _TMR2_StopTimer
   _TMR6_SetInterruptHandler
   _TMR6_StartTimer
   _TMR6_StopTimer

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     _I2C1_WriteBuffer
     i1_ADC_SelectChannel
   _I2C1_ISR
     _I2C1_StatusCallback
       _ADC_DisableChannel
       _ADC_EnableChannel
   _TMR6_ISR
     _TMR6_CallBack
       Absolute function(Fake) *
       _TMR6_DefaultInterruptHandler *
       _Timer6Overflow *
         _EPWM1_LoadDutyValue
           i1_I2C1_ReadBuffer (ARG)
         _EPWM2_LoadDutyValue
           i1_I2C1_ReadBuffer (ARG)
         _PWM3_LoadDutyValue
           i1_I2C1_ReadBuffer (ARG)
         _PWM4_LoadDutyValue
           i1_I2C1_ReadBuffer (ARG)
         i1_ADC_StartConversion
         i1_I2C1_ReadBuffer
         i1_TMR2_StartTimer
         i1_TMR2_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      38       5       70.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      38      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      38      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Nov 16 20:11:30 2017

            __size_of_EPWM2_LoadDutyValue 0020                                         pc 0002  
                             __CFG_CP$OFF 0000                                        l56 0247  
                       ??_TMR6_StartTimer 0046                __size_of_ADC_EnableChannel 001C  
                 __size_of_Timer6Overflow 0094                          ??_TMR6_StopTimer 0046  
                                     l305 0183                                       l750 00E0  
                                     l718 0098                                       l753 00E6  
                                     l745 00CF                                       l762 0113  
                                     l759 00F9                                       _PR2 001B  
                            __CFG_CPD$OFF 0000                                       _PR6 041D  
                                     u815 0105                                       u827 017E  
                         __end_of_ADC_ISR 05CD                           _TMR2_Initialize 028B  
                         _PWM4_Initialize 01E7                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_IESO$ON 0000  
                __end_of_EPWM2_Initialize 01CD                    I2C1_ReadBuffer@address 0046  
                 __end_of_EPWM1_PowerDown 014D                                      S2735 05F2  
                     i1_ADC_SelectChannel 05DF                              __CFG_LVP$OFF 0000  
                        __end_of_I2C1_ISR 02C0                                      l1493 01FF  
                                    l2533 00D1                                      l1489 01F3  
                                    l2491 009E                                      l2487 0088  
                                    l2589 013A                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    _PLLR 04D6                                      _TMR2 001A  
                                    _TMR6 041C                           ??_I2C1_Shutdown 0046  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _WPUC 020E                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                          main@System_State 004D  
                                    _main 004D                   __end_of_EPWM2_PowerDown 0154  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000                                      start 0032  
                   ??_EPWM1_LoadDutyValue 0040                             __CFG_MCLRE$ON 0000  
                    ?i1_ADC_SelectChannel 003D                       _I2C1_StatusCallback 02C0  
                           __CFG_PLLEN$ON 0000            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 024B                                     ?_main 003D  
                       ??_I2C1_ReadBuffer 0046                                     _T2CON 001C  
                                   _T6CON 041E                                     i1l412 02B0  
                                   i1l334 03FF                                     i1l336 0403  
                                   i1l440 02E9                                     i1l192 0016  
                                   i1l337 0407                                     i1l346 03FB  
                                   i1l338 0417                                     i1l450 0302  
                                   i1l426 02C3                                     i1l194 0022  
                                   i1l451 030B                                     i1l443 02EB  
                                   i1l435 02CE                                     i1l460 0332  
                                   i1l444 02F1                                     i1l436 02D4  
                                   i1l453 0315                                     i1l445 02F3  
                                   i1l437 02D6                                     i1l446 02F8  
                                   i1l438 02DF                                     i1l198 002C  
                                   i1l463 033B                                     i1l455 0317  
                                   i1l472 0359                                     i1l456 031D  
                                   i1l448 02FA                                     i1l457 031F  
                                   i1l449 0300                                     i1l466 0345  
                                   i1l458 0328                                     i1l477 035C  
                                   i1l469 034F                                     i1l494 03E2  
                      _PWM4_LoadDutyValue 0517                                     u53_25 04CC  
                                   u54_25 04EC                                     u55_25 050C  
                                   u56_25 052C                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                  ?i1_ADC_StartConversion 003D         __size_of_TMR6_SetInterruptHandler 0009  
                __end_ofi1_TMR2_StopTimer 053D                         ??_I2C1_Initialize 0046  
               ?_TMR6_SetInterruptHandler 0046                      ?_I2C1_StatusCallback 003D  
                        __end_of_TMR6_ISR 0690                            _WDT_Initialize 0287  
                     ?_PWM4_LoadDutyValue 003E                                     main@i 004B  
                 __end_of_PWM3_Initialize 01E7                                     pclath 000A  
              __size_ofi1_I2C1_ReadBuffer 000B                                     status 0003  
                                   wtemp0 007E                           _TMR2_StartTimer 01F3  
             __size_of_ADC_DisableChannel 0019            ??_TMR6_DefaultInterruptHandler 003D  
                   ??i1_ADC_SelectChannel 003D                           __initialization 0034  
                            __end_of_main 0146                      ??_PWM4_LoadDutyValue 0040  
                 __end_of_PWM4_Initialize 01F3                   __end_of_TMR2_Initialize 0296  
                               ??_ADC_ISR 0041               ?_INTERRUPT_InterruptManager 003D  
                                  ??_main 004A                    __end_of_WDT_Initialize 028B  
                         _TMR6_Initialize 0273                     ??_I2C1_StatusCallback 003E  
                        ?_EPWM1_PowerDown 003D                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _CCP2AS 029C  
                __end_of_I2C1_WriteBuffer 05DF                                    i1S2741 069C  
                                  i1S2743 0665                                    i1S2745 0679  
                                  i1S2737 0651                                    i1S2739 0600  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _CCPR1H 0292                                    _CCPR2H 0299  
                                  _CCPR3H 0312                                    _CCPR1L 0291  
                                  _CCPR4H 0319                                    _CCPR2L 0298  
                                  _CCPR3L 0311                                    _CCPR4L 0318  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                                    i1l1503 03E6  
                                  i1l1511 03EF                                    i1l2311 04AA  
                                  i1l2303 0492                                    i1l1505 03E9  
                                  i1l2305 049D                                    i1l1507 03EC  
                                  i1l1701 0399                                    i1l2309 04A8  
                                  i1l1703 039F                                    i1l1711 03BC  
                                  i1l1623 02C7                                    i1l2361 056B  
                                  i1l1705 03A5                                    i1l1713 03CB  
                                  i1l1633 02E4                                    i1l2281 0419  
                                  i1l2329 0690                                    i1l2371 0595  
                                  i1l2363 0575                                    i1l1707 03AB  
                                  i1l2291 0454                                    i1l2283 041C  
                                  i1l2381 05AC                                    i1l2373 059A  
                                  i1l2365 057F                                    i1l2357 0545  
                                  i1l1709 03B1                                    i1l1661 032D  
                                  i1l1717 03D7                                    i1l2359 0558  
                                  i1l2295 0470                                    i1l2287 0438  
                                  i1l2385 05B3                                    i1l2377 05A4  
                                  i1l2369 0589                                    i1l1681 0360  
                                  i1l1673 0348                                    i1l1665 0334  
                                  i1l1649 0310                                    i1l2387 05BE  
                                  i1l1499 040B                                    i1l2299 048C  
                                  i1l2389 05C9                                    i1l1677 0352  
                                  i1l1669 033E                                    i1l1685 0363  
                                  i1l1687 0371                                    i1l1697 038D  
                                  i1l1785 02AE                                    i1l1699 0396  
                                  i1l1789 02B5                                    _OSCCON 0099  
                                  _WDTCON 0097                                    _SWDTEN 04B8  
                        ?_EPWM2_PowerDown 003D                            __CFG_PWRTE$OFF 0000  
             __size_of_PWM3_LoadDutyValue 0020                            __CFG_STVREN$ON 0000  
                          _Timer6Overflow 0418                                 ?_I2C1_ISR 003D  
                         ?_WDT_Initialize 003D                  ADC_GetConversion@channel 0049  
                     _EPWM2_LoadDutyValue 04D7                   __end_of_TMR2_StartTimer 01F6  
TMR6_SetInterruptHandler@InterruptHandler 0046                          ?_PWM3_Initialize 003D  
                       _SYSTEM_Initialize 0202                   __end_of__initialization 0049  
                      ?_SYSTEM_Initialize 003D                           _TMR6_StartTimer 01FF  
                          _CurrentChannel 003C                         ?_EPWM1_Initialize 003D  
            __size_of_ADC_StartConversion 0003                      ?_EPWM2_LoadDutyValue 003E  
                  __end_of_Timer6Overflow 04AC                              __pidataBANK0 0634  
                     ??_SYSTEM_Initialize 0048                                 ?_TMR6_ISR 003D  
                      ??_EPWM1_Initialize 0046                                ??_I2C1_ISR 0041  
                        ?_PWM4_Initialize 003D                          ?_TMR2_Initialize 003D  
                 __end_of_TMR6_Initialize 0287               PWM4_LoadDutyValue@dutyValue 003E  
                   __end_of_TMR6_CallBack 069C                            _OPTION_REGbits 0095  
                       ?_EPWM2_Initialize 003D                 __end_of_SYSTEM_Initialize 0220  
                      ??_EPWM2_Initialize 0046                                __pbssBANK0 004E  
                         _I2C1_ReadBuffer 01CD                                __pmaintext 004D  
                   ??_EPWM2_LoadDutyValue 0040                           ?_Timer6Overflow 003D  
                 __size_of_PWM3_PowerDown 0007          __end_of_TMR6_SetInterruptHandler 01FF  
                              ??_TMR6_ISR 0045                                __pintentry 0004  
                         _I2C1_Initialize 022D                                   _CCP1CON 0293  
                                 _CCP2CON 029A                                   _CCP3CON 0313  
                                 _CCP4CON 031A                                   _ECCP1AS 0295  
                                 _ADC_ISR 0540                                   _APFCON0 011D  
                                 _APFCON1 011E                   ??i1_ADC_StartConversion 003D  
                 __size_of_ADC_Initialize 000D                   __size_of_PWM4_PowerDown 0007  
       I2C1_StatusCallback@slaveWriteType 0051                                   _OSCTUNE 0098  
                                 _PWM1CON 0294                                   _PWM2CON 029B  
                       ?i1_TMR2_StopTimer 003D                                   _SSP1ADD 0212  
                                 _SSP1BUF 0211                                   _SSP1MSK 0213  
                 __size_of_TMR2_StopTimer 0003                          ?_TMR2_StartTimer 003D  
                 __end_of_TMR6_StartTimer 0202                        ??i1_TMR2_StopTimer 003D  
             __end_of_EPWM1_LoadDutyValue 04D7                     __end_of_I2C1_Shutdown 0157  
                        ?_TMR6_Initialize 003D                                   __ptext1 0168  
                                 __ptext2 0165                                   __ptext3 0202  
                                 __ptext4 0287                                   __ptext5 0273  
                                 __ptext6 01FF                                   __ptext7 01F6  
                                 __ptext8 028B                                   __ptext9 01F3  
                   _OSCILLATOR_Initialize 0242                                 _T2CONbits 001C  
                ??_PIN_MANAGER_Initialize 0046                                 _T6CONbits 041E  
                 __size_of_TMR6_StopTimer 0003                __size_of_SYSTEM_Initialize 001E  
                       ?_I2C1_WriteBuffer 003D                      end_of_initialization 0049  
                 __end_of_I2C1_ReadBuffer 01D8                __end_of_ADC_DisableChannel 03FC  
                      ??_I2C1_WriteBuffer 003E               __end_ofi1_ADC_SelectChannel 05F2  
                                 init_ram 06A4                                   initloop 06A5  
        I2C1_StatusCallback@eepromAddress 0052                   __end_of_I2C1_Initialize 0242  
                           ?_I2C1_Startup 003D               __size_of_PWM4_LoadDutyValue 0020  
             __end_of_I2C1_StatusCallback 03E3                          ??_WDT_Initialize 0046  
                               _PORTAbits 000C                                 _PORTBbits 000D  
                _TMR6_SetInterruptHandler 01F6                         __size_of_I2C1_ISR 002A  
                        __CFG_FOSC$INTOSC 0000                                 _TRISAbits 008C  
                               _TRISBbits 008D                                 _TRISCbits 008E  
                     _ADC_StartConversion 01A2                  ADC_EnableChannel@Channel 003D  
                        ?_TMR6_StartTimer 003D                  __size_of_EPWM1_PowerDown 0007  
                          ??_I2C1_Startup 0046                __end_of_PWM3_LoadDutyValue 0517  
                    ?_ADC_StartConversion 003D                            _PWM3_PowerDown 0157  
                __size_of_EPWM2_PowerDown 0007                            _ADC_Initialize 0220  
                       __size_of_TMR6_ISR 0003                            _PWM4_PowerDown 015E  
                  ?_OSCILLATOR_Initialize 003D                 ADC_DisableChannel@Channel 003D  
                     start_initialization 0034                 __size_of_EPWM1_Initialize 0014  
         __size_of_PIN_MANAGER_Initialize 0028                            _TMR2_StopTimer 0165  
            EPWM1_LoadDutyValue@dutyValue 003E                          ?_I2C1_ReadBuffer 003D  
                        ??_Timer6Overflow 0042                    __end_of_PWM3_PowerDown 015E  
                        ?_I2C1_Initialize 003D                     ??_ADC_StartConversion 0046  
               __size_of_EPWM2_Initialize 0014                  __size_of_PWM3_Initialize 000C  
                        I2C1_ISR@i2c_data 0042                               _CCPTMRSbits 029E  
                    I2C1_WriteBuffer@data 003D                    __end_of_ADC_Initialize 022D  
                  __end_of_PWM4_PowerDown 0165                               __pdataBANK0 0020  
                           _EEPROM_Buffer 0020                                  ?_ADC_ISR 003D  
          __size_ofi1_ADC_StartConversion 0003             __end_ofi1_ADC_StartConversion 0540  
                  __end_of_TMR2_StopTimer 0168                                 ___latbits 0002  
                           __pcstackBANK0 003D          I2C1_StatusCallback@i2c_bus_state 0040  
                __size_of_PWM4_Initialize 000C                  __size_of_TMR2_Initialize 000B  
                          _TMR6_StopTimer 0168               __end_of_EPWM2_LoadDutyValue 04F7  
                   _TMR6_InterruptHandler 004E                    __size_of_TMR6_CallBack 000C  
                         ?_PWM3_PowerDown 003D                    _PIN_MANAGER_Initialize 024B  
               __size_ofi1_TMR2_StopTimer 0003                         _ADC_SelectChannel 018F  
                       ??_EPWM1_PowerDown 0046                           ?_ADC_Initialize 003D  
                         ?_PWM4_PowerDown 003D                        ?_ADC_SelectChannel 003D  
                                _I2C1_ISR 0296              ??_INTERRUPT_InterruptManager 0045  
                               __pswtext1 05F2                                 __pswtext2 0651  
                               __pswtext3 0600                                 __pswtext4 069C  
                               __pswtext5 0665                                 __pswtext6 0679  
                       ??_EPWM2_PowerDown 0046                       ??_ADC_SelectChannel 0046  
                         ?_TMR2_StopTimer 003D                      __end_of_I2C1_Startup 01DB  
                  __end_of_TMR6_StopTimer 016B                                  _ADCValid 0057  
                        __CFG_WDTE$SWDTEN 0000                         i1_TMR2_StartTimer 0537  
                             _GPIO1Enable 0055                               _GPIO3Enable 0054  
                             _GPIO4Enable 0053                                  _LATAbits 010C  
                                _LATBbits 010D                                  _LATCbits 010E  
                      ?i1_TMR2_StartTimer 003D                                  _PIE1bits 0091  
                                _PIE3bits 0093                  __size_of_TMR2_StartTimer 0003  
               __end_of_ADC_SelectChannel 01A2       __size_of_INTERRUPT_InterruptManager 002E  
                                _PIR1bits 0011                                  _PIR3bits 0013  
            __size_of_EPWM1_LoadDutyValue 0020                ??_TMR6_SetInterruptHandler 0048  
                     ??i1_TMR2_StartTimer 003D                 __size_of_I2C1_WriteBuffer 0012  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
                                _SSP1CON3 0217                        _ADC_DisableChannel 03E3  
                                _PSTR1CON 0296                                  _PSTR2CON 029D  
                                _TMR6_ISR 068D                                  _SSP1STAT 0214  
                     _I2C1_slaveWriteData 003B                  i1I2C1_ReadBuffer@address 003D  
                       ??_PWM3_Initialize 0046                          __size_of_ADC_ISR 008D  
                              _ADCON0bits 009D                  ADC_SelectChannel@channel 0047  
                     ?_ADC_DisableChannel 003D                             _TMR6_CallBack 0690  
                  __size_of_I2C1_Shutdown 0003                                  _WPUAbits 020C  
                                _WPUBbits 020D                           ?_TMR6_StopTimer 003D  
                        _EPWM1_Initialize 01A5                  __size_of_TMR6_Initialize 0014  
               __end_ofi1_TMR2_StartTimer 053A                         ??_PWM4_Initialize 0046  
                       ??_TMR2_Initialize 0046                      ??_ADC_DisableChannel 003D  
                        _EPWM2_Initialize 01B9                __end_of_PWM4_LoadDutyValue 0537  
                       _ADC_GetConversion 016B              __size_ofi1_ADC_SelectChannel 0013  
              i1ADC_SelectChannel@channel 003E                   ??_OSCILLATOR_Initialize 0046  
                      ?_ADC_GetConversion 0046                       Timer6Overflow@count 0050  
                      _PWM3_LoadDutyValue 04F7                            ?_TMR6_CallBack 003D  
                              _ANSELAbits 018C                         _ADC_EnableChannel 03FC  
                     ??_ADC_GetConversion 0048                        ?_ADC_EnableChannel 003D  
            __size_of_I2C1_StatusCallback 0123                                  __ptext10 024B  
                                __ptext11 0242                                  __ptext20 01CD  
                                __ptext12 022D                                  __ptext21 014D  
                                __ptext13 0220                                  __ptext30 0690  
                                __ptext22 01B9                                  __ptext14 015E  
                                __ptext31 06AA                                  __ptext23 0146  
                                __ptext15 01E7                                  __ptext40 04B7  
                                __ptext32 0418                                  __ptext24 01A5  
                                __ptext16 0157                                  __ptext41 0296  
                                __ptext33 053A                                  __ptext25 01A2  
                                __ptext17 01DB                                  __ptext42 02C0  
                                __ptext34 0537                                  __ptext26 018F  
                                __ptext18 01D8                                  __ptext43 03FC  
                                __ptext35 04AC                                  __ptext27 016B  
                                __ptext19 0154                                  __ptext44 03E3  
                                __ptext36 053D                                  __ptext45 0540  
                                __ptext37 0517                                  __ptext29 068D  
                                __ptext46 05DF                                  __ptext38 04F7  
                                __ptext47 05CD                                  __ptext39 04D7  
                     ?_PWM3_LoadDutyValue 003E                              _SSP1CON1bits 0215  
                            _SSP1CON2bits 0216                       ??_ADC_EnableChannel 003D  
                           __size_of_main 00F9                             _I2C1_Shutdown 0154  
               __end_of_ADC_GetConversion 018F                __size_of_ADC_SelectChannel 0013  
                __size_of_TMR6_StartTimer 0003                          i1_TMR2_StopTimer 053A  
                 I2C1_WriteBuffer@address 0040                      ??_PWM3_LoadDutyValue 0040  
                                int$flags 007E                                  _pwm_lock 0056  
                       ??_TMR2_StartTimer 0046        __end_of_INTERRUPT_InterruptManager 0032  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 0214  
               __end_of_ADC_EnableChannel 0418                     __size_of_I2C1_Startup 0003  
                              _INTCONbits 000B                __size_ofi1_TMR2_StartTimer 0003  
    __end_of_TMR6_DefaultInterruptHandler 06AB     __size_of_TMR6_DefaultInterruptHandler 0001  
            _TMR6_DefaultInterruptHandler 06AA                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                          ??_PWM3_PowerDown 0046  
             __end_of_ADC_StartConversion 01A5              EPWM2_LoadDutyValue@dutyValue 003E  
                         _EPWM1_PowerDown 0146                   ?_PIN_MANAGER_Initialize 003D  
                       ??_TMR6_Initialize 0048                            ?_I2C1_Shutdown 003D  
                       __CFG_CLKOUTEN$OFF 0000                         i1_I2C1_ReadBuffer 04AC  
                        ??_ADC_Initialize 0046                          ??_PWM4_PowerDown 0046  
                            _I2C1_Startup 01D8                        ?i1_I2C1_ReadBuffer 003D  
                         _EPWM2_PowerDown 014D                  __size_of_I2C1_ReadBuffer 000B  
                        _I2C1_WriteBuffer 05CD               PWM3_LoadDutyValue@dutyValue 003E  
                     ??i1_I2C1_ReadBuffer 003D                          ??_TMR2_StopTimer 0046  
                         ??_TMR6_CallBack 0045                  __size_of_I2C1_Initialize 0015  
                   i1_ADC_StartConversion 053D                       _EPWM1_LoadDutyValue 04B7  
          __end_of_PIN_MANAGER_Initialize 0273                 __end_ofi1_I2C1_ReadBuffer 04B7  
           ?_TMR6_DefaultInterruptHandler 003D                __size_of_ADC_GetConversion 0024  
                         _PWM3_Initialize 01DB                  __end_of_EPWM1_Initialize 01B9  
                    ?_EPWM1_LoadDutyValue 003E  
